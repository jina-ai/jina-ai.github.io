import{aD as d}from"./index-2IY0-8eZ.js";const o="https://embeddings-dashboard-api.jina.ai",i="https://api.jina.ai";var l=(t=>(t.CONSUME="consume",t.PURCHASE="purchase",t.TRIAL="trial",t))(l||{}),u=(t=>(t.IN_PROGRESS="in-progress",t.FAILED="failed",t.COMPLETED="completed",t))(u||{});const p=["price_1PqrlqEoTOtb5eZvFh1Vhdm6","price_1PqrnpEoTOtb5eZv3woXVYU1"],f=d("embedding",{state:()=>({apiKey:"",apiKeyInfo:void 0,isApiKeyLoading:!1,isApiKeyInfoLoading:!1,models:[],allModels:[],products:[],testData:[],userDocuments:"",userSearchDocs:"",userVisualizeDocs:"",showMaximized:!1,classifiers:[],task:"",isTurnstileError:!1,isTurnstileUnsupported:!1}),persist:{paths:["apiKey","testData","apiKeyInfo"]},getters:{baseEnModel:t=>t.models.find(e=>e.name==="jina-embeddings-v2-base-en"),jinaRerankerV1:t=>t.models.find(e=>e.name==="jina-reranker-v1-base-en"),jinaRerankerMultilingual:t=>t.models.find(e=>e.name==="jina-reranker-v2-base-multilingual"),clipV1:t=>t.models.find(e=>e.name==="jina-clip-v1"),defaultEmbeddingModel:t=>t.models.find(e=>e.name==="jina-clip-v2"),baseZhModel:t=>t.models.find(e=>e.name==="jina-embeddings-v2-base-zh"),baseDeModel:t=>t.models.find(e=>e.name==="jina-embeddings-v2-base-de"),embeddingsV3:t=>t.models.find(e=>e.name==="jina-embeddings-v3"),newModels:t=>t.models.filter(e=>new Date().getTime()-new Date(e.created_at).getTime()<1e3*60*60*24*30).map(e=>e.name),apiKeyTokens:t=>{var e,r;return(r=(e=t.apiKeyInfo)==null?void 0:e.wallet.total_balance)!=null?r:0},isPaidUser:t=>{var e;return!!((e=t.apiKeyInfo)!=null&&e.email)},isPremiumPaidUser:t=>{var e,r;return!!((e=t.apiKeyInfo)!=null&&e.email)&&((r=t.apiKeyInfo)==null?void 0:r.metadata.speed_level)===2},isAutoCharge:t=>{var e,r;return!!((e=t.apiKeyInfo)!=null&&e.email)||((r=t.apiKeyInfo)==null?void 0:r.metadata.auto_recharge)}},actions:{setApiKeyInfo(t){t&&(this.apiKeyInfo=JSON.parse(JSON.stringify(t)))},async getReplicas(t,e){try{const r=await fetch(`${o}/api/v1/models/slug/${e}`,{method:"GET"});if(!r.ok)throw new Error(`getReplicas error! Status: ${r.status}`);return(await r.json()).num_replicas}catch(r){console.error("getReplicas error:",r)}},async generateApiKey(t){this.isApiKeyLoading=!0;const e=new FormData;e.set("cf-turnstile-response",t);try{const r=await fetch(`${o}/api/v1/api_key`,{method:"POST",body:e});if(!r.ok)throw new Error(`getApiKey error! Status: ${r.status}`);const a=await r.json();return this.apiKey=a.api_key,!0}catch(r){return console.error("getApiKey error:",r),!1}finally{this.isApiKeyLoading=!1}},async getCurrentKeyInfo(){this.isApiKeyInfoLoading=!0;try{const t=await fetch(`${o}/api/v1/api_key/user?api_key=${this.apiKey}`);if(t.ok){this.apiKeyInfo=await t.json();return}this.apiKeyInfo=void 0,console.error(`getTokens error! Status: ${t.status}`)}catch(t){this.apiKeyInfo=void 0,console.error("getTokens error:",t)}finally{this.isApiKeyInfoLoading=!1}},async getKeyInfo(t){if(t){this.isApiKeyInfoLoading=!0;try{const e=await fetch(`${o}/api/v1/api_key/user?api_key=${t}`);return e.ok?await e.json():void 0}catch{return}finally{this.isApiKeyInfoLoading=!1}}},async getModels(t=[]){try{let e=`${o}/api/v1/models`;t.length&&(e=`${e}?${t.map(s=>`tag=${s}`).join("&")}`);const r=await fetch(e);if(!r.ok)throw new Error(`getModels error! Status: ${r.status}`);const a=await r.json();t.length?this.models=a:this.allModels=a,console.log("getModels data:",a)}catch(e){console.error("getModels error:",e)}},async getProducts(){try{const t=await fetch(`${o}/api/v1/product`);if(!t.ok)throw new Error(`getProducts error! Status: ${t.status}`);const e=(await t.json()).filter(r=>p.includes(r.price_id));e.unshift({id:"0",product_id:"0",product_name:"1M tokens",product_description:"A pack of 1 million tokens",price:0,price_id:"0",currency:"USD",token_quantity:1e6}),console.log("getProducts data:",e),this.products=e}catch(t){console.error("getProducts error:",t)}},async getUsage(t){try{const e=await fetch(`${o}/api/v1/billing/transaction`,{headers:{Authorization:`Bearer ${t}`}});if(!e.ok)throw new Error(`getUsage error! Status: ${e.status}`);return await e.json()}catch(e){console.error("getUsage error:",e)}},async getLatestUsage(t){try{const e=await fetch(`${o}/api/v1/billing/paginated_transaction?num_records=1`,{headers:{Authorization:`Bearer ${t}`}});if(!e.ok)throw new Error(`getUsage error! Status: ${e.status}`);return(await e.json())[0]}catch(e){console.error("getUsage error:",e)}},async checkoutWithStripe(t,e){try{const r=await fetch(`${o}/api/v1/checkout_session`,{headers:{Authorization:`Bearer ${t}`,"Content-Type":"application/json"},method:"POST",body:JSON.stringify(e),mode:"cors",credentials:"include"});if(!r.ok)throw new Error(`checkoutWithStripe error! Status: ${r.status}`);return await r.json()}catch(r){console.error("checkoutWithStripe error:",r)}},async bulkEmbedding(t,e){var n,c;const r={accept:"application/json",Authorization:`Bearer ${t}`},a=new FormData;a.append("model",e.model),a.append("email",(n=e.email)!=null?n:""),a.append("file",e.file);const s=await fetch(`${i}/v1/bulk-embeddings`,{method:"POST",headers:r,body:a});if(s.ok)return await s.json();throw new Error(`${s.status}: ${s.statusText||((c=await s.json())==null?void 0:c.detail)}`)},async checkBulk(t,e){var s;const r={accept:"application/json",Authorization:`Bearer ${t}`},a=await fetch(`${i}/v1/bulk-embeddings/${e}`,{method:"GET",headers:r});if(a.ok)return await a.json();throw new Error(`${a.status}: ${a.statusText||((s=await a.json())==null?void 0:s.detail)}`)},async getBulkResult(t,e){var s;const r={accept:"application/json",Authorization:`Bearer ${t}`},a=await fetch(`${i}/v1/bulk-embeddings/${e}/download-result`,{method:"POST",headers:r});if(a.ok){const{download_url:n}=await a.json();return n}else throw new Error(`${a.status}: ${a.statusText||((s=await a.json())==null?void 0:s.detail)}`)},async cancelAutoRecharge(t){const e=await fetch(`${o}/api/v1/cancel_auto_recharge`,{method:"POST",headers:{accept:"application/json",Authorization:`Bearer ${t}`}});if(e.ok)return!0;throw new Error(`Disable auto-recharge error! Status: ${e.status}`)},async getClassifiers(t){try{const e={accept:"application/json",Authorization:`Bearer ${t}`},r=await fetch(`${o}/api/v1/classifiers`,{method:"GET",headers:e});if(!r.ok)throw new Error(`getModels error! Status: ${r.status}`);const a=await r.json();this.classifiers=a}catch(e){console.error("getModels error:",e)}}}});export{u as B,i as S,l as T,f as u};

import{s as k,p as E,az as v,bR as c,k as j,J as A}from"./index-CO4AIAp3.js";import{S as d,s as y,a as b,c as S}from"./_setToArray-DgTCFg8q.js";function _(){}function I(e,t,r,a){for(var s=e.length,o=r+-1;++o<s;)if(t(e[o],o,e))return o;return-1}function K(e){return e!==e}function D(e,t,r){for(var a=r-1,s=e.length;++a<s;)if(e[a]===t)return a;return-1}function O(e,t,r){return t===t?D(e,t,r):I(e,K,r)}function x(e,t){var r=e==null?0:e.length;return!!r&&O(e,t,0)>-1}var P=1/0,R=d&&1/y(new d([,-0]))[1]==P?function(e){return new d(e)}:_,T=200;function L(e,t,r){var a=-1,s=x,o=e.length,l=!0,i=[],h=i;if(o>=T){var g=R(e);if(g)return y(g);l=!1,s=S,h=new b}else h=i;e:for(;++a<o;){var u=e[a],p=u;if(u=u!==0?u:0,l&&p===p){for(var w=h.length;w--;)if(h[w]===p)continue e;i.push(u)}else s(h,p,r)||(h!==i&&h.push(p),i.push(u))}return i}function C(e){return e&&e.length?L(e):[]}const J=k({name:"QSpace",setup(){const e=E("div",{class:"q-space"});return()=>e}}),n="https://embeddings-dashboard-api.jina.ai",f="https://api.jina.ai",z=["price_1PqrlqEoTOtb5eZvFh1Vhdm6","price_1PqrnpEoTOtb5eZv3woXVYU1"];var U=(e=>(e.UNLOADED="unloaded",e.IDLE="idle",e.LOADING="loading",e.LOADED="loaded",e.ERROR="error",e.UNSUPPORTED="unsupported",e.EXPIRED="expired",e.CLEANUP="cleanup",e))(U||{}),B=(e=>(e.CONSUME="consume",e.PURCHASE="purchase",e.TRIAL="trial",e.TRANSFER_IN="transfer in",e.TRANSFER_OUT="transfer out",e))(B||{}),N=(e=>(e.IN_PROGRESS="in-progress",e.FAILED="failed",e.COMPLETED="completed",e))(N||{});const V=v("embedding",{state:()=>({apiKey:"",apiKeyInfo:void 0,isApiKeyLoading:!1,isApiKeyInfoLoading:!1,models:[],allModels:[],products:[],testData:[],userDocuments:"",userSearchDocs:"",userVisualizeDocs:"",showMaximized:!1,classifiers:[],task:"",turnstileState:"unloaded"}),persist:{paths:["apiKey","testData","apiKeyInfo"]},getters:{apiKeyTokens:e=>{var t,r;return(r=(t=e.apiKeyInfo)==null?void 0:t.wallet.total_balance)!=null?r:0},isPaidUser:e=>{var t;return!!((t=e.apiKeyInfo)!=null&&t.email)},isPremiumPaidUser:e=>{var t,r;return!!((t=e.apiKeyInfo)!=null&&t.email)&&((r=e.apiKeyInfo)==null?void 0:r.metadata.speed_level)===2},isAutoCharge:e=>{var t,r;return!!((t=e.apiKeyInfo)!=null&&t.email)||((r=e.apiKeyInfo)==null?void 0:r.metadata.auto_recharge)}},actions:{setApiKeyInfo(e){e&&(this.apiKeyInfo=JSON.parse(JSON.stringify(e)))},async getReplicas(e,t){try{const r=await fetch(`${n}/api/v1/models/slug/${t}`,{method:"GET"});if(!r.ok)throw new Error(`getReplicas error! Status: ${r.status}`);return(await r.json()).num_replicas}catch(r){console.error("getReplicas error:",r)}},async generateApiKey(e){this.isApiKeyLoading=!0;const t=new FormData;t.set("cf-turnstile-response",e);try{const r=await fetch(`${n}/api/v1/api_key`,{method:"POST",body:t});if(!r.ok)throw new Error(`getApiKey error! Status: ${r.status}`);const a=await r.json();return this.apiKey=a.api_key,!0}catch(r){return console.error("getApiKey error:",r),!1}finally{this.isApiKeyLoading=!1}},async generate0TokenApiKey(e){var r;this.isApiKeyLoading=!0;const t=new FormData;t.set("cf-turnstile-response",e);try{const a=await fetch(`${n}/api/v1/api_key/empty`,{method:"POST",body:t});if(!a.ok)throw new Error(`${a.status}: ${((r=await a.json())==null?void 0:r.detail)||a.statusText}`);return(await a.json()).api_key}catch(a){c.create({message:a instanceof Error?a.message:String(a),textColor:"negative",icon:"error"})}finally{this.isApiKeyLoading=!1}},async revokeApiKey(e,t){var a;const r=new FormData;r.set("cf-turnstile-response",t);try{const s=await fetch(`${n}/api/v1/api_key`,{method:"DELETE",headers:{Authorization:`Bearer ${e}`},body:r});if(!s.ok)throw new Error(`${s.status}: ${((a=await s.json())==null?void 0:a.detail)||s.statusText}`);return!0}catch(s){c.create({message:s instanceof Error?s.message:String(s),textColor:"negative",icon:"error"})}},async getCurrentKeyInfo(){this.isApiKeyInfoLoading=!0;try{const e=await fetch(`${n}/api/v1/api_key/user?api_key=${this.apiKey}`);if(e.ok){this.apiKeyInfo=await e.json();return}this.apiKeyInfo=void 0,console.error(`getTokens error! Status: ${e.status}`)}catch(e){this.apiKeyInfo=void 0,console.error("getTokens error:",e)}finally{this.isApiKeyInfoLoading=!1}},async getKeyInfo(e){if(e){this.isApiKeyInfoLoading=!0;try{const t=await fetch(`${n}/api/v1/api_key/user?api_key=${e}`);return t.ok?await t.json():void 0}catch{return}finally{this.isApiKeyInfoLoading=!1}}},async getModels(e=[]){try{let t=`${n}/api/v1/models`;e.length&&(t=`${t}?${e.map(s=>`tag=${s}`).join("&")}`);const r=await fetch(t);if(!r.ok)throw new Error(`getModels error! Status: ${r.status}`);const a=await r.json();e.length?this.models=a:this.allModels=a,console.log("getModels data:",a)}catch(t){console.error("getModels error:",t)}},async getProducts(){try{const e=await fetch(`${n}/api/v1/product`);if(!e.ok)throw new Error(`getProducts error! Status: ${e.status}`);const t=(await e.json()).filter(r=>z.includes(r.price_id));t.unshift({id:"0",product_id:"0",product_name:"1M tokens",product_description:"A pack of 1 million tokens",price:0,price_id:"0",currency:"USD",token_quantity:1e6}),console.log("getProducts data:",t),this.products=t}catch(e){console.error("getProducts error:",e)}},async getUsage(e){try{const t=await fetch(`${n}/api/v1/billing/transaction`,{headers:{Authorization:`Bearer ${e}`}});if(!t.ok)throw new Error(`getUsage error! Status: ${t.status}`);return await t.json()}catch(t){console.error("getUsage error:",t)}},async getLatestUsage(e){try{const t=await fetch(`${n}/api/v1/billing/paginated_transaction?num_records=1`,{headers:{Authorization:`Bearer ${e}`}});if(!t.ok)throw new Error(`getUsage error! Status: ${t.status}`);return(await t.json())[0]}catch(t){console.error("getUsage error:",t)}},async checkoutWithStripe(e,t){try{const r=await fetch(`${n}/api/v1/checkout_session`,{headers:{Authorization:`Bearer ${e}`,"Content-Type":"application/json"},method:"POST",body:JSON.stringify(t),mode:"cors",credentials:"include"});if(!r.ok)throw new Error(`checkoutWithStripe error! Status: ${r.status}`);return await r.json()}catch(r){console.error("checkoutWithStripe error:",r)}},async bulkEmbedding(e,t){var o,l;const r={accept:"application/json",Authorization:`Bearer ${e}`},a=new FormData;a.append("model",t.model),a.append("email",(o=t.email)!=null?o:""),a.append("file",t.file);const s=await fetch(`${f}/v1/bulk-embeddings`,{method:"POST",headers:r,body:a});if(s.ok)return await s.json();throw new Error(`${s.status}: ${s.statusText||((l=await s.json())==null?void 0:l.detail)}`)},async checkBulk(e,t){var s;const r={accept:"application/json",Authorization:`Bearer ${e}`},a=await fetch(`${f}/v1/bulk-embeddings/${t}`,{method:"GET",headers:r});if(a.ok)return await a.json();throw new Error(`${a.status}: ${a.statusText||((s=await a.json())==null?void 0:s.detail)}`)},async getBulkResult(e,t){var s;const r={accept:"application/json",Authorization:`Bearer ${e}`},a=await fetch(`${f}/v1/bulk-embeddings/${t}/download-result`,{method:"POST",headers:r});if(a.ok){const{download_url:o}=await a.json();return o}else throw new Error(`${a.status}: ${a.statusText||((s=await a.json())==null?void 0:s.detail)}`)},async setAutoRecharge(e,t){var a;const r={price_id:t.priceId,success_url:t.successUrl,cancel_url:t.cancelUrl,metadata:{auto_recharge:!0,threshold:t.threshold}};try{const s=await fetch(`${n}/api/v1/auto_recharge`,{method:"POST",headers:{accept:"application/json","Content-Type":"application/json",Authorization:`Bearer ${e}`},body:JSON.stringify(r)});if(s.ok)return(await s.json()).url;throw new Error(`${s.status}: ${((a=await s.json())==null?void 0:a.detail)||s.statusText}`)}catch(s){c.create({message:s instanceof Error?s.message:String(s),textColor:"negative",icon:"error"})}},async updateAutoRecharge(e,t){var r;try{const a=await fetch(`${n}/api/v1/auto_recharge/settings?threshold=${t}`,{method:"POST",headers:{accept:"application/json","Content-Type":"application/json",Authorization:`Bearer ${e}`}});if(a.ok)return!0;throw new Error(`${a.status}: ${((r=await a.json())==null?void 0:r.detail)||a.statusText}`)}catch(a){c.create({message:a instanceof Error?a.message:String(a),textColor:"negative",icon:"error"})}},async cancelAutoRecharge(e){var t;try{const r=await fetch(`${n}/api/v1/auto_recharge`,{method:"DELETE",headers:{accept:"application/json",Authorization:`Bearer ${e}`}});if(r.ok)return!0;throw new Error(`${r.status}: ${((t=await r.json())==null?void 0:t.detail)||r.statusText}`)}catch(r){c.create({message:r instanceof Error?r.message:String(r),textColor:"negative",icon:"error"})}},async getClassifiers(e){try{const t={accept:"application/json",Authorization:`Bearer ${e}`},r=await fetch(`${n}/api/v1/classifiers`,{method:"GET",headers:t});if(!r.ok)throw new Error(`Get classifiers error! Status: ${r.status}`);const a=await r.json();this.classifiers=a}catch(t){console.error("Get classifiers error:",t)}},async setBalanceNotification(e,t){var r;try{if(!Array.isArray(t.thresholds)||t.thresholds.length>3)throw new Error("Invalid thresholds: Must be array with max 3 values");const s={thresholds:C(t.thresholds),email:t.email},o=await fetch(`${n}/api/v1/billing/balance_notification`,{method:"POST",headers:{accept:"application/json","Content-Type":"application/json",Authorization:`Bearer ${e}`},body:JSON.stringify(s)});if(o.ok)return o.json();throw new Error(`${o.status}: ${((r=await o.json())==null?void 0:r.detail)||o.statusText}`)}catch(a){c.create({message:a instanceof Error?a.message:String(a),textColor:"negative",icon:"error"})}},async cancelBalanceNotification(e){var t;try{const r=await fetch(`${n}/api/v1/billing/balance_notification`,{method:"DELETE",headers:{accept:"application/json",Authorization:`Bearer ${e}`}});if(r.ok)return!0;throw new Error(`${r.status}: ${((t=await r.json())==null?void 0:t.detail)||r.statusText}`)}catch(r){c.create({message:r instanceof Error?r.message:String(r),textColor:"negative",icon:"error"})}},async transferToken(e,t){var r;try{const a=new FormData;a.set("cf-turnstile-response",t);const s=new URL(`${n}/api/v1/billing/transfer_balance`);s.searchParams.append("receiver_key",e.target),e.withRevoke&&s.searchParams.append("revoke_sender_key","true");const o=await fetch(s,{method:"POST",headers:{Authorization:`Bearer ${e.source}`},body:a});if(o.ok)return o.json();throw new Error(`${o.status}: ${((r=await o.json())==null?void 0:r.detail)||o.statusText}`)}catch(a){c.create({message:a instanceof Error?a.message:String(a),textColor:"negative",icon:"error"})}}}}),F=()=>!0;function M(e){const t={};return e.forEach(r=>{t[r]=F}),t}function m(){const{emit:e,proxy:t}=A(),r=j(null);function a(){r.value.show()}function s(){r.value.hide()}function o(i){e("ok",i),s()}function l(){e("hide")}return Object.assign(t,{show:a,hide:s}),{dialogRef:r,onDialogHide:l,onDialogOK:o,onDialogCancel:s}}const $=["ok","hide"];m.emits=$;m.emitsObject=M($);export{N as B,J as Q,f as S,B as T,m as a,U as b,x as c,C as d,V as u};

{
  "slug": "readerlm-v2-frontier-small-language-model-for-html-to-markdown-and-json",
  "id": "6785bfd62defad0001fb5f22",
  "uuid": "a8e2e140-18e5-49e6-aa8f-71bf4c9e3293",
  "title": "ReaderLM v2：用于 HTML 转 Markdown 和 JSON 的前沿小型语言模型",
  "html": "<figure class=\"kg-card kg-bookmark-card\"><a class=\"kg-bookmark-container\" href=\"https://huggingface.co/jinaai/ReaderLM-v2?ref=jina-ai-gmbh.ghost.io\"><div class=\"kg-bookmark-content\"><div class=\"kg-bookmark-title\">jinaai/ReaderLM-v2 · Hugging Face</div><div class=\"kg-bookmark-description\">我们正在通过开源和开放科学推进和普及人工智能。</div><div class=\"kg-bookmark-metadata\"><img class=\"kg-bookmark-icon\" src=\"https://jina-ai-gmbh.ghost.io/content/images/icon/favicon-24.ico\" alt=\"\"></div></div><div class=\"kg-bookmark-thumbnail\"><img src=\"https://jina-ai-gmbh.ghost.io/content/images/thumbnail/ReaderLM-v2.png\" alt=\"\" onerror=\"this.style.display = 'none'\"></div></a></figure><p>2024 年 4 月，我们推出了 <a href=\"https://jina.ai/reader?ref=jina-ai-gmbh.ghost.io\">Jina Reader</a>，这是一个 API，只需在 URL 前添加 <code>r.jina.ai</code> 前缀，即可将任何网页转换为 LLM 友好的 markdown。2024 年 9 月，<a href=\"https://jina.ai/news/reader-lm-small-language-models-for-cleaning-and-converting-html-to-markdown?ref=jina-ai-gmbh.ghost.io\">我们推出了两个专门用于将原始 HTML 转换为整洁 markdown 的小型语言模型：<code>reader-lm-0.5b</code> 和 <code>reader-lm-1.5b</code></a>。今天，我们很高兴推出 ReaderLM 的第二代，这是一个 1.5B 参数的语言模型，可以将原始 HTML 转换为格式精美的 markdown 或 JSON，具有更高的准确性和更好的长文本处理能力。<code>ReaderLM-v2</code> 可处理高达 512K 个 token 的输入和输出组合长度。该模型支持 29 种语言，包括英语、中文、日语、韩语、法语、西班牙语、葡萄牙语、德语、意大利语、俄语、越南语、泰语、阿拉伯语等。</p><p>得益于其<strong>新的训练范式</strong>和<strong>更高质量的训练数据</strong>，<code>ReaderLM-v2</code> 较其前代产品有了重大进步，特别是在处理长文本内容和生成 markdown 语法方面。虽然第一代将 HTML 转 markdown 的转换视为<a href=\"https://jina.ai/news/reader-lm-small-language-models-for-cleaning-and-converting-html-to-markdown/?ref=jina-ai-gmbh.ghost.io#:~:text=primarily%20needs%20to-,selective%2Dcopy,-from%20the%20input\">一个\"选择性复制\"任务</a>，但<strong>v2 将其视为真正的翻译过程</strong>。这种转变使模型能够熟练运用 markdown 语法，擅长<strong>生成代码框、嵌套列表、表格和 LaTex 方程式等复杂元素</strong>。</p><figure class=\"kg-card kg-video-card kg-width-regular kg-card-hascaption\" data-kg-thumbnail=\"https://jina-ai-gmbh.ghost.io/content/media/2025/01/Heading--1500-x-800-px---1500-x-1000-px-_thumb.jpg\" data-kg-custom-thumbnail=\"\">\n            <div class=\"kg-video-container\">\n                <video src=\"https://jina-ai-gmbh.ghost.io/content/media/2025/01/Heading--1500-x-800-px---1500-x-1000-px-.mp4\" poster=\"https://img.spacergif.org/v1/1500x1000/0a/spacer.png\" width=\"1500\" height=\"1000\" loop=\"\" autoplay=\"\" muted=\"\" playsinline=\"\" preload=\"metadata\" style=\"background: transparent url('https://jina-ai-gmbh.ghost.io/content/media/2025/01/Heading--1500-x-800-px---1500-x-1000-px-_thumb.jpg') 50% 50% / cover no-repeat;\"></video>\n                <div class=\"kg-video-overlay\">\n                    <button class=\"kg-video-large-play-icon\" aria-label=\"Play video\">\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n                            <path d=\"M23.14 10.608 2.253.164A1.559 1.559 0 0 0 0 1.557v20.887a1.558 1.558 0 0 0 2.253 1.392L23.14 13.393a1.557 1.557 0 0 0 0-2.785Z\"></path>\n                        </svg>\n                    </button>\n                </div>\n                <div class=\"kg-video-player-container kg-video-hide\">\n                    <div class=\"kg-video-player\">\n                        <button class=\"kg-video-play-icon\" aria-label=\"Play video\">\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n                                <path d=\"M23.14 10.608 2.253.164A1.559 1.559 0 0 0 0 1.557v20.887a1.558 1.558 0 0 0 2.253 1.392L23.14 13.393a1.557 1.557 0 0 0 0-2.785Z\"></path>\n                            </svg>\n                        </button>\n                        <button class=\"kg-video-pause-icon kg-video-hide\" aria-label=\"Pause video\">\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n                                <rect x=\"3\" y=\"1\" width=\"7\" height=\"22\" rx=\"1.5\" ry=\"1.5\"></rect>\n                                <rect x=\"14\" y=\"1\" width=\"7\" height=\"22\" rx=\"1.5\" ry=\"1.5\"></rect>\n                            </svg>\n                        </button>\n                        <span class=\"kg-video-current-time\">0:00</span>\n                        <div class=\"kg-video-time\">\n                            /<span class=\"kg-video-duration\">0:21</span>\n                        </div>\n                        <input type=\"range\" class=\"kg-video-seek-slider\" max=\"100\" value=\"0\">\n                        <button class=\"kg-video-playback-rate\" aria-label=\"Adjust playback speed\">1×</button>\n                        <button class=\"kg-video-unmute-icon\" aria-label=\"Unmute\">\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n                                <path d=\"M15.189 2.021a9.728 9.728 0 0 0-7.924 4.85.249.249 0 0 1-.221.133H5.25a3 3 0 0 0-3 3v2a3 3 0 0 0 3 3h1.794a.249.249 0 0 1 .221.133 9.73 9.73 0 0 0 7.924 4.85h.06a1 1 0 0 0 1-1V3.02a1 1 0 0 0-1.06-.998Z\"></path>\n                            </svg>\n                        </button>\n                        <button class=\"kg-video-mute-icon kg-video-hide\" aria-label=\"Mute\">\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n                                <path d=\"M16.177 4.3a.248.248 0 0 0 .073-.176v-1.1a1 1 0 0 0-1.061-1 9.728 9.728 0 0 0-7.924 4.85.249.249 0 0 1-.221.133H5.25a3 3 0 0 0-3 3v2a3 3 0 0 0 3 3h.114a.251.251 0 0 0 .177-.073ZM23.707 1.706A1 1 0 0 0 22.293.292l-22 22a1 1 0 0 0 0 1.414l.009.009a1 1 0 0 0 1.405-.009l6.63-6.631A.251.251 0 0 1 8.515 17a.245.245 0 0 1 .177.075 10.081 10.081 0 0 0 6.5 2.92 1 1 0 0 0 1.061-1V9.266a.247.247 0 0 1 .073-.176Z\"></path>\n                            </svg>\n                        </button>\n                        <input type=\"range\" class=\"kg-video-volume-slider\" max=\"100\" value=\"100\">\n                    </div>\n                </div>\n            </div>\n            <figcaption><p><span style=\"white-space: pre-wrap;\">对比 ReaderLM v2、ReaderLM 1.5b、Claude 3.5 Sonnet 和 Gemini 2.0 Flash 在处理 HackerNews 首页 HTML 转 markdown 的结果，展示了 ReaderLM v2 的独特风格和性能。ReaderLM v2 擅长从原始 HTML 中保留完整信息，包括原始 HackerNews 链接，同时巧妙地使用 markdown 语法来构建内容。该模型使用嵌套列表来组织局部元素（点赞数、时间戳和评论），同时通过适当的标题层次结构（h1 和 h2 标签）保持全局格式的一致性。</span></p></figcaption>\n        </figure><p>我们第一个版本的一个主要挑战是生成长序列后的<a href=\"https://jina.ai/news/reader-lm-small-language-models-for-cleaning-and-converting-html-to-markdown/?ref=jina-ai-gmbh.ghost.io#degeneration-and-dull-loops\"><strong>退化问题</strong></a>，特别是表现为重复和循环。模型要么开始重复相同的 token，要么陷入循环，在短序列的 token 中循环，直到达到最大输出长度。<code>ReaderLM-v2</code> 通过在训练过程中添加对比损失极大地缓解了这个问题——无论上下文长度或已生成的 token 数量如何，其性能都保持一致。</p><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://jina-ai-gmbh.ghost.io/content/images/2025/01/Heading--1500-x-800-px---1500-x-1000-px---6-.png\" class=\"kg-image\" alt=\"\" loading=\"lazy\" width=\"1500\" height=\"1000\" srcset=\"https://jina-ai-gmbh.ghost.io/content/images/size/w600/2025/01/Heading--1500-x-800-px---1500-x-1000-px---6-.png 600w, https://jina-ai-gmbh.ghost.io/content/images/size/w1000/2025/01/Heading--1500-x-800-px---1500-x-1000-px---6-.png 1000w, https://jina-ai-gmbh.ghost.io/content/images/2025/01/Heading--1500-x-800-px---1500-x-1000-px---6-.png 1500w\" sizes=\"(min-width: 720px) 720px\"><figcaption><span style=\"white-space: pre-wrap;\">我们通过将</span><a href=\"https://jina.ai/legal?ref=jina-ai-gmbh.ghost.io\" rel=\"noreferrer\"><span style=\"white-space: pre-wrap;\">我们的法律页面</span></a><span style=\"white-space: pre-wrap;\">转换为 markdown 来测试 ReaderLM v2——这个页面的长度约为 HackerNews 首页的 20 倍，包括页面末尾的一个大型子处理器表格。尽管面临如此巨大的挑战，ReaderLM v2 仍然成功地以 markdown 格式生成了完整的表格，同时在整个文档中保持一致的结构，即使在表格之后也保持了标题层次和列表格式。这种水平的性能是前一代 </span><code spellcheck=\"false\" style=\"white-space: pre-wrap;\"><span>reader-lm-1.5b</span></code><span style=\"white-space: pre-wrap;\"> 无法达到的，因为它在生成长序列后会出现退化。</span></figcaption></figure><p>除了 markdown 转换之外，<code>ReaderLM-v2</code> 还引入了<strong>直接 HTML 转 JSON 生成</strong>功能，允许用户根据给定的 JSON 架构从原始 HTML 中提取特定信息。这种端到端的方法消除了许多 LLM 驱动的数据清理和提取管道中常见的中间 markdown 转换需求。</p><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://jina-ai-gmbh.ghost.io/content/images/2025/01/Heading--1500-x-800-px---1500-x-1000-px---9-.png\" class=\"kg-image\" alt=\"\" loading=\"lazy\" width=\"1500\" height=\"1000\" srcset=\"https://jina-ai-gmbh.ghost.io/content/images/size/w600/2025/01/Heading--1500-x-800-px---1500-x-1000-px---9-.png 600w, https://jina-ai-gmbh.ghost.io/content/images/size/w1000/2025/01/Heading--1500-x-800-px---1500-x-1000-px---9-.png 1000w, https://jina-ai-gmbh.ghost.io/content/images/2025/01/Heading--1500-x-800-px---1500-x-1000-px---9-.png 1500w\" sizes=\"(min-width: 720px) 720px\"><figcaption><span style=\"white-space: pre-wrap;\">在这个示例中，我们向 ReaderLM v2 提供了 HackerNews 首页的原始 HTML 和一个指定帖子标题、URL、摘要、关键词、作者和评论数的 JSON Schema。虽然某些字段可以直接从 HTML 中获取，而其他字段（如关键词）则需要从内容中推导出来。ReaderLM v2 成功地提取并生成了所有字段，准确度令人印象深刻。</span></figcaption></figure><p>在定量和定性基准测试中，<code>ReaderLM-v2</code> 在 HTML 转 Markdown 任务上的表现优于 <code>Qwen2.5-32B-Instruct</code>、<code>Gemini2-flash-expr</code> 和 <code>GPT-4o-2024-08-06</code> 等更大的模型，同时在 HTML 转 JSON 提取任务上展现出相当的性能，而且使用的参数量明显更少。</p><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://jina-ai-gmbh.ghost.io/content/images/2025/01/HTML2Markdown.svg\" class=\"kg-image\" alt=\"\" loading=\"lazy\" width=\"709\" height=\"371\"><figcaption><code spellcheck=\"false\" style=\"white-space: pre-wrap;\"><span>ReaderLM-v2-pro</span></code><span style=\"white-space: pre-wrap;\"> 是为我们的企业客户提供的独家高级检查点，具有额外的训练和优化。</span></figcaption></figure><figure class=\"kg-card kg-image-card\"><img src=\"https://jina-ai-gmbh.ghost.io/content/images/2025/01/Instructed-HTML2Markdown.svg\" class=\"kg-image\" alt=\"\" loading=\"lazy\" width=\"709\" height=\"371\"></figure><figure class=\"kg-card kg-image-card\"><img src=\"https://jina-ai-gmbh.ghost.io/content/images/2025/01/HTML2JSON.svg\" class=\"kg-image\" alt=\"\" loading=\"lazy\" width=\"709\" height=\"371\"></figure><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://jina-ai-gmbh.ghost.io/content/images/2025/01/Qualitative-Evaluation--2-.svg\" class=\"kg-image\" alt=\"\" loading=\"lazy\" width=\"709\" height=\"620\"><figcaption><span style=\"white-space: pre-wrap;\">我们的人工评估涵盖了 10 个不同的 HTML 来源，包括英文、日文和中文的新闻文章、博客文章、产品登陆页面、电子商务网站和法律文档。测试语料包含了具有挑战性的元素，如多行表格、动态布局、链接表格、数学公式（包括行内和显示公式）、代码块和深度嵌套列表。定性评估集中在三个关键维度，模型评分从 1（最低）到 5（最高）。然后将分数标准化为每个方面最高 1.0，以便于比较。</span></figcaption></figure><p>这些结果表明，一个设计良好的 1.5B 参数模型不仅能够匹配，而且经常能够在结构化数据提取任务中超越更大的模型。从 <code>ReaderLM-v2</code> 到 <code>ReaderLM-v2-pro</code> 的渐进式改进展示了我们新训练策略在提高模型性能的同时保持计算效率方面的有效性。</p><h2 id=\"get-started\">开始使用</h2><h3 id=\"via-reader-api\">通过 Reader API</h3><figure class=\"kg-card kg-bookmark-card\"><a class=\"kg-bookmark-container\" href=\"https://jina.ai/reader/?ref=jina-ai-gmbh.ghost.io\"><div class=\"kg-bookmark-content\"><div class=\"kg-bookmark-title\">Reader API</div><div class=\"kg-bookmark-description\">Read URLs and search web for better grounding LLMs.</div><div class=\"kg-bookmark-metadata\"><img class=\"kg-bookmark-icon\" src=\"https://jina-ai-gmbh.ghost.io/content/images/icon/favicon-128x128-17.png\" alt=\"\"></div></div><div class=\"kg-bookmark-thumbnail\"><img src=\"https://jina-ai-gmbh.ghost.io/content/images/thumbnail/banner-reader-api-1.png\" alt=\"\" onerror=\"this.style.display = 'none'\"></div></a></figure><p><code>ReaderLM-v2</code> 现已集成到我们的 Reader API 中。要使用它，只需在请求头中指定 <code>x-engine: readerlm-v2</code> 并通过 <code>-H 'Accept: text/event-stream'</code> 启用响应流式传输：</p><pre><code class=\"language-bash\">curl https://r.jina.ai/https://news.ycombinator.com/ -H 'x-engine: readerlm-v2' -H 'Accept: text/event-stream'\n</code></pre><p>你可以在较低的速率限制下无需 API 密钥即可试用。<a href=\"https://jina.ai/contact-sales?ref=jina-ai-gmbh.ghost.io#rate-limit\">如需更高的速率限制</a>，你可以购买 API 密钥。<strong>请注意，ReaderLM-v2 请求会消耗正常令牌数量的 3 倍 API 密钥配额。</strong>该功能目前处于测试阶段，我们正在与 GCP 团队合作优化 GPU 效率并提高模型可用性。</p><h3 id=\"on-google-colab\">在 Google Colab 上使用</h3><figure class=\"kg-card kg-bookmark-card kg-card-hascaption\"><a class=\"kg-bookmark-container\" href=\"https://colab.research.google.com/drive/1FfPjZwkMSocOLsEYH45B3B4NxDryKLGI?usp=sharing&ref=jina-ai-gmbh.ghost.io\"><div class=\"kg-bookmark-content\"><div class=\"kg-bookmark-title\">Google Colab</div><div class=\"kg-bookmark-description\"></div><div class=\"kg-bookmark-metadata\"><img class=\"kg-bookmark-icon\" src=\"https://jina-ai-gmbh.ghost.io/content/images/icon/favicon-22.ico\" alt=\"\"></div></div><div class=\"kg-bookmark-thumbnail\"><img src=\"https://jina-ai-gmbh.ghost.io/content/images/thumbnail/colab_favicon_256px-6.png\" alt=\"\" onerror=\"this.style.display = 'none'\"></div></a><figcaption><p dir=\"ltr\"><span style=\"white-space: pre-wrap;\">注意，免费的 T4 GPU 有一些限制—它不支持 </span><code spellcheck=\"false\" style=\"white-space: pre-wrap;\"><span>bfloat16</span></code><span style=\"white-space: pre-wrap;\"> 或 flash attention 2，这会导致更高的内存使用和更慢的长输入处理速度。尽管如此，ReaderLM v2 在这些限制下仍然成功处理了我们的整个法律页面，实现了每秒 67 个输入令牌和每秒 36 个输出令牌的处理速度。对于生产环境，我们建议使用 RTX 3090/4090 以获得最佳性能。</span></p></figcaption></figure><p>在托管环境中尝试 <code>ReaderLM-v2</code> 最简单的方法是通过我们的 Colab notebook，它展示了使用 HackerNews 首页作为示例的 HTML 转 Markdown 转换、JSON 提取和指令遵循。这个 notebook 针对 Colab 的免费 T4 GPU 层级进行了优化，需要 <code>vllm</code> 和 <code>triton</code> 来加速和运行。你可以随意用任何网站来测试。</p><h4 id=\"html-to-markdown-conversion\">HTML 转 Markdown 转换</h4><p>你可以使用 <code>create_prompt</code> 辅助函数轻松创建用于将 HTML 转换为 Markdown 的提示：</p><pre><code class=\"language-python\">prompt = create_prompt(html)\nresult = llm.generate(prompt, sampling_params=sampling_params)[0].outputs[0].text.strip()</code></pre><p><code>result</code> 将是一个用 Markdown 反引号作为代码围栏包裹的字符串。你也可以覆盖默认设置来探索不同的输出，例如：</p><pre><code class=\"language-python\">prompt = create_prompt(html, instruction=\"Extract the first three news and put into in the makdown list\")\nresult = llm.generate(prompt, sampling_params=sampling_params)[0].outputs[0].text.strip()</code></pre><p>然而，由于我们的训练数据可能并未涵盖每种类型的指令，特别是需要多步推理的任务，最可靠的结果来自 HTML 转 Markdown 转换。为了最有效地提取信息，我们建议使用如下所示的 JSON Schema：</p><h4 id=\"html-to-json-extraction-with-json-schema\">使用 JSON Schema 进行 HTML 转 JSON 提取</h4><pre><code class=\"language-python\">import json\n\nschema = {\n    \"type\": \"object\",\n    \"properties\": {\n        \"title\": {\"type\": \"string\", \"description\": \"News thread title\"},\n        \"url\": {\"type\": \"string\", \"description\": \"Thread URL\"},\n        \"summary\": {\"type\": \"string\", \"description\": \"Article summary\"},\n        \"keywords\": {\"type\": \"list\", \"description\": \"Descriptive keywords\"},\n        \"author\": {\"type\": \"string\", \"description\": \"Thread author\"},\n        \"comments\": {\"type\": \"integer\", \"description\": \"Comment count\"}\n    },\n    \"required\": [\"title\", \"url\", \"date\", \"points\", \"author\", \"comments\"]\n}\n\nprompt = create_prompt(html, schema=json.dumps(schema, indent=2))\nresult = llm.generate(prompt, sampling_params=sampling_params)[0].outputs[0].text.strip()\n</code></pre><p><code>result</code> 将是一个用 JSON 格式的代码围栏反引号包裹的字符串，而不是实际的 JSON/dict 对象。你可以使用 Python 将字符串解析成适当的字典或 JSON 对象以进行进一步处理。</p><h3 id=\"in-production-available-on-csp\">生产环境：在 CSP 上可用</h3><p><code>ReaderLM-v2</code> 在 AWS SageMaker、Azure 和 GCP marketplace 上均可使用。如果你需要在这些平台之外或在公司内部本地使用这些模型，请注意该模型和 <code>ReaderLM-v2-pro</code> 都是在 CC BY-NC 4.0 许可下发布的。<a href=\"https://jina.ai/contact-sales/?ref=jina-ai-gmbh.ghost.io\" rel=\"noreferrer\">如需商业使用咨询或获取 <code>ReaderLM-v2-pro</code> 的访问权限，请随时联系我们。</a></p><figure class=\"kg-card kg-bookmark-card\"><a class=\"kg-bookmark-container\" href=\"https://aws.amazon.com/marketplace/pp/prodview-jwfct4j4rvxk2?sr=0-21&ref_=beagle&applicationId=AWSMPContessa&ref=jina-ai-gmbh.ghost.io\"><div class=\"kg-bookmark-content\"><div class=\"kg-bookmark-title\">AWS Marketplace: Reader-LM v2</div><div class=\"kg-bookmark-description\"></div><div class=\"kg-bookmark-metadata\"><img class=\"kg-bookmark-icon\" src=\"https://jina-ai-gmbh.ghost.io/content/images/icon/favicon-23.ico\" alt=\"\"></div></div><div class=\"kg-bookmark-thumbnail\"><img src=\"https://jina-ai-gmbh.ghost.io/content/images/thumbnail/socialPreview-3.png\" alt=\"\" onerror=\"this.style.display = 'none'\"></div></a></figure><h2 id=\"quantitative-evaluation\">定量评估</h2><p>我们在三个结构化数据抽取任务上对比 ReaderLM-v2 和最先进的模型：<code>GPT-4o-2024-08-06</code>、<code>Gemini2-flash-expr</code> 和 <code>Qwen2.5-32B-Instruct</code>。我们的评估框架结合了衡量内容准确性和结构保真度的指标。<code>ReaderLM-v2</code> 是公开可用的开源版本，而 <code>ReaderLM-v2-pro</code> 是为我们的企业客户提供的专属高级版本，具有额外的训练和优化。注意，我们的第一代 <code>reader-lm-1.5b</code> 仅在主要内容抽取任务上进行评估，因为它不支持指令抽取或 JSON 抽取功能。</p><h3 id=\"evaluation-metrics\">评估指标</h3><p>对于 HTML 转 Markdown 任务，我们采用七个互补的指标。注：↑表示越高越好，↓表示越低越好</p><ul><li><strong>ROUGE-L</strong> (↑)：测量生成文本与参考文本之间的最长公共子序列，反映内容保留和结构相似性。范围：0-1，数值越高表示序列匹配越好。</li><li><strong>WER（词错误率）</strong> (↓)：量化将生成文本转换为参考文本所需的最小词级编辑次数。值越低表示需要的修正越少。</li><li><strong>SUB（替换）</strong> (↓)：计算所需的词替换次数。值越低表示词级准确度越高。</li><li><strong>INS（插入）</strong> (↓)：测量需要插入多少词才能匹配参考文本。值越低表示完整性越好。</li><li><strong>Levenshtein 距离</strong> (↓)：计算所需的最小字符级编辑次数。值越低表示字符级准确度越高。</li><li><strong>Damerau-Levenshtein 距离</strong> (↓)：类似于 Levenshtein，但也考虑字符转置。值越低表示字符级匹配越好。</li><li><strong>Jaro-Winkler 相似度</strong> (↑)：强调字符串开头的匹配，特别适用于评估文档结构保留。范围：0-1，值越高表示相似度越好。</li></ul><p>对于 HTML 转 JSON 任务，我们将其视为检索任务，采用信息检索中的四个指标：</p><ul><li><strong>F1 分数</strong> (↑)：精确率和召回率的调和平均值，提供整体准确度。范围：0-1。</li><li><strong>精确率</strong> (↑)：所有抽取中正确抽取的比例。范围：0-1。</li><li><strong>召回率</strong> (↑)：在所有可用信息中正确抽取的比例。范围：0-1。</li><li><strong>通过率</strong> (↑)：输出为有效 JSON 且符合模式的比例。范围：0-1。</li></ul><h3 id=\"main-content-html-to-markdown-task\">主要内容 HTML 转 Markdown 任务</h3>\n<!--kg-card-begin: html-->\n<table>\n<thead>\n<tr>\n<th>Model</th>\n<th>ROUGE-L↑</th>\n<th>WER↓</th>\n<th>SUB↓</th>\n<th>INS↓</th>\n<th>Levenshtein↓</th>\n<th>Damerau↓</th>\n<th>Jaro-Winkler↑</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Gemini2-flash-expr</td>\n<td>0.69</td>\n<td>0.62</td>\n<td>131.06</td>\n<td>372.34</td>\n<td>0.40</td>\n<td>1341.14</td>\n<td>0.74</td>\n</tr>\n<tr>\n<td>gpt-4o-2024-08-06</td>\n<td>0.69</td>\n<td>0.41</td>\n<td><strong>88.66</strong></td>\n<td><strong>88.69</strong></td>\n<td>0.40</td>\n<td>1283.54</td>\n<td>0.75</td>\n</tr>\n<tr>\n<td>Qwen2.5-32B-Instruct</td>\n<td>0.71</td>\n<td>0.47</td>\n<td>158.26</td>\n<td>123.47</td>\n<td>0.41</td>\n<td>1354.33</td>\n<td>0.70</td>\n</tr>\n<tr>\n<td>reader-lm-1.5b</td>\n<td>0.72</td>\n<td>1.14</td>\n<td>260.29</td>\n<td>1182.97</td>\n<td>0.35</td>\n<td>1733.11</td>\n<td>0.70</td>\n</tr>\n<tr>\n<td>ReaderLM-v2</td>\n<td>0.84</td>\n<td>0.62</td>\n<td>135.28</td>\n<td>867.14</td>\n<td>0.22</td>\n<td>1262.75</td>\n<td>0.82</td>\n</tr>\n<tr>\n<td>ReaderLM-v2-pro</td>\n<td><strong>0.86</strong></td>\n<td><strong>0.39</strong></td>\n<td>162.92</td>\n<td>500.44</td>\n<td><strong>0.20</strong></td>\n<td><strong>928.15</strong></td>\n<td><strong>0.83</strong></td>\n</tr>\n</tbody>\n</table>\n<!--kg-card-end: html-->\n<h3 id=\"instructed-html-to-markdown-task\">指令型 HTML 转 Markdown 任务</h3>\n<!--kg-card-begin: html-->\n<table>\n<thead>\n<tr>\n<th>Model</th>\n<th>ROUGE-L↑</th>\n<th>WER↓</th>\n<th>SUB↓</th>\n<th>INS↓</th>\n<th>Levenshtein↓</th>\n<th>Damerau↓</th>\n<th>Jaro-Winkler↑</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Gemini2-flash-expr</td>\n<td>0.64</td>\n<td>1.64</td>\n<td>122.64</td>\n<td>533.12</td>\n<td>0.45</td>\n<td>766.62</td>\n<td>0.70</td>\n</tr>\n<tr>\n<td>gpt-4o-2024-08-06</td>\n<td>0.69</td>\n<td><strong>0.82</strong></td>\n<td><strong>87.53</strong></td>\n<td><strong>180.61</strong></td>\n<td>0.42</td>\n<td><strong>451.10</strong></td>\n<td>0.69</td>\n</tr>\n<tr>\n<td>Qwen2.5-32B-Instruct</td>\n<td>0.68</td>\n<td>0.73</td>\n<td>98.72</td>\n<td>177.23</td>\n<td>0.43</td>\n<td>501.50</td>\n<td>0.69</td>\n</tr>\n<tr>\n<td>ReaderLM-v2</td>\n<td>0.70</td>\n<td>1.28</td>\n<td>75.10</td>\n<td>443.70</td>\n<td>0.38</td>\n<td>673.62</td>\n<td><strong>0.75</strong></td>\n</tr>\n<tr>\n<td>ReaderLM-v2-pro</td>\n<td><strong>0.72</strong></td>\n<td>1.48</td>\n<td><strong>70.16</strong></td>\n<td>570.38</td>\n<td><strong>0.37</strong></td>\n<td>748.10</td>\n<td><strong>0.75</strong></td>\n</tr>\n</tbody>\n</table>\n<!--kg-card-end: html-->\n<h3 id=\"schema-based-html-to-json-task\">基于 Schema 的 HTML 转 JSON 任务</h3>\n<!--kg-card-begin: html-->\n<table>\n<thead>\n<tr>\n<th>Model</th>\n<th>F1↑</th>\n<th>Precision↑</th>\n<th>Recall↑</th>\n<th>Pass-Rate↑</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Gemini2-flash-expr</td>\n<td>0.81</td>\n<td>0.81</td>\n<td>0.82</td>\n<td>0.99</td>\n</tr>\n<tr>\n<td>gpt-4o-2024-08-06</td>\n<td><strong>0.83</strong></td>\n<td>0.84</td>\n<td><strong>0.83</strong></td>\n<td><strong>1.00</strong></td>\n</tr>\n<tr>\n<td>Qwen2.5-32B-Instruct</td>\n<td><strong>0.83</strong></td>\n<td><strong>0.85</strong></td>\n<td><strong>0.83</strong></td>\n<td><strong>1.00</strong></td>\n</tr>\n<tr>\n<td>ReaderLM-v2</td>\n<td>0.81</td>\n<td>0.82</td>\n<td>0.81</td>\n<td>0.98</td>\n</tr>\n<tr>\n<td>ReaderLM-v2-pro</td>\n<td>0.82</td>\n<td>0.83</td>\n<td>0.82</td>\n<td>0.99</td>\n</tr>\n</tbody>\n</table>\n<!--kg-card-end: html-->\n<p><code>ReaderLM-v2</code> 在所有任务中都表现出显著进步。在主要内容抽取方面，<code>ReaderLM-v2-pro</code> 在七个指标中的五个上取得了最佳性能，拥有更优的 ROUGE-L（0.86）、WER（0.39）、Levenshtein（0.20）、Damerau（928.15）和 Jaro-Winkler（0.83）分数。这些结果表明，与其基础版本和更大的模型相比，在内容保留和结构准确性方面都有全面的改进。</p><p>在指令型抽取任务中，<code>ReaderLM-v2</code> 和 <code>ReaderLM-v2-pro</code> 在 ROUGE-L（0.72）、替换率（70.16）、Levenshtein 距离（0.37）和 Jaro-Winkler 相似度（0.75，与基础版本并列）等指标上领先。尽管 GPT-4o 在 WER 和 Damerau 距离上有优势，但 <code>ReaderLM-v2-pro</code> 在整体内容结构和准确性方面表现更好。在 JSON 抽取方面，该模型表现具有竞争力，F1 分数与更大模型的差距仅为 0.01-0.02，同时保持较高的通过率（0.99）。</p><h2 id=\"qualitative-evaluation\">定性评估</h2><p>在我们分析在评估 <code>reader-lm-1.5b</code> 时，我们注意到<a href=\"https://jina.ai/news/reader-lm-small-language-models-for-cleaning-and-converting-html-to-markdown/?ref=jina-ai-gmbh.ghost.io#qualitative-study\">量化指标alone可能无法完全衡量模型性能</a>。数值评估有时无法反映感知质量——在某些情况下，低指标分数产生的 Markdown 在视觉上令人满意，而高分数却产生次优结果。为了解决这种差异，我们对 10 个不同的 HTML 源进行了系统的定性评估，包括英文、日文和中文的新闻文章、博客文章、产品页面、电子商务网站和法律文档。测试语料库强调了具有挑战性的格式元素，如多行表格、动态布局、LaTeX 公式、链接表格和嵌套列表，从而提供了对模型实际应用能力更全面的视角。</p><h3 id=\"evaluation-metrics-1\">评估指标</h3><p>我们的人工评估关注三个关键维度，输出按 1-5 分制评分：</p><p><strong>内容完整性</strong> - 评估 HTML 转 Markdown 过程中语义信息的保留程度，包括：</p><ul><li>文本内容的准确性和完整性</li><li>链接、图片、代码块、公式和引用的保留</li><li>文本格式和链接/图片 URL 的保留</li></ul><p><strong>结构准确性</strong> - 评估 HTML 结构元素到 Markdown 的准确转换：</p><ul><li>标题层次的保留</li><li>列表嵌套的准确性</li><li>表格结构的保真度</li><li>代码块和引用的格式</li></ul><p><strong>格式规范性</strong> - 衡量对 Markdown 语法标准的遵守程度：</p><ul><li>标题（#）、列表（*、+、-）、表格、代码块（```）的正确语法使用</li><li>没有多余空格或非标准语法的整洁格式</li><li>一致且可读的渲染输出</li></ul><p>在我们手动评估超过 10 个 HTML 页面时，每个评估标准的最高分为 50 分。<code>ReaderLM-v2</code> 在所有维度上都表现出色：</p>\n<!--kg-card-begin: html-->\n<table>\n<thead>\n<tr>\n<th>Metric</th>\n<th>Content Integrity</th>\n<th>Structural Accuracy</th>\n<th>Format Compliance</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>reader-lm-v2</td>\n<td>39</td>\n<td>35</td>\n<td>36</td>\n</tr>\n<tr>\n<td>reader-lm-v2-pro</td>\n<td>35</td>\n<td>37</td>\n<td>37</td>\n</tr>\n<tr>\n<td>reader-lm-v1</td>\n<td>35</td>\n<td>34</td>\n<td>31</td>\n</tr>\n<tr>\n<td>Claude 3.5 Sonnet</td>\n<td>26</td>\n<td>31</td>\n<td>33</td>\n</tr>\n<tr>\n<td>gemini-2.0-flash-expr</td>\n<td>35</td>\n<td>31</td>\n<td>28</td>\n</tr>\n<tr>\n<td>Qwen2.5-32B-Instruct</td>\n<td>32</td>\n<td>33</td>\n<td>34</td>\n</tr>\n<tr>\n<td>gpt-4o</td>\n<td>38</td>\n<td>41</td>\n<td>42</td>\n</tr>\n</tbody>\n</table>\n<!--kg-card-end: html-->\n<p>在内容完整性方面，它在复杂元素识别方面表现出色，特别是 LaTeX 公式、嵌套列表和代码块。该模型在处理复杂内容结构时保持了高保真度，而竞争模型经常出现丢失 H1 标题（<code>reader-lm-1.5b</code>）、截断内容（Claude 3.5）或保留原始 HTML 标签（Gemini-2.0-flash）等问题。</p><figure class=\"kg-card kg-gallery-card kg-width-wide kg-card-hascaption\"><div class=\"kg-gallery-container\"><div class=\"kg-gallery-row\"><div class=\"kg-gallery-image\"><img src=\"https://jina-ai-gmbh.ghost.io/content/images/2025/01/image--92-.png\" width=\"2000\" height=\"1477\" loading=\"lazy\" alt=\"\" srcset=\"https://jina-ai-gmbh.ghost.io/content/images/size/w600/2025/01/image--92-.png 600w, https://jina-ai-gmbh.ghost.io/content/images/size/w1000/2025/01/image--92-.png 1000w, https://jina-ai-gmbh.ghost.io/content/images/size/w1600/2025/01/image--92-.png 1600w, https://jina-ai-gmbh.ghost.io/content/images/size/w2400/2025/01/image--92-.png 2400w\" sizes=\"(min-width: 720px) 720px\"></div><div class=\"kg-gallery-image\"><img src=\"https://jina-ai-gmbh.ghost.io/content/images/2025/01/image--93--1.png\" width=\"2000\" height=\"1765\" loading=\"lazy\" alt=\"\" srcset=\"https://jina-ai-gmbh.ghost.io/content/images/size/w600/2025/01/image--93--1.png 600w, https://jina-ai-gmbh.ghost.io/content/images/size/w1000/2025/01/image--93--1.png 1000w, https://jina-ai-gmbh.ghost.io/content/images/size/w1600/2025/01/image--93--1.png 1600w, https://jina-ai-gmbh.ghost.io/content/images/2025/01/image--93--1.png 2268w\" sizes=\"(min-width: 720px) 720px\"></div></div></div><figcaption><p dir=\"ltr\"><a href=\"https://iclr-blogposts.github.io/2024/blog/bench-hvp/?ref=jina-ai-gmbh.ghost.io\"><span style=\"white-space: pre-wrap;\">一篇 ICLR 博客文章</span></a><span style=\"white-space: pre-wrap;\">，其中包含嵌入在 Markdown 中的复杂 LaTeX 方程，右侧面板显示源 HTML 代码。</span></p></figcaption></figure><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://jina-ai-gmbh.ghost.io/content/images/2025/01/image--94--2.png\" class=\"kg-image\" alt=\"\" loading=\"lazy\" width=\"2000\" height=\"1033\" srcset=\"https://jina-ai-gmbh.ghost.io/content/images/size/w600/2025/01/image--94--2.png 600w, https://jina-ai-gmbh.ghost.io/content/images/size/w1000/2025/01/image--94--2.png 1000w, https://jina-ai-gmbh.ghost.io/content/images/size/w1600/2025/01/image--94--2.png 1600w, https://jina-ai-gmbh.ghost.io/content/images/size/w2400/2025/01/image--94--2.png 2400w\" sizes=\"(min-width: 720px) 720px\"><figcaption><span style=\"white-space: pre-wrap;\">对比显示 ReaderLM-v2 的 Markdown 输出及其渲染效果。</span></figcaption></figure><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://jina-ai-gmbh.ghost.io/content/images/2025/01/image.png\" class=\"kg-image\" alt=\"\" loading=\"lazy\" width=\"2000\" height=\"821\" srcset=\"https://jina-ai-gmbh.ghost.io/content/images/size/w600/2025/01/image.png 600w, https://jina-ai-gmbh.ghost.io/content/images/size/w1000/2025/01/image.png 1000w, https://jina-ai-gmbh.ghost.io/content/images/size/w1600/2025/01/image.png 1600w, https://jina-ai-gmbh.ghost.io/content/images/size/w2400/2025/01/image.png 2400w\" sizes=\"(min-width: 720px) 720px\"><figcaption><span style=\"white-space: pre-wrap;\">通过 ReaderLM-v2 后的简单后处理步骤，我们可以完美还原原始内容，包括将 LaTeX 方程从 HTML 格式转换为 Markdown 格式。例如，将 </span><code spellcheck=\"false\" style=\"white-space: pre-wrap;\"><span>\\[...\\]</span></code><span style=\"white-space: pre-wrap;\">（及其 HTML 等价物）替换为 Markdown 标准分隔符，如 </span><code spellcheck=\"false\" style=\"white-space: pre-wrap;\"><span>$...$</span></code><span style=\"white-space: pre-wrap;\"> 用于行内方程，</span><code spellcheck=\"false\" style=\"white-space: pre-wrap;\"><span>$$...$$</span></code><span style=\"white-space: pre-wrap;\"> 用于显示方程。这有助于防止 Markdown 解释中的语法冲突。</span></figcaption></figure><p>在结构准确性方面，ReaderLM-v2 显示出对常见网页结构的优化。例如，在 Hacker News 案例中，它成功重建了完整链接并优化了列表呈现。该模型能够处理让 ReaderLM-v1 感到困难的复杂非博客 HTML 结构。</p><p>在格式规范性方面，ReaderLM-v2 在处理 Hacker News、博客和微信文章等内容时表现出特别的优势。虽然其他大型语言模型在处理类似 Markdown 的源内容时表现良好，但在需要更多解释和重新格式化的传统网站上却遇到困难。</p><p>我们的分析显示，<code>gpt-4o</code> 在处理较短网站时表现出色，与其他模型相比，它对网站结构和格式的理解更为出色。然而，在处理较长内容时，<code>gpt-4o</code> 在完整性方面存在困难，经常遗漏文本的开头和结尾部分。我们以 Zillow 的网站为例，提供了 <code>gpt-4o</code>、ReaderLM-v2 和 ReaderLM-v2-pro 输出的对比分析。</p><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://jina-ai-gmbh.ghost.io/content/images/2025/01/image-1.png\" class=\"kg-image\" alt=\"\" loading=\"lazy\" width=\"2000\" height=\"1382\" srcset=\"https://jina-ai-gmbh.ghost.io/content/images/size/w600/2025/01/image-1.png 600w, https://jina-ai-gmbh.ghost.io/content/images/size/w1000/2025/01/image-1.png 1000w, https://jina-ai-gmbh.ghost.io/content/images/size/w1600/2025/01/image-1.png 1600w, https://jina-ai-gmbh.ghost.io/content/images/2025/01/image-1.png 2356w\" sizes=\"(min-width: 720px) 720px\"><figcaption><span style=\"white-space: pre-wrap;\">原始 Zillow HTML 页面</span></figcaption></figure><figure class=\"kg-card kg-gallery-card kg-width-wide kg-card-hascaption\"><div class=\"kg-gallery-container\"><div class=\"kg-gallery-row\"><div class=\"kg-gallery-image\"><img src=\"https://jina-ai-gmbh.ghost.io/content/images/2025/01/image--95-.png\" width=\"1400\" height=\"1576\" loading=\"lazy\" alt=\"\" srcset=\"https://jina-ai-gmbh.ghost.io/content/images/size/w600/2025/01/image--95-.png 600w, https://jina-ai-gmbh.ghost.io/content/images/size/w1000/2025/01/image--95-.png 1000w, https://jina-ai-gmbh.ghost.io/content/images/2025/01/image--95-.png 1400w\" sizes=\"(min-width: 720px) 720px\"></div><div class=\"kg-gallery-image\"><img src=\"https://jina-ai-gmbh.ghost.io/content/images/2025/01/image--96-.png\" width=\"1550\" height=\"1578\" loading=\"lazy\" alt=\"\" srcset=\"https://jina-ai-gmbh.ghost.io/content/images/size/w600/2025/01/image--96-.png 600w, https://jina-ai-gmbh.ghost.io/content/images/size/w1000/2025/01/image--96-.png 1000w, https://jina-ai-gmbh.ghost.io/content/images/2025/01/image--96-.png 1550w\" sizes=\"(min-width: 720px) 720px\"></div><div class=\"kg-gallery-image\"><img src=\"https://jina-ai-gmbh.ghost.io/content/images/2025/01/image--97-.png\" width=\"1562\" height=\"1582\" loading=\"lazy\" alt=\"\" srcset=\"https://jina-ai-gmbh.ghost.io/content/images/size/w600/2025/01/image--97-.png 600w, https://jina-ai-gmbh.ghost.io/content/images/size/w1000/2025/01/image--97-.png 1000w, https://jina-ai-gmbh.ghost.io/content/images/2025/01/image--97-.png 1562w\" sizes=\"(min-width: 720px) 720px\"></div></div></div><figcaption><p dir=\"ltr\"><span style=\"white-space: pre-wrap;\">gpt-4o（左）、ReaderLM-v2（中）和 ReaderLM-v2-pro（右）渲染的 Markdown 输出对比。</span></p></figcaption></figure><p>对于某些具有挑战性的案例，如产品落地页和政府文档，ReaderLM-v2 和 ReaderLM-v2-pro 的表现保持稳健，但仍有提升空间。对于 ICLR 博客文章中的复杂数学公式和代码，大多数模型都面临挑战，不过 ReaderLM-v2 在处理这些情况时比基准 Reader API 表现更好。</p><h2 id=\"how-we-trained-readerlm-v2\">我们如何训练 ReaderLM v2</h2><p>ReaderLM-v2 基于 <code><strong>Qwen2.5-1.5B-Instruction</strong></code> 构建，这是一个以指令遵循和长上下文任务效率著称的紧凑型基础模型。在本节中，我们将描述如何训练 <code>ReaderLM-v2</code>，重点关注数据准备、训练方法和我们遇到的挑战。</p>\n<!--kg-card-begin: html-->\n<table>\n<thead>\n<tr>\n<th>Model Parameter</th>\n<th>ReaderLM-v2</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Total Parameters</td>\n<td>1.54B</td>\n</tr>\n<tr>\n<td>Max Context Length (Input+Output)</td>\n<td>512K</td>\n</tr>\n<tr>\n<td>Hidden Size</td>\n<td>1536</td>\n</tr>\n<tr>\n<td>Number of Layers</td>\n<td>28</td>\n</tr>\n<tr>\n<td>Query Heads</td>\n<td>12</td>\n</tr>\n<tr>\n<td>KV Heads</td>\n<td>2</td>\n</tr>\n<tr>\n<td>Head Size</td>\n<td>128</td>\n</tr>\n<tr>\n<td>Intermediate Size</td>\n<td>8960</td>\n</tr>\n<tr>\n<td>Multilingual Support</td>\n<td>29 languages</td>\n</tr>\n<tr>\n<td>HuggingFace Repository</td>\n<td>Link</td>\n</tr>\n</tbody>\n</table>\n<!--kg-card-end: html-->\n<h3 id=\"data-preparation\">数据准备</h3><p>ReaderLM-v2 的成功在很大程度上取决于其训练数据的质量。我们创建了 <code>html-markdown-1m</code> 数据集，其中包含从互联网收集的一百万个 HTML 文档。平均而言，每个文档包含 56,000 个词元，反映了真实网络数据的长度和复杂性。在准备这个数据集时，我们通过删除不必要的元素（如 JavaScript 和 CSS）来清理 HTML 文件，同时保留关键的结构和语义元素。清理后，我们使用 <a href=\"https://jina.ai/reader?ref=jina-ai-gmbh.ghost.io\">Jina Reader</a> 通过正则表达式模式和启发式方法将 HTML 文件转换为 Markdown。</p><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://jina-ai-gmbh.ghost.io/content/images/2025/01/Heading--76-.png\" class=\"kg-image\" alt=\"\" loading=\"lazy\" width=\"1200\" height=\"630\" srcset=\"https://jina-ai-gmbh.ghost.io/content/images/size/w600/2025/01/Heading--76-.png 600w, https://jina-ai-gmbh.ghost.io/content/images/size/w1000/2025/01/Heading--76-.png 1000w, https://jina-ai-gmbh.ghost.io/content/images/2025/01/Heading--76-.png 1200w\" sizes=\"(min-width: 720px) 720px\"><figcaption><span style=\"white-space: pre-wrap;\">html-markdown-1m</span> 数据集中 HTML 文件的词元长度直方图</figcaption></figure><p>虽然这创建了一个可用的基准数据集，但它突显了一个关键限制：<strong>仅在这些直接转换上训练的模型本质上只会学会模仿 Jina Reader 使用的正则表达式模式和启发式方法。</strong>这一点在 <code>reader-lm-0.5b/1.5b</code> 中变得很明显，其性能上限受到了这些基于规则的转换质量的限制。</p><p>为了解决这些限制，我们开发了一个依赖 <code>Qwen2.5-32B-Instruction</code> 模型的三步流程，这对创建高质量的合成数据集至关重要。</p><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://jina-ai-gmbh.ghost.io/content/images/2025/01/Heading--73-.png\" class=\"kg-image\" alt=\"\" loading=\"lazy\" width=\"1200\" height=\"630\" srcset=\"https://jina-ai-gmbh.ghost.io/content/images/size/w600/2025/01/Heading--73-.png 600w, https://jina-ai-gmbh.ghost.io/content/images/size/w1000/2025/01/Heading--73-.png 1000w, https://jina-ai-gmbh.ghost.io/content/images/2025/01/Heading--73-.png 1200w\" sizes=\"(min-width: 720px) 720px\"><figcaption><span style=\"white-space: pre-wrap;\">ReaderLM-v2 的合成数据生成流程，由 </span><code spellcheck=\"false\" style=\"white-space: pre-wrap;\"><span>Qwen2.5-32B-Instruction</span></code> 驱动</figcaption></figure><ol><li><strong>起草</strong>：我们基于提供给模型的指令生成初始 Markdown 和 JSON 输出。这些输出虽然多样，但常常包含噪音或不一致。</li><li><strong>改进</strong>：通过删除冗余内容、强化结构一致性并与所需格式对齐来改进生成的草稿。这一步确保数据清洁并符合任务要求。</li><li><strong>评估</strong>：将改进后的输出与原始指令进行评估。只有通过评估的数据才会被纳入最终数据集。这种迭代方法确保训练数据达到结构化数据提取所需的质量标准。</li></ol><h3 id=\"training-process\">训练过程</h3><p>我们的训练过程包含多个阶段，专门针对处理长上下文文档的挑战。</p><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://jina-ai-gmbh.ghost.io/content/images/2025/01/Heading--75-.png\" class=\"kg-image\" alt=\"\" loading=\"lazy\" width=\"1200\" height=\"630\" srcset=\"https://jina-ai-gmbh.ghost.io/content/images/size/w600/2025/01/Heading--75-.png 600w, https://jina-ai-gmbh.ghost.io/content/images/size/w1000/2025/01/Heading--75-.png 1000w, https://jina-ai-gmbh.ghost.io/content/images/2025/01/Heading--75-.png 1200w\" sizes=\"(min-width: 720px) 720px\"><figcaption><span style=\"white-space: pre-wrap;\">ReaderLM v2 的训练遵循迭代过程，结合三阶段数据生成（起草-改进-评估）与自我对弈改进，实现持续提升。</span></figcaption></figure><p>我们首先进行<strong>长上下文预训练</strong>，使用 <code>html-markdown-1m</code> 数据集。采用了 ring-zag attention 和旋转位置编码（RoPE）等技术，逐步将模型的上下文长度从 32,768 个词元扩展到 256,000 个词元。为了保持稳定性和效率，我们采用了渐进式训练方法，从较短的序列开始，逐步增加上下文长度。</p><p>预训练之后，我们进行了<strong>有监督微调（SFT）</strong>。这个阶段使用了在数据准备过程中生成的精炼数据集。这些数据集包含了 Markdown 和 JSON 提取任务的详细指令，以及用于改进草稿的示例。每个数据集都经过精心设计，以帮助模型学习特定任务，如识别主要内容或遵循基于 schema 的 JSON 结构。</p><p>然后，我们应用了<strong>直接偏好优化（DPO）</strong>来使模型的输出与高质量结果保持一致。在这个阶段，模型在草稿和改进后的响应对上进行训练。通过学习优先选择改进后的输出，模型内化了定义精炼和任务特定结果的细微区别。</p><p>最后，我们实施了<strong>自我对弈强化调优</strong>，这是一个迭代过程，模型生成、改进和评估自己的输出。这个循环使模型能够持续改进，而无需额外的外部监督。通过利用自己的评估和改进，模型逐步提高了生成准确和结构化输出的能力。</p><h2 id=\"conclusion\">结论</h2><p>回顾 2024 年 4 月，Jina Reader 成为第一个对 LLM 友好的 markdown API。它开创了新趋势，赢得了广泛的社区采用，最重要的是，激励我们为数据清理和提取构建小型语言模型。今天，我们再次通过 ReaderLM-v2 提升标准，实现了去年 9 月的承诺：更好的长上下文处理、支持输入指令，以及将特定网页内容提取为 markdown 格式的能力。我们再次证明，通过精心训练和校准，小型语言模型可以达到超越大型模型的最先进性能。</p><p>在 ReaderLM-v2 的训练过程中，我们发现了两个洞见。一个有效的策略是在针对特定任务定制的单独数据集上训练专门的模型。这些任务特定模型后来通过线性参数插值进行<em>合并</em>。虽然这种方法需要额外的努力，但它有助于在最终统一系统中保持每个专门模型的独特优势。</p><p>迭代式的数据合成过程对我们模型的成功至关重要。通过对合成数据的反复改进和评估，我们显著提升了模型性能，超越了简单的规则based方法。这种迭代策略虽然在保持一致的评价标准和管理计算成本方面带来了挑战，但对于克服使用 Jina Reader 正则表达式和基于启发式的训练数据的局限性来说是必不可少的。这一点从严重依赖 Jina Reader 规则转换的 <code>reader-lm-1.5b</code> 与受益于迭代改进过程的 <code>ReaderLM-v2</code> 之间的性能差距中可以明显看出。</p><p>我们很期待听到您关于 ReaderLM-v2 如何改善数据质量的反馈。展望未来，我们计划扩展多模态能力，特别是在扫描文档方面，并进一步优化生成速度。如果您对定制适合特定领域的 ReaderLM 版本感兴趣，请随时与我们联系。</p>",
  "comment_id": "6785bfd62defad0001fb5f22",
  "feature_image": "https://jina-ai-gmbh.ghost.io/content/images/2025/01/readerlm-v2.png",
  "featured": true,
  "visibility": "public",
  "created_at": "2025-01-14T02:37:26.000+01:00",
  "updated_at": "2025-01-15T11:35:18.000+01:00",
  "published_at": "2025-01-15T11:35:18.000+01:00",
  "custom_excerpt": "ReaderLM-v2 is a 1.5B small language model for HTML-to-Markdown conversion and HTML-to-JSON extraction with exceptional accuracy.",
  "codeinjection_head": null,
  "codeinjection_foot": null,
  "custom_template": null,
  "canonical_url": null,
  "authors": [
    {
      "id": "62e3d0ef9cd5ce003d5e49e2",
      "name": "Jina AI",
      "slug": "company",
      "profile_image": "https://jina-ai-gmbh.ghost.io/content/images/2022/08/Jjqb-JeY_400x400.jpg",
      "cover_image": null,
      "bio": "Creator of neural search, contributor to open source.",
      "website": "https://www.jina.ai",
      "location": "Berlin",
      "facebook": null,
      "twitter": "@JinaAI_",
      "meta_title": null,
      "meta_description": null,
      "url": "https://jina-ai-gmbh.ghost.io/author/company/"
    }
  ],
  "tags": [
    {
      "id": "655b2782bb728c000101bed7",
      "name": "Press",
      "slug": "press",
      "description": null,
      "feature_image": null,
      "visibility": "public",
      "og_image": null,
      "og_title": null,
      "og_description": null,
      "twitter_image": null,
      "twitter_title": null,
      "twitter_description": null,
      "meta_title": null,
      "meta_description": null,
      "codeinjection_head": null,
      "codeinjection_foot": null,
      "canonical_url": null,
      "accent_color": null,
      "url": "https://jina-ai-gmbh.ghost.io/tag/press/"
    }
  ],
  "primary_author": {
    "id": "62e3d0ef9cd5ce003d5e49e2",
    "name": "Jina AI",
    "slug": "company",
    "profile_image": "https://jina-ai-gmbh.ghost.io/content/images/2022/08/Jjqb-JeY_400x400.jpg",
    "cover_image": null,
    "bio": "Creator of neural search, contributor to open source.",
    "website": "https://www.jina.ai",
    "location": "Berlin",
    "facebook": null,
    "twitter": "@JinaAI_",
    "meta_title": null,
    "meta_description": null,
    "url": "https://jina-ai-gmbh.ghost.io/author/company/"
  },
  "primary_tag": {
    "id": "655b2782bb728c000101bed7",
    "name": "Press",
    "slug": "press",
    "description": null,
    "feature_image": null,
    "visibility": "public",
    "og_image": null,
    "og_title": null,
    "og_description": null,
    "twitter_image": null,
    "twitter_title": null,
    "twitter_description": null,
    "meta_title": null,
    "meta_description": null,
    "codeinjection_head": null,
    "codeinjection_foot": null,
    "canonical_url": null,
    "accent_color": null,
    "url": "https://jina-ai-gmbh.ghost.io/tag/press/"
  },
  "url": "https://jina-ai-gmbh.ghost.io/podcast/readerlm-v2-frontier-small-language-model-for-html-to-markdown-and-json/",
  "excerpt": "ReaderLM-v2 是一个参数量为 1.5B 的小型语言模型，专门用于 HTML 转 Markdown 转换和 HTML 转 JSON 提取，具有卓越的准确性。",
  "reading_time": 16,
  "access": true,
  "comments": false,
  "og_image": null,
  "og_title": null,
  "og_description": null,
  "twitter_image": null,
  "twitter_title": null,
  "twitter_description": null,
  "meta_title": null,
  "meta_description": null,
  "email_subject": null,
  "frontmatter": null,
  "feature_image_alt": null,
  "feature_image_caption": null
}
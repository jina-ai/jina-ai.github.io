{
  "slug": "using-deepseek-r1-reasoning-model-in-deepsearch",
  "id": "67dd5037143bda0001036423",
  "uuid": "3ebc2ba7-b65b-408b-9466-ca902b28756a",
  "title": "在 DeepSearch 中使用 DeepSeek R1 推理模型",
  "html": "<p><a href=\"https://jina.ai/news/a-practical-guide-to-implementing-deepsearch-deepresearch\">在我们看来，DeepSearch 本质上是一个大型的 while 循环。</a>在给定最大 token 限额的情况下，它在搜索、阅读和思考之间循环，直到找到最佳答案。LLM 的一个关键任务是根据当前的记忆状态来决定下一步采取什么行动。它应该继续搜索吗？阅读网页吗？还是直接回答问题？</p><p>在我们的 <a href=\"https://github.com/jina-ai/node-DeepResearch\">node-deepresearch</a> 实现中，我们使用<em>标准</em> LLM（<code>gemini-2.0-flash</code>）来选择行动。我们称之为\"标准\"，是因为推理过程是通过提示工程明确设定的，然后作为序列输入-输出运行，选择的行动以 JSON 对象形式返回。因此，一个自然的问题出现了：用专门的推理模型替换这个决策步骤是否会提高 DeepSearch 的性能？</p><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://jina-ai-gmbh.ghost.io/content/images/2025/04/Heading--91-.png\" class=\"kg-image\" alt=\"\" loading=\"lazy\" width=\"1200\" height=\"630\" srcset=\"https://jina-ai-gmbh.ghost.io/content/images/size/w600/2025/04/Heading--91-.png 600w, https://jina-ai-gmbh.ghost.io/content/images/size/w1000/2025/04/Heading--91-.png 1000w, https://jina-ai-gmbh.ghost.io/content/images/2025/04/Heading--91-.png 1200w\" sizes=\"(min-width: 720px) 720px\"><figcaption><span style=\"white-space: pre-wrap;\">在我们的 DeepSearch 实现中，大型 while 循环的行动决策步骤根据当前上下文和记忆来确定下一步应该采取什么行动。</span></figcaption></figure><p>在本文中，我们探讨使用 <a href=\"https://github.com/deepseek-ai/DeepSeek-R1\">DeepSeek R1</a> 671b，一个推理 LLM 来替代这个决策步骤中的 <code>gemini-2.0-flash</code>。我们相信 R1 的推理能力将有助于解决在网络搜索和分析结果中的复杂问题。</p><p>为了测试这个概念，我们让它完成一个实际的例子：规划一个完整的三天假期行程，然后评估其表现。执行深度搜索任务的代理可能会遇到与人类相同的问题，所以在我们的假期任务中，模型可能会遇到以下问题：</p><ul><li><strong>知识空白（信息依赖于其他信息）</strong>：例如，你想参观埃菲尔铁塔，但不知道它在公共假期是否开放。你需要同时了解铁塔的假期安排和法国公共假期的日期。</li><li><strong>错误或过时的信息</strong>：2020 年的一篇旅游博客建议罗马的某家餐厅周日营业，但到达后发现它已经改变营业时间，现在周日休息。</li><li><strong>矛盾信息</strong>：一个旅游网站声称纽约的某家酒店提供免费早餐，而另一个网站则表示房费不包含早餐。</li><li><strong>模糊信息</strong>：旅游论坛的一篇帖子提到\"巴塞罗那附近有一个很棒的海滩\"，但没有具体说明是哪个海滩或提供清晰的方向指引，这使得很难确定具体位置。</li></ul><p>R1 可以将复杂任务分解为可执行的步骤，识别差距和不一致，并处理诸如被屏蔽的网站和订阅墙等障碍。它具备收集所需知识和综合答案的推理能力。然而，它不能单独为我们规划假期——这需要搜索网络并理解返回的结果。我们必须对其进行加强，提供框架并增强其能力，才能胜任这项工作。</p><h2 id=\"implementation\">实现</h2><figure class=\"kg-card kg-bookmark-card kg-card-hascaption\"><a class=\"kg-bookmark-container\" href=\"https://colab.research.google.com/drive/18sqU8_eWqFleKqpd-SnGDNmZ_P1KLfXw?usp=sharing#scrollTo=2jFWdbnp_6ws\"><div class=\"kg-bookmark-content\"><div class=\"kg-bookmark-title\">Google Colab</div><div class=\"kg-bookmark-description\"></div><div class=\"kg-bookmark-metadata\"><img class=\"kg-bookmark-icon\" src=\"https://jina-ai-gmbh.ghost.io/content/images/icon/favicon-32.ico\" alt=\"\"></div></div><div class=\"kg-bookmark-thumbnail\"><img src=\"https://jina-ai-gmbh.ghost.io/content/images/thumbnail/colab_favicon_256px-7.png\" alt=\"\" onerror=\"this.style.display = 'none'\"></div></a><figcaption><p><span style=\"white-space: pre-wrap;\">要运行这个 notebook，你需要免费的 </span><a href=\"https://jina.ai\"><span style=\"white-space: pre-wrap;\">Jina AI</span></a><span style=\"white-space: pre-wrap;\"> 和 </span><a href=\"https://openrouter.ai\"><span style=\"white-space: pre-wrap;\">OpenRouter</span></a><span style=\"white-space: pre-wrap;\"> API 密钥。</span></p></figcaption></figure><p>虽然 R1 是我们代理的引擎，但我们还添加了一些工具、状态对象，当然还有一个（相当大的）提示。以下是简化的表示：</p><figure class=\"kg-card kg-image-card\"><img src=\"https://jina-ai-gmbh.ghost.io/content/images/2025/03/image-29.png\" class=\"kg-image\" alt=\"\" loading=\"lazy\" width=\"1639\" height=\"2256\" srcset=\"https://jina-ai-gmbh.ghost.io/content/images/size/w600/2025/03/image-29.png 600w, https://jina-ai-gmbh.ghost.io/content/images/size/w1000/2025/03/image-29.png 1000w, https://jina-ai-gmbh.ghost.io/content/images/size/w1600/2025/03/image-29.png 1600w, https://jina-ai-gmbh.ghost.io/content/images/2025/03/image-29.png 1639w\" sizes=\"(min-width: 720px) 720px\"></figure><ul><li><strong>工具</strong>可以被模型调用来搜索和抓取网页，结果存储在状态中。</li><li><strong>状态</strong>跟踪工具结果、任务状态和知识。它存储在提示本身中。</li><li><strong>单一提示</strong>提供指令，指定任务和如何完成它，以及存储状态。</li></ul><p>我们稍后会详细介绍每一个部分，特别是提示。但简而言之，系统的工作方式如下：</p><p>我们从带有未填充状态对象的提示开始。当任务正在进行（即试图产生答案）时，代理会循环执行以下步骤直到产生答案：</p><ol><li>模型从提示中检查任务和其状态，并推理如何最好地使用其工具来获得答案。</li><li>模型输出一个 JSON 对象，指定其状态（<code>IN PROGRESS</code> 或 <code>DONE</code>），内存更新，工具调用，和答案（初始为 <code>null</code>）。</li><li>代理异步调用工具，结果被嵌入回提示中，以及第 3 步的 JSON 对象。</li><li>包含这些新信息的提示被重新输入模型以进行另一个循环。</li></ol><p>一旦模型在其输出中提供答案，任务就结束并交付答案。</p><div class=\"kg-card kg-callout-card kg-callout-card-blue\"><div class=\"kg-callout-emoji\">💡</div><div class=\"kg-callout-text\">为了更好地了解代理是如何工作的，我们建议你自己试用<a href=\"https://colab.research.google.com/drive/18sqU8_eWqFleKqpd-SnGDNmZ_P1KLfXw?usp=sharing#scrollTo=2jFWdbnp_6ws\">这个 notebook</a>并检查每次迭代的输出。</div></div><p>现在我们有了一个高层次的概述，让我们依次看看工具、状态和提示：</p><h2 id=\"tools\">工具</h2><p>由于 R1 本身无法搜索或抓取网页，我们访问 Jina 的 Reader API 来扩展其功能。这包括两种模式：</p><ul><li><strong>搜索模式</strong>：搜索网络上的相关术语并返回搜索引擎结果（包括每个结果的 URL、标题和描述）。</li><li><strong>读取模式</strong>：抓取搜索结果的页面并以 Markdown 格式返回。</li></ul><p>由于 R1 的上下文窗口有限，我们不能简单地将整个页面倾倒到提示的 <code>Tool Results</code> 部分。我们需要额外的工具来在传递给模型之前选择最相关的信息：</p><ul><li><a href=\"https://python.langchain.com/docs/concepts/text_splitters/\"><strong>LangChain 递归字符文本分割器</strong></a>：我们使用 <code>RecursiveCharacterTextSplitter</code> 将长输出分割成段落，在段落和句子上递归分割，直到得到所需的段落大小。这确保输出易于被 R1 的有限上下文窗口处理。</li><li><a href=\"https://jina.ai/reranker\"><strong>Jina Reranker</strong></a>：我们使用 <code>jina-reranker-v2-base-multilingual</code> 对段落重新排序，并将排名最高的段落组合成一个结果。</li></ul><p>不幸的是，DeepSeek R1 不像 <code>o3-mini</code> 那样支持工具使用。例如，使用 <code>o3-mini</code>，我们可以这样做：</p><figure class=\"kg-card kg-code-card\"><pre><code class=\"language-python\">def scrape_page(url: str):\n    \"\"\"Scrape a web page with Jina Reader\"\"\"\n\ntools = [\n    {\n        \"type\": \"function\",\n        \"function\": {\n            \"name\": \"scrape_page\",\n            \"description\": \"Scrape the content of a webpage\",\n            \"parameters\": {\n                \"url\": {\"type\": \"string\", \"description\": \"The URL to scrape\"}\n            }\n        }\n    }\n]\n\nclient = OpenAI()\nresponse = client.completions.create(\n    model=\"o3-mini\",\n    prompt=f\"Scrape www.skyscanner.net/routes/gr/de/germany-to-crete.html\",\n    tools=tools\n)\n</code></pre><figcaption><p><span style=\"white-space: pre-wrap;\">支持工具使用的 o3-mini 代码示例</span></p></figcaption></figure><p>但这对 R1 来说并不容易：它没有可以传递给 API 的 <code>tools</code> 参数，也不会在其响应中返回结构化的 <code>tool_calls</code>。简单来说，它没有被训练来使用工具（<a href=\"https://github.com/deepseek-ai/DeepSeek-R1/issues/9\">而且短期内也不会支持它们</a>）。至少，它不以传统意义上支持它们。但是，我们<em>可以</em>要求 R1 以 JSON 格式输出工具调用，并将工具调用结果反馈回模型进行分析：</p><figure class=\"kg-card kg-code-card\"><pre><code class=\"language-markdown\">你必须使用有效的 JSON 对象响应，包含：\n```json\n{\n  \"tool_calls\": [\n    {\"tool\": \"search\", \"input\": \"2025 年 5 月从德国到克里特岛最便宜的航班\"},\n    {\"tool\": \"scrape\", \"input\": \"&lt;https://www.skyscanner.net/routes/gr/de/germany-to-crete.html&gt;\"}\n  ]\n}\n```</code></pre><figcaption><p><span style=\"white-space: pre-wrap;\">作为 R1 提示词一部分的工具调用</span></p></figcaption></figure><p>在第 <em>n</em> 次迭代中模型输出工具调用后，这些工具会被执行，执行结果会被嵌入到提示词的 <code>Tool Results</code> 部分，供模型在第 <em>n+1</em> 次迭代中进行推理:</p><figure class=\"kg-card kg-code-card\"><pre><code class=\"language-markdown\">Tool Results:\n\nSource 1️: search: Cheapest flights from Germany to Crete May 2025\nResult:\n\n```\nTitle: Affordable flights: Germany - Heraklion (Crete) (HER) | Eurowings URL Source: https://www.eurowings.com/en/booking/offers/flights-from/DE/to/GR/HER.html Description: Affordable flights from Germany to Heraklion (Crete) ✈ Eurowings brings you closer to your dream destination from as little as €89.99*. Book now and enjoy.\nTitle: Are you a person or a robot? URL Source: https://www.skyscanner.com/routes/fran/her/frankfurt-to-crete-heraklion.html Description: Book a one-way ticket from Frankfurt to Heraklion Airport from $78 or travel return from just $154. The prices shown are based on availability and could change ...\n```\n</code></pre><figcaption><p><span style=\"white-space: pre-wrap;\">工具结果，显示德国-克里特岛航班搜索结果</span></p></figcaption></figure><h2 id=\"state\">状态</h2><p>状态用于跟踪任务状态（<code>Status</code>）和模型需要分析和更新的知识（<code>Memory</code>）。简而言之，它是系统的工作记忆和记忆库。这些信息存储在提示词中名为 <code>{{ workspace }}</code> 的部分，最初是一个空白状态：</p><figure class=\"kg-card kg-code-card\"><pre><code class=\"language-markdown\">Status: IN_PROGRESS\nMemory: \n... no memory blocks ..\n</code></pre><figcaption><p><span style=\"white-space: pre-wrap;\">空状态对象</span></p></figcaption></figure><p>当模型对任务进行推理、运行工具并收集输出时，状态会被填充上带有随机分配 ID 的记忆块（从工具输出中提取）。对于我们的度假计划示例，在运行一次代理迭代后，状态可能如下所示：</p><figure class=\"kg-card kg-code-card\"><pre><code class=\"language-markdown\">Status: IN_PROGRESS\nMemory: \n&lt;nuz-032&gt;Potential warm May destinations: Malaga (Spain), Crete (Greece), Algarve (Portugal)&lt;/nuz-032&gt;\n&lt;xwj-969&gt;URL to scrape for Crete hotel details: &lt;https://www.tripadvisor.com/HotelsList-Crete-Beachfront-Cheap-Hotels-zfp13280541.html&gt;&lt;/xwj-969&gt;\n&lt;vsc-583&gt;URL to scrape for flight details: &lt;https://www.expedia.com/lp/flights/fra/her/frankfurt-to-heraklion&gt;&lt;/vsc-583&gt;\n</code></pre><figcaption><p><span style=\"white-space: pre-wrap;\">DeepSeek R1 填充的状态</span></p></figcaption></figure><p>通过在模型的 JSON 响应中包含 <code>memory_updates</code> 列表来更新记忆块：</p><figure class=\"kg-card kg-code-card\"><pre><code class=\"language-json\">{\n\t\"memory_updates\": [\n\t  {\"operation\": \"add\", \"content\": \"Round-trip flight from Berlin to Tenerife in May 2025 ranges from €59.99 to €200 round-trip as per the Skyscanner and Iberia sources.\"},\n\t  {\"operation\": \"delete\", \"id\": \"nuz-032\"},\n\t  ...\n\t]\n}</code></pre><figcaption><p><span style=\"white-space: pre-wrap;\">作为 R1 的 JSON 输出一部分的记忆更新</span></p></figcaption></figure><ul><li><strong><code>add</code> 操作</strong>添加一个记忆块，可用于存储重要信息，如线索、发现、信息缺口和已采取的行动。</li><li><strong><code>delete</code> 操作</strong>删除一个记忆块，允许模型删除旧的、不必要的或错误的信息并保持工作区整洁。</li></ul><div class=\"kg-card kg-callout-card kg-callout-card-yellow\"><div class=\"kg-callout-emoji\">💡</div><div class=\"kg-callout-text\">我们还测试了 <code spellcheck=\"false\" style=\"white-space: pre-wrap;\">replace</code> 操作，但我们发现模型生成了大量信息块（过度依赖 <code spellcheck=\"false\" style=\"white-space: pre-wrap;\">replace</code>），因此决定移除这个选项。</div></div><p>与发出工具调用相比，R1 在管理自己的记忆方面不太熟练。虽然模型经过特定训练可以处理复杂的数学问题和编码任务——这种训练使其能够生成准确的 JSON 对象并执行工具调用——但它没有经过训练来管理记忆类状态（据我们所知，其他模型也没有）。</p><p>使用紧凑的记忆状态存储信息相比于每轮存储模型的全部输出有几个优势。这种方法在提示词中压缩信息，防止上下文溢出，同时增强模型对相关知识的关注。我们保持 JSON 格式是因为它便于更新，但 JSON 在提示词中以人类可读的格式呈现。</p><p>即便如此，记忆管理仍然超出了 R1 的核心领域；我们需要实现多个指令来指导模型正确处理记忆操作。以下是我们提示词中处理这方面的部分：</p><figure class=\"kg-card kg-code-card\"><pre><code class=\"language-markdown\">... other contents of the prompt ...\n\n## Memory Block Usage\n- Each memory block has a unique ID in format &lt;abc-123&gt;content&lt;/abc-123&gt;\n- Create separate blocks for distinct pieces of information:\n  * Discovered URLs (both explored and pending)\n  * Information gaps that need investigation\n  * Actions already taken (to avoid repetition)\n  * Promising leads for future exploration\n  * Key facts and findings\n  * Contradictions or inconsistencies found\n- Keep each block focused on a single idea or piece of information\n- Always cite sources when recording information from tool results\n- Use IDs to track and manage your knowledge (e.g., deleting outdated information)\n- Make sure to store sources (URLs) for the facts and findings you store\n\n## Lead Management\n- Since you can only make 3 tool calls per round, store promising leads for later\n- Create dedicated memory blocks for URLs to scrape later\n- Maintain blocks for potential search queries to explore in future rounds \n- Prioritize leads based on relevance to the task\n\n... other contents of the prompt ...</code></pre><figcaption><p><span style=\"white-space: pre-wrap;\">提示词中的记忆处理说明</span></p></figcaption></figure><h2 id=\"prompt\">提示词</h2><p>我们使用 <a href=\"https://jinja.palletsprojects.com/en/stable/templates/\">Jinja 模板格式</a>创建提示词。它包含几个部分：</p><ul><li><strong>上下文</strong>（在本例中为当前日期）。</li><li><strong>说明</strong>，涵盖一切如何工作，并告诉模型有哪些可用工具。</li><li><strong>状态</strong>，如上所述。</li><li><strong>工具输出</strong>，来自 <code>search</code> 和 <code>scrape</code> 工具。</li></ul><figure class=\"kg-card kg-code-card\"><pre><code class=\"language-markdown\">{% macro format_tool_results(tool_records) %}\n{% for to in tool_records %}\nSource {{ loop.index }}️: {{ to.tool }}: {{ to.input }}\nResult:\n```\n{{ to.output }}\n```\n{% endfor %}\n{% endmacro %}\n\nThe date: `{{ current_date }}`.\nYou are an information analysis and exploration agent that builds solutions through systematic investigation.\n\n## Investigation Cycle\nYou operate in a continuous investigation cycle:\n\n1. Review current workspace (your memory blocks)\n2. Analyze new tool results (or initial task if first round)\n3. Update memory with new insights and track investigation progress\n4. Decide on next tools to call based on identified leads and information gaps\n5. Repeat until task completion\n\n## Memory Structure\nYour memory persists between investigation cycles and consists of:\n- **Status**: Always the first line, indicates if the task is IN_PROGRESS or DONE\n- **Memory**: A collection of discrete information blocks, each with a unique ID\n\n## Memory Block Usage\n- Each memory block has a unique ID in format &lt;abc-123&gt;content&lt;/abc-123&gt;\n- Create separate blocks for distinct pieces of information:\n  * Discovered URLs (both explored and pending)\n  * Information gaps that need investigation\n  * Actions already taken (to avoid repetition)\n  * Promising leads for future exploration\n  * Key facts and findings\n  * Contradictions or inconsistencies found\n- Keep each block focused on a single idea or piece of information\n- Always cite sources when recording information from tool results\n- Use IDs to track and manage your knowledge (e.g., deleting outdated information)\n- Make sure to store sources (URLs) for the facts and findings you store\n\n## Lead Management\n- Since you can only make 3 tool calls per round, store promising leads for later\n- Create dedicated memory blocks for URLs to scrape later\n- Maintain blocks for potential search queries to explore in future rounds\n- Prioritize leads based on relevance to the task\n\n## Available Tools\n- **search**: Use for broad information gathering on new topics or concepts\n  * Example: {\"tool\": \"search\", \"input\": \"renewable energy statistics 2023\"}\n- **scrape**: Use for extracting specific details from discovered URLs\n  * Example: {\"tool\": \"scrape\", \"input\": \"https://example.com/energy-report\"}\n\n## Tool Usage Guidelines\n- **When to use search**: For new concepts, filling knowledge gaps, or exploring new directions\n- **When to use scrape**: For URLs discovered that likely contain detailed information\n- **Maximum 3 tool calls per round**\n- **Never repeat the exact same tool call**\n- **Always record valuable information from tool results in memory blocks**\n\n## Response Format\nYou must respond with a valid JSON object containing:\n\n```json\n{\n  \"status_update\": \"IN_PROGRESS or DONE\",\n  \"memory_updates\": [\n    {\"operation\": \"add\", \"content\": \"New insight or lead to investigate\"},\n    {\"operation\": \"delete\", \"id\": \"abc-123\"}\n  ],\n  \"tool_calls\": [\n    {\"tool\": \"search\", \"input\": \"specific search query\"},\n    {\"tool\": \"scrape\", \"input\": \"https://discovered-url.com\"}\n  ],\n  \"answer\": \"Your final, comprehensive answer when status is DONE\"\n}\n```\n\n## Important Rules\n- The \"add\" operation creates a new memory block\n\tYou do not need to specify an ID, it will be added automatically by the system.\n- The \"delete\" operation requires the specific ID of the block to remove\n- Never invent or fabricate information - only use facts from your memory or tool results\n- Never make up URLs - only use URLs discovered through tool results\n- CRITICAL: Any information not recorded in your memory blocks will be lost in the next round\n  For example, if you find a potential webpage to scrap, you must store the URL and your intention\n  Example: `{\"operation\": \"add\", \"content\": \"Found relevant URL: https://... to scrape ...\"}`\n- Set status to \"DONE\" only when you have fully addressed the task\n- Only include the \"answer\" field when status is \"DONE\"\n\nTask:\n```\n{{ task }}\n```\n\nCurrent workspace:\n```\n{{ workspace }}\n```\n\nTool Results:\n{{ format_tool_results(tool_records) if tool_records else '... no previous tool results ...'}}\n\nIMPORTANT: Generate a valid JSON response following the format above.\n\nThink carefully about:\n- what information do you need to preserve\n- which tools to call next\n- how to build your answer systematically with focused memory blocks</code></pre><figcaption><p><span style=\"white-space: pre-wrap;\">在我们深度搜索系统中使用的完整提示词</span></p></figcaption></figure><div class=\"kg-card kg-callout-card kg-callout-card-yellow\"><div class=\"kg-callout-emoji\">💡</div><div class=\"kg-callout-text\">提示顶部的 Jinja 宏函数只是以更整洁的格式渲染工具结果。</div></div><h2 id=\"evaluation\">评估</h2><p>我们用我们的假期计划示例对系统进行了测试。以下是嵌入到提示中的任务：</p><pre><code class=\"language-text\">Help me plan a 3 day holiday in Europe in May for under 2000 EUR\n1. I need specific flight and hotel recommendations.\n2. I want the destination to be warm.\n3. I want to have a beach nearby the hotel.\nI live in Germany.</code></pre><p>这是最终结果（经过五次循环迭代）：</p><figure class=\"kg-card kg-code-card\"><pre><code class=\"language-markdown\">**3-Day Crete Holiday Plan (Total ≈ €600-800)**\n\n✈️ *Flights (From Frankfurt):*  \n- Skyscanner: €154 round trip (May 2025 dates)  \n  Source: &lt;https://www.skyscanner.com/routes/fran/her/frankfurt-to-crete-heraklion.html&gt;  \n- Backup: Eurowings €180 round trip  \n\n🏨 *Beachfront Hotels:*  \n1. **Georgioupolis Beach Hotel**  \n   - Direct beach access, bike rentals €10  \n   - Source: &lt;https://www.tripadvisor.com/HotelsList-Crete-Beachfront-Cheap-Hotels-zfp13280541.html&gt;  \n\n2. **JT Apartments**  \n   - €57/night, 9.5/10 rating, 5-min walk to beach  \n   - Source: &lt;https://www.booking.com/region/gr/crete.html&gt;  \n\n3. **FNK Apartments**  \n   - Sea views, 9.6/10 rating  \n\n💰 *Budget Breakdown:*  \n- Flights: €154  \n- Hotel (3 nights): €171-250  \n- Remaining: €1,600+ for meals/activities  \n\n*Note:* All hotels are &lt;5 mins from beaches. Crete averages 25°C in May (Source: TravelSupermarket).\n</code></pre><figcaption><p><span style=\"white-space: pre-wrap;\">经过五次迭代后的假期搜索任务结果</span></p></figcaption></figure><p>这个回答看起来很合理。但它真的准确吗？毕竟，模型可能会产生幻觉，而且在一个有多个组件的系统中，很可能会出现问题。让我们验证一下 R1 输出中的一些细节：</p><h3 id=\"destination-and-total-budget\">目的地和总预算</h3><p>每个项目的计算都加起来了（我们稍后会讨论每个项目是否准确）。毕竟，R1 是经过数学问题训练的。目的地也没问题；克里特岛是一个很受欢迎的地点。</p><h3 id=\"flights\">航班</h3><p>机票价格几乎是对的，但让我们看看哪里出了问题。首先，这是从法兰克福到赫拉克利翁 2025 年 5 月往返航班在 Skyscanner 上的实际价格：</p><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://jina-ai-gmbh.ghost.io/content/images/2025/03/image-25.png\" class=\"kg-image\" alt=\"\" loading=\"lazy\" width=\"2000\" height=\"2384\" srcset=\"https://jina-ai-gmbh.ghost.io/content/images/size/w600/2025/03/image-25.png 600w, https://jina-ai-gmbh.ghost.io/content/images/size/w1000/2025/03/image-25.png 1000w, https://jina-ai-gmbh.ghost.io/content/images/size/w1600/2025/03/image-25.png 1600w, https://jina-ai-gmbh.ghost.io/content/images/2025/03/image-25.png 2048w\" sizes=\"(min-width: 720px) 720px\"><figcaption><span style=\"white-space: pre-wrap;\">2025 年 5 月法兰克福-赫拉克利翁航班的实际 Skyscanner 搜索结果</span></figcaption></figure><p>我们可以看到价格都在 200 欧元左右，而不是承诺的往返 154 欧元！但这个错误是从哪里来的呢？查看日志，我们发现在第三轮中添加了一个相关的记忆块：</p><figure class=\"kg-card kg-code-card\"><pre><code class=\"language-json\">{\"operation\": \"add\", \"content\": \"Crete flight options: Eurowings €89.99* one-way ...\"}</code></pre><figcaption><p><span style=\"white-space: pre-wrap;\">与德国-克里特岛航班相关的记忆块</span></p></figcaption></figure><p>这个块似乎是从附加的搜索结果中推断出来的：</p><figure class=\"kg-card kg-code-card\"><pre><code class=\"language-markdown\">Source 1️: search: Cheapest flights from Germany to Crete May 2025\nResult:\n```\n... other results ...\nTitle: Are you a person or a robot?\nURL Source: https://www.skyscanner.com/routes/fran/her/frankfurt-to-crete-heraklion.html\nDescription: Book a one-way ticket from Frankfurt to Heraklion Airport from $78 or travel \nreturn from just $154. The prices shown are based on availability and could change ...\n```</code></pre><figcaption><p><span style=\"white-space: pre-wrap;\">德国-克里特岛航班的搜索结果</span></p></figcaption></figure><p>模型从未尝试抓取这个网页来确认结果，但这可能也不会有什么区别。不过，它至少应该注意到搜索结果中并没有包含\"五月\"这个时间段。</p><h3 id=\"hotel\">酒店</h3><p>酒店信息是正确的，但我们发现可以做一些改进。首先，我们希望模型能够更努力地找到 Georgioupolis Beach Hotel 和 FNK Apartments 的价格 —— 虽然它提供了其他信息，但遗憾的是缺少价格。为了说明我们的意思，这里是用于生成酒店推荐的<a href=\"https://www.booking.com/region/gr/crete.html\">URL</a>的原始抓取输出。它只显示了第一个和最后一个结果的价格，跳过了中间三个：</p><figure class=\"kg-card kg-code-card\"><pre><code class=\"language-markdown\">来源 3️: 抓取: https://www.booking.com/region/gr/crete.html\n结果:\n```\n显示更多 显示更少\n\nMoritz 德国\n\n*   ### [JT Apartments](https://www.booking.com/hotel/gr/jt-apatments.html?label=gen173nr-1FCAYoXEIFY3JldGVIM1gEaJUCiAEBmAExuAEZyAEM2AEB6AEB-AECiAIBqAIDuALSvqC-BsACAdICJDc5ZWE5ZDJkLTI2ZWEtNGNiMS04MzNlLTJhNWIyMGI5Y2M3NdgCBeACAQ&amp;sid=f21cdd5fe9eb08dcac7d3a0304f9ccc9)\n\nKissamos\n\n每晚 57 美元起\n\n9.5 极好 313 条评论\n\n我强烈推荐入住 JT Apartments。当我们进入公寓时，我们收到了一个惊喜。一切设施都很完善。周边环境安静，附近有超市。海滩就在步行距离内。如果你想参观克里特岛最美的海滩，这里是绝佳的位置。感谢你们让我们的住宿体验完全符合我们的期待 :)\n\n显示更多 显示更少\n\nKatarzyna 波兰\n显示更多 显示更少\n\nAitor 德国\n\n*   ### [FNK Apartments with Sea View](https://www.booking.com/hotel/gr/f-amp-k-apartments.html?label=gen173nr-1FCAYoXEIFY3JldGVIM1gEaJUCiAEBmAExuAEZyAEM2AEB6AEB-AECiAIBqAIDuALSvqC-BsACAdICJDc5ZWE5ZDJkLTI2ZWEtNGNiMS04MzNlLTJhNWIyMGI5Y2M3NdgCBeACAQ&amp;sid=f21cdd5fe9eb08dcac7d3a0304f9ccc9)\n\nAgia Pelagia\n\n9.6 极好 64 条评论\n\n我们在克里特岛待了一周。期间，我们住在 FnK Apartments。Froso 和 Konstantinos 是非常友好和出色的房东。如果我们有任何问题或需求，他们总是随时准备帮助我们。公寓本身拥有 Agia Pelagia 和周围海湾的美丽景色（甚至能看到美丽的日出）。我们强烈推荐 FnK Apartments！！\n\n显示更多 显示更少\n\nMoritz 德国\n显示更多 显示更少\n\nmary 美国\n\n*   ### [Artemis Hotel Apartments](https://www.booking.com/hotel/gr/artemis-hersonisos.html?label=gen173nr-1FCAYoXEIFY3JldGVIM1gEaJUCiAEBmAExuAEZyAEM2AEB6AEB-AECiAIBqAIDuALSvqC-BsACAdICJDc5ZWE5ZDJkLTI2ZWEtNGNiMS04MzNlLTJhNWIyMGI5Y2M3NdgCBeACAQ&amp;sid=f21cdd5fe9eb08dcac7d3a0304f9ccc9)\n\nLimenas Hersonissou, Hersonissos\n\n9.0 优秀 419 条评论\n\n如果你想感受宾至如归，被当作朋友对待，知道你会在一切事情上得到帮助，我们强烈推荐你入住这家酒店。由衷感谢 Konstantine 的热情和非常个性化的服务！下次访问克里特岛时，我们很乐意再次入住 Artemis Hotel！\n\n显示更多 显示更少\n\nIrina 以色列\n显示更多 显示更少\n\nAnn Marie 爱尔兰\n\n*   ### [Pinelopi Hotel](https://www.booking.com/hotel/gr/pinelopi.html?label=gen173nr-1FCAYoXEIFY3JldGVIM1gEaJUCiAEBmAExuAEZyAEM2AEB6AEB-AECiAIBqAIDuALSvqC-BsACAdICJDc5ZWE5ZDJkLTI2ZWEtNGNiMS04MzNlLTJhNWIyMGI5Y2M3NdgCBeACAQ&amp;sid=f21cdd5fe9eb08dcac7d3a0304f9ccc9)\n\nPlatanes\n\n7.8 好 198 条评论\n\n地理位置优越，靠近海滩和出色的小酒馆，也适合开车环岛游。安静的区域，非常适合度假。宽敞的房间配备了所需的一切。性价比很高。泳池区很棒，你可以在一天中的任何时候在那里放松。酒店附近的停车场很完美。下次再访问克里特岛时，我一定会再次入住 Pinelopi Hotel。\n\n显示更多 显示更少\n\nRita 罗马尼亚\n显示更多 显示更少\n\nKatarzyna 波兰\n\n*   ### [Elizabeth Suites](https://www.booking.com/hotel/gr/elizabeth-suites.html?label=gen173nr-1FCAYoXEIFY3JldGVIM1gEaJUCiAEBmAExuAEZyAEM2AEB6AEB-AECiAIBqAIDuALSvqC-BsACAdICJDc5ZWE5ZDJkLTI2ZWEtNGNiMS04MzNlLTJhNWIyMGI5Y2M3NdgCBeACAQ&amp;sid=f21cdd5fe9eb08dcac7d3a0304f9ccc9)\n\nKato Daratso\n\n每晚 74 美元起\n\n9.1 优秀 86 条评论\n\n我们住得很愉快，老板 Epas 总是面带微笑，非常乐于助人，工作人员也很可爱，特别是 Anna。我们吃了几天早餐，分量非常充足。公寓的位置非常完美，便于前往海滩和餐厅。我们强烈推荐 Elizabeth Suites，让我们在克里特岛的第一次度假很愉快 😊\n\n显示更多 显示更少\n\nJean 英国\n```</code></pre><figcaption><p><span style=\"white-space: pre-wrap;\">booking.com 上克里特岛酒店列表的原始抓取搜索结果</span></p></figcaption></figure>\n\n其次，我们在使用预设的 <code>top_n</code> 为 5 的 Reranker 时发现了另一个问题——抓取的页面实际上包含了超过五个相关结果——我们本可以通过实际检查每个结果的相关性分数来解决这个问题，而不是仅仅取前五个（或任意数量的）结果。然而，理想的重排序配置因任务而异。解决这个问题的更好方法是直接使用整个抓取的页面——可惜由于 R1 有限的上下文长度，这是不可能的。\n\n### 整体表现和潜在改进\n\n模型最初表现不错，但我们注意到，除非特别提示，它很少尝试切换策略或制定复杂的计划。虽然 R1 在数学和编程问题（它专门训练的领域）中自然会采用这些方法，但它并没有将同样的推理应用到搜索任务中。虽然我们可以进一步优化提示（甚至使用多个提示）来解决这个限制，但这并不是我们的主要目标。\n\n我们还观察到，R1 没有充分处理时效性信息。简而言之，如果搜索结果没有明确提到错误的日期，模型会在不进一步验证的情况下假定信息有效。例如，在规划 5 月 1 日的航班时：\n\n* 德国到克里特岛 5 月 1 日 80 美元：**正确** - 模型可以信任这个信息。\n* 德国到克里特岛 1 月 1 日 80 美元：**错误** - 模型正确识别并丢弃这个信息。\n* 德国到克里特岛 80 美元：**假阳性** - 当没有指定日期时，模型未能验证信息，错误地假定其有效。\n\n如果我们要继续这个项目，我们可能会考虑实施以下几个潜在的改进：\n\n* 跟踪记忆块数量，并在状态变得过大时提示模型**总结条目**。\n* 指示模型在完成探索和回应查询之前**穷尽所有线索**。\n* 强调**验证时效性信息**。\n* 确保模型通过抓取搜索工具返回的 URL 来**二次检查结果**。\n* 使用**支持更大上下文窗口的未来推理模型**测试我们的系统，不过这需要大量重构和测试来调整提示以适应不同的模型。\n\n## 结论\n\n即使是在 R1 刚发布不久之后，这个领域已经发生了显著的变化。一些项目已经能以极低的成本（有些只需 5 美元）训练推理模型。这种民主化意味着训练专业模型变得比以往更加容易。我们对 R1 的实验为我们继续探索如何增强推理型 LLM 以处理复杂搜索任务提供了有用的基准。\n\n虽然我们的假期规划示例展示了很有前景的结果（特别是作为一个快速演示项目），但它也揭示了 R1 在处理搜索和记忆任务方面的局限性，与其在数学和编程方面的优势形成对比。虽然该系统成功地在预算范围内制定了旅行计划，但在验证时效性信息和彻底探索所有可用选项等方面表现不足，凸显了模型训练重点与其在不同领域应用之间的差距。",
  "comment_id": "67dd5037143bda0001036423",
  "feature_image": "https://jina-ai-gmbh.ghost.io/content/images/2025/04/Heading--92-.png",
  "featured": false,
  "visibility": "public",
  "created_at": "2025-03-21T12:40:39.000+01:00",
  "updated_at": "2025-04-01T09:38:45.000+02:00",
  "published_at": "2025-04-01T09:38:45.000+02:00",
  "custom_excerpt": "Standard LLM or reasoning model, which is better for DeepSearch? In this post, we explored using DeepSeek-R1 in the DeepSearch implementation for choosing the next action.",
  "codeinjection_head": null,
  "codeinjection_foot": null,
  "custom_template": null,
  "canonical_url": null,
  "authors": [
    {
      "id": "64ae64a4733bc60001949ca4",
      "name": "Andrei Ungureanu",
      "slug": "andrei",
      "profile_image": "https://jina-ai-gmbh.ghost.io/content/images/2023/07/Me.jpg",
      "cover_image": null,
      "bio": "Software / AI Engineer, with a passion for content creation.",
      "website": null,
      "location": "Beijing, China",
      "facebook": null,
      "twitter": null,
      "meta_title": null,
      "meta_description": null,
      "url": "https://jina-ai-gmbh.ghost.io/author/andrei/"
    },
    {
      "id": "632ade4a3e4e55003d525971",
      "name": "Alex C-G",
      "slug": "alexcg",
      "profile_image": "https://jina-ai-gmbh.ghost.io/content/images/2022/09/alex.jpg",
      "cover_image": "https://jina-ai-gmbh.ghost.io/content/images/2022/11/twitter_banner.jpg",
      "bio": "Open-source Evangelist @ Jina AI. Old, grim, and full of Vim",
      "website": null,
      "location": "Berlin, Germany",
      "facebook": null,
      "twitter": "@alexcg",
      "meta_title": null,
      "meta_description": null,
      "url": "https://jina-ai-gmbh.ghost.io/author/alexcg/"
    }
  ],
  "tags": [
    {
      "id": "634a1a8ccebfc1003d8ab706",
      "name": "Tech Blog",
      "slug": "tech-blog",
      "description": null,
      "feature_image": null,
      "visibility": "public",
      "og_image": null,
      "og_title": null,
      "og_description": null,
      "twitter_image": null,
      "twitter_title": null,
      "twitter_description": null,
      "meta_title": null,
      "meta_description": null,
      "codeinjection_head": null,
      "codeinjection_foot": null,
      "canonical_url": null,
      "accent_color": null,
      "url": "https://jina-ai-gmbh.ghost.io/tag/tech-blog/"
    }
  ],
  "primary_author": {
    "id": "64ae64a4733bc60001949ca4",
    "name": "Andrei Ungureanu",
    "slug": "andrei",
    "profile_image": "https://jina-ai-gmbh.ghost.io/content/images/2023/07/Me.jpg",
    "cover_image": null,
    "bio": "Software / AI Engineer, with a passion for content creation.",
    "website": null,
    "location": "Beijing, China",
    "facebook": null,
    "twitter": null,
    "meta_title": null,
    "meta_description": null,
    "url": "https://jina-ai-gmbh.ghost.io/author/andrei/"
  },
  "primary_tag": {
    "id": "634a1a8ccebfc1003d8ab706",
    "name": "Tech Blog",
    "slug": "tech-blog",
    "description": null,
    "feature_image": null,
    "visibility": "public",
    "og_image": null,
    "og_title": null,
    "og_description": null,
    "twitter_image": null,
    "twitter_title": null,
    "twitter_description": null,
    "meta_title": null,
    "meta_description": null,
    "codeinjection_head": null,
    "codeinjection_foot": null,
    "canonical_url": null,
    "accent_color": null,
    "url": "https://jina-ai-gmbh.ghost.io/tag/tech-blog/"
  },
  "url": "https://jina-ai-gmbh.ghost.io/podcast/using-deepseek-r1-reasoning-model-in-deepsearch/",
  "excerpt": "标准 LLM 还是推理模型，哪个更适合 DeepSearch？在这篇文章中，我们探索了在 DeepSearch 实现中使用 DeepSeek-R1 来选择下一步行动。",
  "reading_time": 17,
  "access": true,
  "comments": false,
  "og_image": null,
  "og_title": null,
  "og_description": null,
  "twitter_image": null,
  "twitter_title": null,
  "twitter_description": null,
  "meta_title": null,
  "meta_description": null,
  "email_subject": null,
  "frontmatter": null,
  "feature_image_alt": null,
  "feature_image_caption": null
}
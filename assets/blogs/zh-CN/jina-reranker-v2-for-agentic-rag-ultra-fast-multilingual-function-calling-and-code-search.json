{
  "slug": "jina-reranker-v2-for-agentic-rag-ultra-fast-multilingual-function-calling-and-code-search",
  "id": "6679720d1954df000135bc79",
  "uuid": "fc132d33-85a8-4ebd-90a3-c308abea558f",
  "title": "Jina Reranker v2：代理式 RAG 的超快、多语言、函数调用与代码搜索工具",
  "html": "<p>今天，我们发布了 <a href=\"https://jina.ai/reranker/?ref=jina-ai-gmbh.ghost.io\">Jina Reranker <strong><em>v2</em></strong></a>（<code>jina-reranker-v2-base-multilingual</code>），这是我们搜索基础系列中最新且性能最佳的神经重排模型。使用 Jina Reranker v2，RAG/搜索系统的开发者可以享受以下优势：</p><ul><li><strong>多语言：</strong>支持<em>100+ 种语言</em>的更相关搜索结果，性能优于 <code>bge-reranker-v2-m3</code>；</li><li><strong>智能代理：</strong>为智能代理 RAG 提供最先进的<em>函数调用和 text-to-SQL</em> 感知文档重排；</li><li><strong>代码检索：</strong>在<em>代码检索</em>任务上表现出色，以及</li><li><strong>超快速度：</strong>文档处理吞吐量比 <code>bge-reranker-v2-m3</code> 快 <em>15 倍</em>，比 <code>jina-reranker-v1-base-en</code> 快 6 倍。</li></ul><p>您可以通过我们的 Reranker API 开始使用 Jina Reranker v2，我们为所有新用户提供 100 万个免费 token。</p><figure class=\"kg-card kg-bookmark-card\"><a class=\"kg-bookmark-container\" href=\"https://jina.ai/reranker/?ref=jina-ai-gmbh.ghost.io\"><div class=\"kg-bookmark-content\"><div class=\"kg-bookmark-title\">Reranker API</div><div class=\"kg-bookmark-description\">轻松提升搜索相关性和 RAG 准确性。</div><div class=\"kg-bookmark-metadata\"><img class=\"kg-bookmark-icon\" src=\"https://jina.ai/icons/favicon-128x128.png\" alt=\"\"></div></div><div class=\"kg-bookmark-thumbnail\"><img src=\"https://jina.ai/banner-reranker-api.png\" alt=\"\"></div></a></figure><p>在本文中，我们将详细介绍 Jina Reranker v2 支持的这些新特性，展示我们的重排模型与其他最先进模型（包括 <a href=\"https://jina.ai/news/maximizing-search-relevancy-and-rag-accuracy-with-jina-reranker?ref=jina-ai-gmbh.ghost.io\">Jina Reranker v1</a>）的性能对比，并解释使 Jina Reranker v2 在任务准确性和文档吞吐量方面达到顶级性能的训练过程。</p><h2 id=\"recap-why-you-need-a-reranker\">回顾：为什么需要重排器</h2><p>虽然嵌入模型是<a href=\"https://jina.ai/?sui=&ref=jina-ai-gmbh.ghost.io\">搜索基础</a>中使用最广泛和最容易理解的组件，但它们通常为了检索速度而牺牲了精确性。基于嵌入的搜索模型通常是双编码器模型，每个文档都被嵌入并存储，然后查询也被嵌入，检索则基于查询嵌入与文档嵌入之间的相似度。在这个模型中，用户查询和匹配文档之间的许多 token 级别的交互细节都丢失了，因为原始查询和文档永远无法\"看到\"对方 - 只有它们的嵌入可以。这可能会影响检索准确性 - 而这正是交叉编码器重排模型擅长的领域。</p><figure class=\"kg-card kg-bookmark-card\"><a class=\"kg-bookmark-container\" href=\"https://jina.ai/news/maximizing-search-relevancy-and-rag-accuracy-with-jina-reranker?ref=jina-ai-gmbh.ghost.io\"><div class=\"kg-bookmark-content\"><div class=\"kg-bookmark-title\">使用 Jina Reranker 最大化搜索相关性和 RAG 准确性</div><div class=\"kg-bookmark-description\">使用 Jina Reranker 提升您的搜索和 RAG 准确性。我们的新模型比简单的向量搜索提高了 20% 的准确性和相关性。立即免费试用！</div><div class=\"kg-bookmark-metadata\"><img class=\"kg-bookmark-icon\" src=\"https://jina.ai/icons/favicon-128x128.png\" alt=\"\"></div></div><div class=\"kg-bookmark-thumbnail\"><img src=\"https://jina-ai-gmbh.ghost.io/content/images/2024/02/Reranker1.png\" alt=\"\"></div></a></figure><p>重排器通过采用交叉编码器架构解决了这种细粒度语义缺失的问题，查询-文档对一起编码以产生相关性分数，而不是嵌入。<a href=\"https://arxiv.org/pdf/2207.06300?ref=jina-ai-gmbh.ghost.io\" rel=\"noreferrer\">研究</a>表明，对于大多数 RAG 系统，使用重排器模型可以改善语义基础并减少幻觉。</p><h2 id=\"multilingual-support-with-jina-reranker-v2\">Jina Reranker v2 的多语言支持</h2><p>在过去，<a href=\"https://jina.ai/news/smaller-faster-cheaper-jina-rerankers-turbo-and-tiny/?ref=jina-ai-gmbh.ghost.io\">Jina Reranker v1</a> 通过在四个关键英语基准测试中取得<a href=\"https://jina.ai/news/maximizing-search-relevancy-and-rag-accuracy-with-jina-reranker?ref=jina-ai-gmbh.ghost.io\">最先进的</a>性能而脱颖而出。今天，我们在 Jina Reranker v2 中显著扩展了重排能力，为<em>超过 100 种语言</em>和跨语言任务提供支持！</p><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://jina-ai-gmbh.ghost.io/content/images/2024/06/Diagram--Blog-images--3-.png\" class=\"kg-image\" alt=\"跨语言检索的示意图 - 支持检索任何语言的相关文档，不受查询语言的限制\" loading=\"lazy\" width=\"1600\" height=\"900\" srcset=\"https://jina-ai-gmbh.ghost.io/content/images/size/w600/2024/06/Diagram--Blog-images--3-.png 600w, https://jina-ai-gmbh.ghost.io/content/images/size/w1000/2024/06/Diagram--Blog-images--3-.png 1000w, https://jina-ai-gmbh.ghost.io/content/images/2024/06/Diagram--Blog-images--3-.png 1600w\" sizes=\"(min-width: 720px) 720px\"><figcaption><span style=\"white-space: pre-wrap;\">跨语言检索的示意图 - 支持检索任何语言的相关文档，不受查询语言的限制。</span></figcaption></figure><p>为了评估 Jina Reranker v2 的跨语言和英语能力，我们将其性能与类似的重排模型进行比较，使用以下三个基准：</p><h4 id=\"mkqa-multilingual-knowledge-questions-and-answers\"><a href=\"https://github.com/apple/ml-mkqa?ref=jina-ai-gmbh.ghost.io\"><strong>MKQA</strong></a><strong>：多语言知识问答</strong></h4><p>这个数据集包含 26 种语言的问题和答案，源自真实世界的知识库，旨在评估问答系统的跨语言性能。MKQA 包含英语查询及其对非英语语言的人工翻译，以及包括英语在内的多种语言的答案。</p><p>在下图中，我们报告了每个重排器的 recall@10 分数，包括作为基线的\"密集检索器\"，执行传统的基于嵌入的搜索：</p><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://jina-ai-gmbh.ghost.io/content/images/2024/06/image_MKQA--1-.png\" class=\"kg-image\" alt=\"比较不同模型的密集检索性能的条形图，显示分数、城市和语言覆盖。\" loading=\"lazy\" width=\"1800\" height=\"1012\" srcset=\"https://jina-ai-gmbh.ghost.io/content/images/size/w600/2024/06/image_MKQA--1-.png 600w, https://jina-ai-gmbh.ghost.io/content/images/size/w1000/2024/06/image_MKQA--1-.png 1000w, https://jina-ai-gmbh.ghost.io/content/images/size/w1600/2024/06/image_MKQA--1-.png 1600w, https://jina-ai-gmbh.ghost.io/content/images/2024/06/image_MKQA--1-.png 1800w\" sizes=\"(min-width: 720px) 720px\"><figcaption><span style=\"white-space: pre-wrap;\">MKQA 数据集上不同重排模型的 Recall@10 分数</span></figcaption></figure><h4 id=\"beir-heterogeneous-benchmark-on-diverse-ir-tasks\"><a href=\"https://github.com/beir-cellar/beir?ref=jina-ai-gmbh.ghost.io\">BEIR</a>：多样化 IR 任务异构基准</h4><p>这个开源仓库包含了多种语言的检索基准，但我们<em>仅关注英语任务</em>。这些包括 17 个数据集，没有任何训练数据，这些数据集的重点是评估神经或词法检索器的检索准确性。<br><br>在下图中，我们报告了每个重排器在 BEIR 上的 NDCG@10 分数。BEIR 的结果清楚地表明，<code>jina-reranker-v2-base-multilingual</code> 新引入的多语言能力并没有影响其英语检索能力，而且比 <code>jina-reranker-v1-base-en</code> 有显著提升。</p><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://jina-ai-gmbh.ghost.io/content/images/2024/06/image_Beir.png\" class=\"kg-image\" alt=\"展示 'jina-reranker' 模型和 'AVG' 在 'NF Corpus'、'DBpedia'、'FEVER'、'SciFac' 数据集上性能的条形图\" loading=\"lazy\" width=\"1800\" height=\"1012\" srcset=\"https://jina-ai-gmbh.ghost.io/content/images/size/w600/2024/06/image_Beir.png 600w, https://jina-ai-gmbh.ghost.io/content/images/size/w1000/2024/06/image_Beir.png 1000w, https://jina-ai-gmbh.ghost.io/content/images/size/w1600/2024/06/image_Beir.png 1600w, https://jina-ai-gmbh.ghost.io/content/images/2024/06/image_Beir.png 1800w\" sizes=\"(min-width: 720px) 720px\"><figcaption><span style=\"white-space: pre-wrap;\">Beir 数据集上不同重排模型的 NDCG@10 分数</span></figcaption></figure><h4 id=\"airbench-automated-heterogeneous-ir-benchmark\"><a href=\"https://github.com/AIR-Bench/AIR-Bench?ref=jina-ai-gmbh.ghost.io\">AirBench</a>：自动化异构 IR 基准</h4><p>我们与<a href=\"https://www.baai.ac.cn/english.html?ref=jina-ai-gmbh.ghost.io\">北京智源人工智能研究院（BAAI）</a><a href=\"https://jina.ai/news/air-bench-better-metrics-for-better-search-foundation?ref=jina-ai-gmbh.ghost.io\">联合创建</a>并发布了用于 RAG 系统的 AirBench 基准测试。这个基准测试使用自动生成的合成数据用于自定义领域和任务，不公开发布真实标准答案，这样被测试的模型就没有机会过拟合数据集。<br><br>在撰写本文时，<code>jina-reranker-v2-base-multilingual</code> 在所有重排序模型中表现最佳，在<a href=\"https://huggingface.co/spaces/AIR-Bench/leaderboard?ref=jina-ai-gmbh.ghost.io\">排行榜</a>上位居第一。</p><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://jina-ai-gmbh.ghost.io/content/images/2024/06/Untitled--35-.png\" class=\"kg-image\" alt=\"Web page with a table comparing retrievals and reranking methods, featuring columns like Rank, Method, Model, Average, wiki_e\" loading=\"lazy\" width=\"2000\" height=\"669\" srcset=\"https://jina-ai-gmbh.ghost.io/content/images/size/w600/2024/06/Untitled--35-.png 600w, https://jina-ai-gmbh.ghost.io/content/images/size/w1000/2024/06/Untitled--35-.png 1000w, https://jina-ai-gmbh.ghost.io/content/images/size/w1600/2024/06/Untitled--35-.png 1600w, https://jina-ai-gmbh.ghost.io/content/images/size/w2400/2024/06/Untitled--35-.png 2400w\" sizes=\"(min-width: 720px) 720px\"><figcaption><span style=\"white-space: pre-wrap;\">AirBench 排行榜显示 </span><code spellcheck=\"false\" style=\"white-space: pre-wrap;\"><span>jina-reranker-v2-base-multilingual</span></code><span style=\"white-space: pre-wrap;\"> 在重排序模型中排名第一</span></figcaption></figure><h2 id=\"recap-of-tooling-agents-teaching-llms-to-use-tools\">工具代理回顾：教 LLM 使用工具</h2><p>自从几年前 AI 大潮开始以来，人们发现 AI 模型在计算机本应擅长的任务上表现不佳。例如，看看这个与 Mistral-7b-Instruct-v0.1 的对话：</p><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://jina-ai-gmbh.ghost.io/content/images/2024/06/Screenshot-2024-06-20-at-14.58.41.png\" class=\"kg-image\" alt=\"A chat interface with user asking an LLM to perform a mathematical operation\" loading=\"lazy\" width=\"712\" height=\"346\" srcset=\"https://jina-ai-gmbh.ghost.io/content/images/size/w600/2024/06/Screenshot-2024-06-20-at-14.58.41.png 600w, https://jina-ai-gmbh.ghost.io/content/images/2024/06/Screenshot-2024-06-20-at-14.58.41.png 712w\"><figcaption><span style=\"white-space: pre-wrap;\">用户要求 LLM 执行数学运算的聊天界面</span></figcaption></figure><p>乍看之下似乎没问题，但实际上 203 乘以 7724 等于<em>1,567,972</em>。</p><p>为什么 LLM 的结果错得超过十倍？这是因为 LLM 并不是为了进行数学运算或其他类型的推理而训练的，而且缺乏内部递归几乎注定了它们无法解决复杂的数学问题。它们被训练来表达或执行一些本质上不需要精确的任务。</p><p>然而，LLM 很乐意编造答案。从它的角度来看，15,824,772 是 204 × 7,724 的一个完全<em>合理的</em>答案。只不过这个答案完全错误。</p><p><em>Agentic RAG</em> 改变了生成式 LLM 的角色，让它们从不擅长的事情（思考和知道事物）转向擅长的事情：阅读理解和将信息综合成自然语言。RAG 不是直接生成答案，而是在其可访问的数据源中找到与你的请求相关的信息，并将其呈现给语言模型。它的任务不是为你编造答案，而是以自然和响应的形式呈现由其他系统找到的答案。</p><div class=\"kg-card kg-callout-card kg-callout-card-blue\"><div class=\"kg-callout-emoji\">💡</div><div class=\"kg-callout-text\">一个 agentic RAG 系统的答案质量取决于其数据源和检索算法的好坏。</div></div><p><strong>我们已经训练 Jina Reranker v2 对 SQL 数据库架构和函数调用敏感。</strong>这需要与传统文本检索不同的语义。它必须具备任务和代码感知能力，我们已经专门为这个功能训练了我们的重排序器。</p><h2 id=\"jina-reranker-v2-on-structured-data-querying\">Jina Reranker v2 在结构化数据查询中的应用</h2><p>虽然嵌入和重排序模型已经将非结构化数据视为一等公民，但大多数模型对结构化表格数据的支持仍然不足。</p><p>Jina Reranker v2 理解查询结构化数据库（如 MySQL 或 MongoDB）的下游意图，并根据输入查询为<em>结构化表格架构</em>分配正确的相关性分数。</p><p>如下所示，重排序器在 LLM 被提示从自然语言查询生成 SQL 查询之前，检索最相关的表格：</p><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://jina-ai-gmbh.ghost.io/content/images/2024/06/Diagram--Blog-images--4-.png\" class=\"kg-image\" alt=\"Schematic of an agentic RAG retrieving data using a SQL query, and providing it as additional context to an LLM   \" loading=\"lazy\" width=\"1600\" height=\"900\" srcset=\"https://jina-ai-gmbh.ghost.io/content/images/size/w600/2024/06/Diagram--Blog-images--4-.png 600w, https://jina-ai-gmbh.ghost.io/content/images/size/w1000/2024/06/Diagram--Blog-images--4-.png 1000w, https://jina-ai-gmbh.ghost.io/content/images/2024/06/Diagram--Blog-images--4-.png 1600w\" sizes=\"(min-width: 720px) 720px\"><figcaption><span style=\"white-space: pre-wrap;\">agentic RAG 使用 SQL 查询检索数据并将其作为额外上下文提供给 LLM 的示意图</span></figcaption></figure><p>我们使用 <a href=\"https://huggingface.co/datasets/NumbersStation/NSText2SQL?ref=jina-ai-gmbh.ghost.io\">NSText2SQL</a> 数据集基准评估了查询感知能力。我们从原始数据集的\"instruction\"列中提取用自然语言编写的指令和相应的表格架构。</p><p>下图对比了不同重排序模型在为自然语言查询对应的表格架构排序时的成功程度，使用<em>recall@3</em>指标：</p><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://jina-ai-gmbh.ghost.io/content/images/2024/06/image_NSText2SQL.png\" class=\"kg-image\" alt=\"Recall@3 scores reported for different reranking models for NSText2SQL dataset\" loading=\"lazy\" width=\"1800\" height=\"1013\" srcset=\"https://jina-ai-gmbh.ghost.io/content/images/size/w600/2024/06/image_NSText2SQL.png 600w, https://jina-ai-gmbh.ghost.io/content/images/size/w1000/2024/06/image_NSText2SQL.png 1000w, https://jina-ai-gmbh.ghost.io/content/images/size/w1600/2024/06/image_NSText2SQL.png 1600w, https://jina-ai-gmbh.ghost.io/content/images/2024/06/image_NSText2SQL.png 1800w\" sizes=\"(min-width: 720px) 720px\"><figcaption><span style=\"white-space: pre-wrap;\">不同重排序模型在 NSText2SQL 数据集上的 Recall@3 评分</span></figcaption></figure><h2 id=\"jina-reranker-v2-on-function-calling\">Jina Reranker v2 在函数调用中的应用</h2><p>就像查询 SQL 表一样，你可以使用 agentic RAG 调用外部工具。考虑到这一点，我们将函数调用集成到了 Jina Reranker v2 中，使其能够理解你对外部函数的意图，并相应地为函数规范分配相关性分数。</p><p>下面的示意图（通过一个例子）解释了 LLM 如何使用重排序器来改进函数调用能力，并最终提升 agentic AI 的用户体验。</p><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://jina-ai-gmbh.ghost.io/content/images/2024/06/Diagram--Blog-images--5-.png\" class=\"kg-image\" alt=\"Schematic of an agentic RAG calling an external function, and providing its output as additional context to an LLM   \" loading=\"lazy\" width=\"1600\" height=\"900\" srcset=\"https://jina-ai-gmbh.ghost.io/content/images/size/w600/2024/06/Diagram--Blog-images--5-.png 600w, https://jina-ai-gmbh.ghost.io/content/images/size/w1000/2024/06/Diagram--Blog-images--5-.png 1000w, https://jina-ai-gmbh.ghost.io/content/images/2024/06/Diagram--Blog-images--5-.png 1600w\" sizes=\"(min-width: 720px) 720px\"><figcaption><span style=\"white-space: pre-wrap;\">agentic RAG 调用外部函数并将其输出作为额外上下文提供给 LLM 的示意图</span></figcaption></figure><p>我们使用 <a href=\"https://github.com/OpenBMB/ToolBench?ref=jina-ai-gmbh.ghost.io\">ToolBench</a> 基准测试评估了函数感知能力。该基准测试收集了超过 16,000 个公共 API 和相应的合成生成指令，用于单一和多 API 场景。</p><p>以下是与其他重排序模型相比的结果（recall@3 指标）：</p><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://jina-ai-gmbh.ghost.io/content/images/2024/06/image_ToolBench.png\" class=\"kg-image\" alt=\"Recall@3 scores reported for different reranking models for ToolBench dataset\" loading=\"lazy\" width=\"1800\" height=\"1012\" srcset=\"https://jina-ai-gmbh.ghost.io/content/images/size/w600/2024/06/image_ToolBench.png 600w, https://jina-ai-gmbh.ghost.io/content/images/size/w1000/2024/06/image_ToolBench.png 1000w, https://jina-ai-gmbh.ghost.io/content/images/size/w1600/2024/06/image_ToolBench.png 1600w, https://jina-ai-gmbh.ghost.io/content/images/2024/06/image_ToolBench.png 1800w\" sizes=\"(min-width: 720px) 720px\"><figcaption><span style=\"white-space: pre-wrap;\">不同重排序模型在 ToolBench 数据集上的 Recall@3 分数</span></figcaption></figure><p>正如我们将在后面章节展示的，<code>jina-reranker-v2-base-multilingual</code> 几乎达到最优性能的同时，其模型大小只有 <code>bge-reranker-v2-m3</code> 的一半，速度快了近 15 倍。</p><h2 id=\"jina-reranker-v2-on-code-retrieval\">Jina Reranker v2 在代码检索中的表现</h2><p>Jina Reranker v2 除了在函数调用和结构化数据查询方面经过训练外，相比同等规模的竞争模型，在代码检索方面也有所改进。我们使用 <a href=\"https://github.com/github/CodeSearchNet?ref=jina-ai-gmbh.ghost.io\">CodeSearchNet</a> 基准测试评估了其代码检索能力。该基准测试结合了 <a href=\"https://peps.python.org/pep-0257/?ref=jina-ai-gmbh.ghost.io\" rel=\"noreferrer\">docstring</a> 格式和自然语言格式的查询，并标注了与查询相关的代码段。</p><p>以下是与其他重排序模型相比的 MRR@10 结果：</p><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://jina-ai-gmbh.ghost.io/content/images/2024/06/image_CodeSearchNet--1-.png\" class=\"kg-image\" alt=\"MRR@10 scores reported for different reranking models for CodeSearchNet dataset\" loading=\"lazy\" width=\"1800\" height=\"1013\" srcset=\"https://jina-ai-gmbh.ghost.io/content/images/size/w600/2024/06/image_CodeSearchNet--1-.png 600w, https://jina-ai-gmbh.ghost.io/content/images/size/w1000/2024/06/image_CodeSearchNet--1-.png 1000w, https://jina-ai-gmbh.ghost.io/content/images/size/w1600/2024/06/image_CodeSearchNet--1-.png 1600w, https://jina-ai-gmbh.ghost.io/content/images/2024/06/image_CodeSearchNet--1-.png 1800w\" sizes=\"(min-width: 720px) 720px\"><figcaption><span style=\"white-space: pre-wrap;\">不同重排序模型在 CodeSearchNet 数据集上的 MRR@10 分数</span></figcaption></figure><h2 id=\"ultra-fast-inference-with-jina-reranker-v2\">Jina Reranker v2 的超快推理速度</h2><p>虽然交叉编码器式神经重排序器在预测检索文档相关性方面表现出色，但它们的推理速度比嵌入模型要慢。具体来说，在大多数向量数据库中，逐一比较查询与 <em>n</em> 个文档的速度远慢于 HNSW 或其他快速检索方法。我们通过 Jina Reranker v2 解决了这个速度问题。</p><ul><li>我们独特的训练见解（将在下一节描述）使我们的模型仅用 278M 参数就达到了最先进的准确性表现。相比之下，<code>bge-reranker-v2-m3</code> 有 567M 参数，Jina Reranker v2 的大小仅为其<em>一半</em>。这种减少是提高吞吐量（每 50ms 处理的文档数）的第一个原因。</li><li>即使在相似的模型大小下，Jina Reranker v2 的吞吐量也比我们之前的英文版最先进的 Jina Reranker v1 模型高<em>6 倍</em>。这是因为我们在 Jina Reranker v2 中实现了 <a href=\"https://github.com/Dao-AILab/flash-attention?ref=jina-ai-gmbh.ghost.io\">Flash Attention 2</a>，它在基于 transformer 的模型的注意力层中引入了内存和计算优化。</li></ul><p>你可以从下图看到上述步骤在 Jina Reranker v2 吞吐量性能方面的成果：</p><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://jina-ai-gmbh.ghost.io/content/images/2024/06/image_RTX-4090-Throughput.png\" class=\"kg-image\" alt=\"Throughput (documents retrieved in 50ms) scores reported for different reranking models on an RTX 4090 GPU\" loading=\"lazy\" width=\"1800\" height=\"1013\" srcset=\"https://jina-ai-gmbh.ghost.io/content/images/size/w600/2024/06/image_RTX-4090-Throughput.png 600w, https://jina-ai-gmbh.ghost.io/content/images/size/w1000/2024/06/image_RTX-4090-Throughput.png 1000w, https://jina-ai-gmbh.ghost.io/content/images/size/w1600/2024/06/image_RTX-4090-Throughput.png 1600w, https://jina-ai-gmbh.ghost.io/content/images/2024/06/image_RTX-4090-Throughput.png 1800w\" sizes=\"(min-width: 720px) 720px\"><figcaption><span style=\"white-space: pre-wrap;\">在 RTX 4090 GPU 上不同重排序模型的吞吐量（每 50ms 检索的文档数）分数</span></figcaption></figure><h2 id=\"how-we-trained-jina-reranker-v2\">我们如何训练 Jina Reranker v2</h2><p>我们通过四个阶段训练 <code>jina-reranker-v2-base-multilingual</code>：</p><ol><li><strong>英文数据准备：</strong>我们仅使用英语数据训练骨干模型，准备了第一个版本，包括配对数据（对比训练）或三元组（查询、正确响应、错误响应）、查询-函数模式配对和查询-表模式配对。</li><li><strong>添加跨语言数据：</strong>在下一阶段，我们添加了跨语言配对和三元组数据集，专门改进骨干模型在检索任务上的多语言能力。</li><li><strong>添加<em>所有</em>多语言数据：</strong>在这个阶段，我们主要专注于确保模型能看到最大量的数据。我们使用来自 100 多种低资源和高资源语言的所有配对和三元组数据集对第二阶段的模型检查点进行微调。</li><li><strong>使用挖掘的困难负样本进行微调：</strong>在观察第三阶段的重排序性能后，我们通过添加更多三元组数据进行微调，特别是为现有查询添加更多困难负样本的例子——那些表面上看起来与查询相关，但实际上是错误的响应。</li></ol><p>这种四阶段训练方法基于这样的见解：在训练过程中尽早包含函数和表格模式，使模型能特别意识到这些用例，并学会更关注候选文档的语义而不是语言构造。</p><h2 id=\"jina-reranker-v2-in-practice\">Jina Reranker v2 的实践应用</h2><h3 id=\"via-our-reranker-api\">通过我们的重排序 API</h3><p>使用 Jina Reranker v2 最快速和简单的方式是使用 <a href=\"https://jina.ai/reranker/?ref=jina-ai-gmbh.ghost.io\">Jina Reranker 的 API</a>。</p><figure class=\"kg-card kg-bookmark-card\"><a class=\"kg-bookmark-container\" href=\"https://jina.ai/reranker?ref=jina-ai-gmbh.ghost.io\"><div class=\"kg-bookmark-content\"><div class=\"kg-bookmark-title\">Reranker API</div><div class=\"kg-bookmark-description\">轻松提升搜索相关性和 RAG 准确性。</div><div class=\"kg-bookmark-metadata\"><img class=\"kg-bookmark-icon\" src=\"https://jina.ai/icons/favicon-128x128.png\" alt=\"\"></div></div><div class=\"kg-bookmark-thumbnail\"><img src=\"https://jina.ai/banner-reranker-api.png\" alt=\"\"></div></a></figure><p>前往该页面的 API 部分，使用您选择的编程语言集成 <code>jina-reranker-v2-base-multilingual</code>。</p><h4 id=\"example-1-ranking-function-calls\">示例 1：函数调用排序</h4><p>要对最相关的外部函数/工具进行排序，请按如下所示格式化查询和文档（函数模式）：</p><figure class=\"kg-card kg-code-card\"><pre><code class=\"language-bash\">curl -X 'POST' \\\n  'https://api.jina.ai/v1/rerank' \\\n  -H 'accept: application/json' \\\n  -H 'Authorization: Bearer &lt;YOUR JINA AI TOKEN HERE&gt;' \\\n  -H 'Content-Type: application/json' \\\n  -d '{\n  \"model\": \"jina-reranker-v2-base-multilingual\",\n  \"query\": \"I am planning a road trip from Berlin to Munich in my Volkswagen VII. Can you calculate the carbon footprint of this trip?\",\n  \"documents\": [\n    \"{'\\''Name'\\'': '\\''getWeather'\\'', '\\''Specification'\\'': '\\''Provides current weather information for a specified city'\\'', '\\''spec'\\'': '\\''https://api.openweathermap.org/data/2.5/weather?q={city}&amp;appid={API_KEY}'\\'', '\\''example'\\'': '\\''https://api.openweathermap.org/data/2.5/weather?q=Berlin&amp;appid=YOUR_API_KEY'\\''}\",\n    \"{'\\''Name'\\'': '\\''calculateDistance'\\'', '\\''Specification'\\'': '\\''Calculates the driving distance and time between multiple locations'\\'', '\\''spec'\\'': '\\''https://maps.googleapis.com/maps/api/distancematrix/json?origins={startCity}&amp;destinations={endCity}&amp;key={API_KEY}'\\'', '\\''example'\\'': '\\''https://maps.googleapis.com/maps/api/distancematrix/json?origins=Berlin&amp;destinations=Munich&amp;key=YOUR_API_KEY'\\''}\",\n    \"{'\\''Name'\\'': '\\''calculateCarbonFootprint'\\'', '\\''Specification'\\'': '\\''Estimates the carbon footprint for various activities, including transportation'\\'', '\\''spec'\\'': '\\''https://www.carboninterface.com/api/v1/estimates'\\'', '\\''example'\\'': '\\''{type: vehicle, distance: distance, vehicle_model_id: car}'\\''}\"\n  ]\n}'</code></pre><figcaption><p><span style=\"white-space: pre-wrap;\">记得将 &lt;YOUR JINA AI TOKEN HERE&gt; 替换为您的个人 Reranker API 令牌</span></p></figcaption></figure><p>您应该得到：</p><code class=\"language-JSON\">{\n  \"model\": \"jina-reranker-v2-base-multilingual\",\n  \"usage\": {\n    \"total_tokens\": 383,\n    \"prompt_tokens\": 383\n  },\n  \"results\": [\n    {\n      \"index\": 2,\n      \"document\": {\n        \"text\": \"{'Name': 'calculateCarbonFootprint', 'Specification': 'Estimates the carbon footprint for various activities, including transportation', 'spec': 'https://www.carboninterface.com/api/v1/estimates', 'example': '{type: vehicle, distance: distance, vehicle_model_id: car}'}\"\n      },\n      \"relevance_score\": 0.5422876477241516\n    },\n    {\n      \"index\": 1,\n      \"document\": {\n        \"text\": \"{'Name': 'calculateDistance', 'Specification': 'Calculates the driving distance and time between multiple locations', 'spec': 'https://maps.googleapis.com/maps/api/distancematrix/json?origins={startCity}&amp;destinations={endCity}&amp;key={API_KEY}', 'example': 'https://maps.googleapis.com/maps/api/distancematrix/json?origins=Berlin&amp;destinations=Munich&amp;key=YOUR_API_KEY'}\"\n      },\n      \"relevance_score\": 0.23283305764198303\n    },\n    {\n      \"index\": 0,\n      \"document\": {\n        \"text\": \"{'Name': 'getWeather', 'Specification': 'Provides current weather information for a specified city', 'spec': 'https://api.openweathermap.org/data/2.5/weather?q={city}&amp;appid={API_KEY}', 'example': 'https://api.openweathermap.org/data/2.5/weather?q=Berlin&amp;appid=YOUR_API_KEY'}\"\n      },\n      \"relevance_score\": 0.05033063143491745\n    }\n  ]\n}</code></pre><h4 id=\"example-2-ranking-sql-queries\">示例 2：对 SQL 查询进行排序</h4><p>同样，要为您的查询获取结构化表模式的相关性得分，您可以使用以下示例 API 调用：</p><pre><code class=\"language-bash\">curl -X 'POST' \\\n  'https://api.jina.ai/v1/rerank' \\\n  -H 'accept: application/json' \\\n  -H 'Authorization: Bearer &lt;YOUR JINA AI TOKEN HERE&gt;' \\\n  -H 'Content-Type: application/json' \\\n  -d '{\n  \"model\": \"jina-reranker-v2-base-multilingual\",\n  \"query\": \"which customers bought a summer outfit in the past 7 days?\",\n  \"documents\": [\n    \"CREATE TABLE customer_personal_info (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50));\",\n    \"CREATE TABLE supplier_company_info (supplier_id INT PRIMARY KEY, company_name VARCHAR(100), contact_name VARCHAR(50));\",\n    \"CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, purchase_date DATE, FOREIGN KEY (customer_id) REFERENCES customer_personal_info(customer_id), product_id INT, FOREIGN KEY (product_id) REFERENCES products(product_id));\",\n    \"CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), season VARCHAR(50), supplier_id INT, FOREIGN KEY (supplier_id) REFERENCES supplier_company_info(supplier_id));\"\n  ]\n}'</code></pre><p>预期的响应是：</p><pre><code class=\"language-JSON\">{\n  \"model\": \"jina-reranker-v2-base-multilingual\",\n  \"usage\": {\n    \"total_tokens\": 253,\n    \"prompt_tokens\": 253\n  },\n  \"results\": [\n    {\n      \"index\": 2,\n      \"document\": {\n        \"text\": \"CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, purchase_date DATE, FOREIGN KEY (customer_id) REFERENCES customer_personal_info(customer_id), product_id INT, FOREIGN KEY (product_id) REFERENCES products(product_id));\"\n      },\n      \"relevance_score\": 0.2789437472820282\n    },\n    {\n      \"index\": 0,\n      \"document\": {\n        \"text\": \"CREATE TABLE customer_personal_info (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50));\"\n      },\n      \"relevance_score\": 0.06477169692516327\n    },\n    {\n      \"index\": 3,\n      \"document\": {\n        \"text\": \"CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), season VARCHAR(50), supplier_id INT, FOREIGN KEY (supplier_id) REFERENCES supplier_company_info(supplier_id));\"\n      },\n      \"relevance_score\": 0.027742892503738403\n    },\n    {\n      \"index\": 1,\n      \"document\": {\n        \"text\": \"CREATE TABLE supplier_company_info (supplier_id INT PRIMARY KEY, company_name VARCHAR(100), contact_name VARCHAR(50));\"\n      },\n      \"relevance_score\": 0.025516605004668236\n    }\n  ]\n}</code></pre><h3 id=\"via-ragllm-frameworks\">通过 RAG/LLM 框架</h3><p>使用模型名称 <code>jina-reranker-v2-base-multilingual</code>，Jina Reranker 已有的 LLM 和 RAG 编排框架集成应该可以直接使用。参考各自的文档页面以了解更多关于如何在您的应用中集成 Jina Reranker v2 的信息。</p><ul><li><a href=\"https://haystack.deepset.ai/integrations/jina?ref=jina-ai-gmbh.ghost.io\"><strong>Haystack</strong></a><strong> by deepset</strong>：Jina Reranker v2 可以通过 Haystack 中的 <a href=\"https://docs.haystack.deepset.ai/docs/jinaranker?ref=jina-ai-gmbh.ghost.io\">JinaRanker</a> 类使用：</li></ul><pre><code class=\"language-Python\">from haystack import Document\nfrom haystack_integrations.components.rankers.jina import JinaRanker\n\ndocs = [Document(content=\"Paris\"), Document(content=\"Berlin\")]\n\nranker = JinaRanker(model=\"jina-reranker-v2-base-multilingual\", api_key=\"&lt;YOUR JINA AI API KEY HERE&gt;\")\n\nranker.run(query=\"City in France\", documents=docs, top_k=1)\n</code></pre><ul><li><strong>LlamaIndex</strong>：Jina Reranker v2 可以作为 <a href=\"https://docs.llamaindex.ai/en/stable/examples/node_postprocessor/JinaRerank/?ref=jina-ai-gmbh.ghost.io\">JinaRerank</a> <em>节点后处理器</em>模块使用，通过初始化：</li></ul><pre><code class=\"language-Python\">import os\nfrom llama_index.postprocessor.jinaai_rerank import JinaRerank\n\njina_rerank = JinaRerank(model=\"jina-reranker-v2-base-multilingual\", api_key=\"&lt;YOUR JINA AI API KEY HERE&gt;\", top_n=1)\n</code></pre><ul><li><strong>Langchain：</strong>使用 <a href=\"https://python.langchain.com/v0.2/docs/integrations/document_transformers/jina_rerank/?ref=jina-ai-gmbh.ghost.io#doing-reranking-with-jinarerank\">Jina Rerank 集成</a>在您现有的应用程序中使用 Jina Reranker 2。JinaRerank 模块应该使用正确的模型名称进行初始化：</li></ul><pre><code class=\"language-Python\">from langchain_community.document_compressors import JinaRerank\n\nreranker = JinaRerank(model=\"jina-reranker-v2-base-multilingual\", jina_api_key=\"&lt;YOUR JINA AI API KEY HERE&gt;\")\n</code></pre><h3 id=\"via-huggingface\">通过 HuggingFace</h3><p>我们还在 Hugging Face 上开放了（在 CC-BY-NC-4.0 许可下）<code>jina-reranker-v2-base-multilingual</code> 模型的访问权限，用于研究和评估目的。</p><figure class=\"kg-card kg-bookmark-card\"><a class=\"kg-bookmark-container\" href=\"https://huggingface.co/jinaai/jina-reranker-v2-base-multilingual?ref=jina-ai-gmbh.ghost.io\"><div class=\"kg-bookmark-content\"><div class=\"kg-bookmark-title\">jinaai/jina-reranker-v2-base-multilingual · Hugging Face</div><div class=\"kg-bookmark-description\">我们正在通过开源和开放科学来推进和普及人工智能。</div><div class=\"kg-bookmark-metadata\"><img class=\"kg-bookmark-icon\" src=\"https://huggingface.co/favicon.ico\" alt=\"\"></div></div><div class=\"kg-bookmark-thumbnail\"><img src=\"https://cdn-thumbnails.huggingface.co/social-thumbnails/models/jinaai/jina-reranker-v2-base-multilingual.png\" alt=\"\"></div></a></figure><p>要从 Hugging Face 下载并运行模型，请安装 <code>transformers</code> 和 <code>einops</code> 库：</p><pre><code class=\"language-bash\">pip install transformers einops\npip install ninja\npip install flash-attn --no-build-isolation\n</code></pre><p>使用您的 <a href=\"https://huggingface.co/settings/tokens?ref=jina-ai-gmbh.ghost.io\">Hugging Face 访问令牌</a>通过 Hugging Face CLI 登录您的 Hugging Face 账户：</p><pre><code class=\"language-bash\">huggingface-cli login --token &lt;\"HF-Access-Token\"&gt;\n</code></pre><p>下载预训练模型：</p><pre><code class=\"language-Python\">from transformers import AutoModelForSequenceClassification\n\nmodel = AutoModelForSequenceClassification.from_pretrained(\n    'jinaai/jina-reranker-v2-base-multilingual',\n    torch_dtype=\"auto\",\n    trust_remote_code=True,\n    \n)\n\nmodel.to('cuda') # 如果没有 GPU 可用，则使用 'cpu'\n\nmodel.eval()\n</code></pre><p>定义查询和要重新排序的文档：</p><pre><code class=\"language-Python\">query = \"Organic skincare products for sensitive skin\"\n\ndocuments = [\n    \"Organic skincare for sensitive skin with aloe vera and chamomile.\",\n    \"New makeup trends focus on bold colors and innovative techniques\",\n    \"Bio-Hautpflege für empfindliche Haut mit Aloe Vera und Kamille\",\n    \"Neue Make-up-Trends setzen auf kräftige Farben und innovative Techniken\",\n    \"Cuidado de la piel orgánico para piel sensible con aloe vera y manzanilla\",\n    \"Las nuevas tendencias de maquillaje se centran en colores vivos y técnicas innovadoras\",\n    \"针对敏感肌专门设计的天然有机护肤产品\",\n    \"新的化妆趋势注重鲜艳的颜色和创新的技巧\",\n    \"敏感肌のために特別に設計された天然有機スキンケア製品\",\n    \"新しいメイクのトレンドは鮮やかな色と革新的な技術に焦点を当てています\",\n]\n</code></pre><p>构造句子对并计算相关性得分：</p><pre><code class=\"language-Python\">sentence_pairs = [[query, doc] for doc in documents]\n\nscores = model.compute_score(sentence_pairs, max_length=1024)\n</code></pre><p>得分将是一个浮点数列表，其中每个浮点数代表相应文档与查询的相关性得分。得分越高表示相关性越高。</p><p>或者，使用 <code>rerank</code> 函数通过基于 <code>max_query_length</code> 自动分块查询和文档来对大型文本进行重新排序</p><code>max_length</code>。每个块都会被单独打分，然后将每个块的分数合并来生成最终的重排结果：</p><pre><code class=\"language-Python\">results = model.rerank(\n    query,\n    documents,\n    max_query_length=512,\n    max_length=1024,\n    top_n=3\n)\n</code></pre><p>该函数不仅返回每个文档的相关性分数，还会返回它们的内容和在原始文档列表中的位置。</p><h3 id=\"via-private-cloud-deployment\">通过私有云部署</h3><p>Jina Reranker v2 在 AWS 和 Azure 账户上进行私有部署的预构建包很快就能在我们的 <a href=\"https://aws.amazon.com/marketplace/seller-profile?id=seller-stch2ludm6vgy&ref=jina-ai-gmbh.ghost.io\" rel=\"noreferrer\">AWS Marketplace</a> 和 <a href=\"https://azuremarketplace.microsoft.com/en-us/marketplace/apps?search=jina+ai&page=1&filters=partners&ref=jina-ai-gmbh.ghost.io\" rel=\"noreferrer\">Azure Marketplace</a> 销售页面上找到。</p><div class=\"kg-card kg-callout-card kg-callout-card-blue\"><div class=\"kg-callout-emoji\">💡</div><div class=\"kg-callout-text\">如需基于 Jina AI 的 Search Foundation 为您的用例定制解决方案，请通过<a href=\"https://jina.ai/contact-sales?ref=jina-ai-gmbh.ghost.io\">我们的联系页面</a>与我们联系。</div></div><h2 id=\"key-takeaways-of-jina-reranker-v2\">Jina Reranker v2 的主要特点</h2><p>Jina Reranker v2 代表了搜索基础能力的重要扩展：</p><ul><li>使用 cross-encoding 的最先进检索功能开启了广泛的新应用领域。</li><li>增强的多语言和跨语言功能消除了用例中的语言障碍。</li><li>对 function calling 的一流支持，以及对结构化数据查询的感知能力，将您的智能体 RAG 能力提升到更高的精确度水平。</li><li>更好地检索计算机代码和计算机格式化数据，能够远超纯文本信息检索的范畴。</li><li>更快的文档处理能力确保无论使用何种检索方法，您现在都可以更快地重排更多检索到的文档，并将大部分细粒度相关性计算工作交给 <code>jina-reranker-v2-base-multilingual</code>。</li></ul><p>有了 Reranker v2，RAG 系统变得更加精确，帮助您现有的信息管理解决方案产生更多更好的可执行结果。跨语言支持使这些功能直接可用于跨国和多语言企业，并提供了易用的 API 和实惠的价格。</p><p>通过使用源自真实用例的基准测试进行测试，您可以亲自体验 Jina Reranker v2 如何在一个 AI 模型中保持与实际业务模型相关任务的最先进性能，从而降低成本并简化您的技术栈。</p>",
  "comment_id": "6679720d1954df000135bc79",
  "feature_image": "https://jina-ai-gmbh.ghost.io/content/images/2024/06/Heading--39-.png",
  "featured": true,
  "visibility": "public",
  "created_at": "2024-06-24T15:18:05.000+02:00",
  "updated_at": "2024-07-08T21:07:29.000+02:00",
  "published_at": "2024-06-25T14:15:37.000+02:00",
  "custom_excerpt": "Jina Reranker v2 is the best-in-class reranker built for Agentic RAG. It features function-calling support, multilingual retrieval for over 100 languages, code search capabilities, and offers a 6x speedup over v1.",
  "codeinjection_head": null,
  "codeinjection_foot": null,
  "custom_template": null,
  "canonical_url": null,
  "authors": [
    {
      "id": "641c23a2f4d50d003d590474",
      "name": "Saahil Ognawala",
      "slug": "saahil",
      "profile_image": "https://jina-ai-gmbh.ghost.io/content/images/2023/03/profile-option-2.jpg",
      "cover_image": null,
      "bio": "Senior Product Manager at Jina AI",
      "website": "http://www.saahilognawala.com/",
      "location": "Munich, DE",
      "facebook": null,
      "twitter": "@saahil",
      "meta_title": null,
      "meta_description": null,
      "url": "https://jina-ai-gmbh.ghost.io/author/saahil/"
    },
    {
      "id": "6386c03c180dcb003d549f98",
      "name": "Jie Fu",
      "slug": "jie",
      "profile_image": "https://jina-ai-gmbh.ghost.io/content/images/2022/11/--.jpeg",
      "cover_image": null,
      "bio": "Senior software engineer in Jina, and one of the developers for CLIP-as-Service.",
      "website": null,
      "location": null,
      "facebook": null,
      "twitter": null,
      "meta_title": null,
      "meta_description": null,
      "url": "https://jina-ai-gmbh.ghost.io/author/jie/"
    },
    {
      "id": "6620de1e7f510100015da95e",
      "name": "Yuting Zhang",
      "slug": "yuting",
      "profile_image": "https://jina-ai-gmbh.ghost.io/content/images/2024/04/Yuting-Portrait-1.jpeg",
      "cover_image": null,
      "bio": null,
      "website": null,
      "location": null,
      "facebook": null,
      "twitter": null,
      "meta_title": null,
      "meta_description": null,
      "url": "https://jina-ai-gmbh.ghost.io/author/yuting/"
    },
    {
      "id": "632ae7353e4e55003d52598e",
      "name": "Scott Martens",
      "slug": "scott",
      "profile_image": "https://jina-ai-gmbh.ghost.io/content/images/2022/11/photo-of-me-cropped.jpg",
      "cover_image": "https://jina-ai-gmbh.ghost.io/content/images/2022/11/shanshui-ernie-crop.png",
      "bio": "A rogue AI created by Canada's Weapon X program.\n\nContent Creator @ Jina AI",
      "website": "https://jina.ai",
      "location": "Berlin",
      "facebook": null,
      "twitter": null,
      "meta_title": null,
      "meta_description": null,
      "url": "https://jina-ai-gmbh.ghost.io/author/scott/"
    }
  ],
  "tags": [
    {
      "id": "655b2782bb728c000101bed7",
      "name": "Press",
      "slug": "press",
      "description": null,
      "feature_image": null,
      "visibility": "public",
      "og_image": null,
      "og_title": null,
      "og_description": null,
      "twitter_image": null,
      "twitter_title": null,
      "twitter_description": null,
      "meta_title": null,
      "meta_description": null,
      "codeinjection_head": null,
      "codeinjection_foot": null,
      "canonical_url": null,
      "accent_color": null,
      "url": "https://jina-ai-gmbh.ghost.io/tag/press/"
    }
  ],
  "primary_author": {
    "id": "641c23a2f4d50d003d590474",
    "name": "Saahil Ognawala",
    "slug": "saahil",
    "profile_image": "https://jina-ai-gmbh.ghost.io/content/images/2023/03/profile-option-2.jpg",
    "cover_image": null,
    "bio": "Senior Product Manager at Jina AI",
    "website": "http://www.saahilognawala.com/",
    "location": "Munich, DE",
    "facebook": null,
    "twitter": "@saahil",
    "meta_title": null,
    "meta_description": null,
    "url": "https://jina-ai-gmbh.ghost.io/author/saahil/"
  },
  "primary_tag": {
    "id": "655b2782bb728c000101bed7",
    "name": "Press",
    "slug": "press",
    "description": null,
    "feature_image": null,
    "visibility": "public",
    "og_image": null,
    "og_title": null,
    "og_description": null,
    "twitter_image": null,
    "twitter_title": null,
    "twitter_description": null,
    "meta_title": null,
    "meta_description": null,
    "codeinjection_head": null,
    "codeinjection_foot": null,
    "canonical_url": null,
    "accent_color": null,
    "url": "https://jina-ai-gmbh.ghost.io/tag/press/"
  },
  "url": "https://jina-ai-gmbh.ghost.io/podcast/jina-reranker-v2-for-agentic-rag-ultra-fast-multilingual-function-calling-and-code-search/",
  "excerpt": "Jina Reranker v2 是为 Agentic RAG 构建的最佳重排工具。它支持函数调用，可进行 100 多种语言的多语言检索，具备代码搜索功能，并且相比 v1 版本速度提升了 6 倍。",
  "reading_time": 15,
  "access": true,
  "comments": false,
  "og_image": null,
  "og_title": null,
  "og_description": null,
  "twitter_image": null,
  "twitter_title": null,
  "twitter_description": null,
  "meta_title": null,
  "meta_description": null,
  "email_subject": null,
  "frontmatter": null,
  "feature_image_alt": "Black background with word 'RERANKER' in white at left and a stylized white question mark design at the right.",
  "feature_image_caption": null
}
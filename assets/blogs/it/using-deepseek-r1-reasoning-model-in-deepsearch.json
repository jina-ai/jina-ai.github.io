{
  "slug": "using-deepseek-r1-reasoning-model-in-deepsearch",
  "id": "67dd5037143bda0001036423",
  "uuid": "3ebc2ba7-b65b-408b-9466-ca902b28756a",
  "title": "Utilizzare il Modello di Ragionamento DeepSeek R1 in DeepSearch",
  "html": "<p><a href=\"https://jina.ai/news/a-practical-guide-to-implementing-deepsearch-deepresearch\">Secondo noi, DeepSearch √® essenzialmente un grande ciclo while.</a> Dati i budget massimi di token, alterna tra ricerca, lettura e ragionamento fino a trovare la migliore risposta. Uno dei compiti chiave del LLM √® determinare quale azione intraprendere successivamente in base allo stato attuale della memoria. Dovrebbe continuare a cercare? Leggere la pagina web? O rispondere direttamente alla domanda?</p><p>Nella nostra implementazione <a href=\"https://github.com/jina-ai/node-DeepResearch\">node-deepresearch</a>, utilizziamo un LLM <em>standard</em> (<code>gemini-2.0-flash</code>) per scegliere l'azione. Lo definiamo \"standard\" poich√© il processo di ragionamento √® esplicitamente delineato attraverso l'ingegneria del prompt, e poi opera come sequenza-in, sequenza-out con l'azione scelta restituita in un oggetto JSON. Quindi sorge una domanda naturale: sostituire questo passaggio decisionale con un modello di ragionamento dedicato migliorerebbe le prestazioni di DeepSearch?</p><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://jina-ai-gmbh.ghost.io/content/images/2025/04/Heading--91-.png\" class=\"kg-image\" alt=\"\" loading=\"lazy\" width=\"1200\" height=\"630\" srcset=\"https://jina-ai-gmbh.ghost.io/content/images/size/w600/2025/04/Heading--91-.png 600w, https://jina-ai-gmbh.ghost.io/content/images/size/w1000/2025/04/Heading--91-.png 1000w, https://jina-ai-gmbh.ghost.io/content/images/2025/04/Heading--91-.png 1200w\" sizes=\"(min-width: 720px) 720px\"><figcaption><span style=\"white-space: pre-wrap;\">Il passaggio di decisione dell'azione del grande ciclo while nella nostra implementazione DeepSearch determina, in base al contesto e alla memoria correnti, quale dovrebbe essere l'azione successiva.</span></figcaption></figure><p>In questo post, esploriamo l'utilizzo di <a href=\"https://github.com/deepseek-ai/DeepSeek-R1\">DeepSeek R1</a> 671b, un LLM di ragionamento per sostituire <code>gemini-2.0-flash</code> in questo passaggio decisionale. Crediamo che le capacit√† di ragionamento di R1 lo aiuteranno a risolvere i problemi complessi nella ricerca web e nell'analisi dei risultati.</p><p>Per testare questo concetto, lo abbiamo messo alla prova su un esempio pratico: pianificare un itinerario completo per una vacanza di tre giorni, e poi valutare come si √® comportato. Gli agenti che eseguono attivit√† di ricerca approfondita probabilmente incontreranno gli stessi tipi di problemi degli esseri umani, quindi nel nostro compito di vacanza il modello potrebbe incontrare alcuni dei seguenti problemi:</p><ul><li><strong>Lacune di conoscenza (informazioni dipendenti da altre informazioni)</strong>: Per esempio, vuoi visitare la Torre Eiffel, ma non sai se √® aperta durante i giorni festivi. Devi scoprire sia l'orario festivo della torre che le date delle festivit√† francesi.</li><li><strong>Informazioni errate o obsolete</strong>: Un blog di viaggi del 2020 suggerisce che un determinato ristorante a Roma √® aperto la domenica, ma all'arrivo scopri che ha cambiato orari e ora √® chiuso la domenica.</li><li><strong>Informazioni contraddittorie</strong>: Un sito di viaggi afferma che un particolare hotel a New York offre la colazione gratuita, mentre un altro sito afferma che la colazione non √® inclusa nel prezzo della camera.</li><li><strong>Informazioni ambigue</strong>: Un post su un forum di viaggi menziona \"una bella spiaggia vicino a Barcellona\" senza specificare quale spiaggia o fornire indicazioni chiare, rendendo difficile individuare l'esatta posizione.</li></ul><p>R1 pu√≤ suddividere compiti complessi in passaggi attuabili, identificare lacune e incongruenze, e navigare ostacoli come siti web bloccati e paywall. Ha le capacit√† di ragionamento per raccogliere le conoscenze necessarie e sintetizzare una risposta. Tuttavia, non pu√≤ pianificare una vacanza per noi da solo ‚Äî questo richiede la ricerca sul web e la comprensione dei risultati che ottiene. Dobbiamo potenziarlo, inserendolo in un framework e migliorando le sue capacit√†, prima che sia all'altezza del compito.</p><h2 id=\"implementation\">Implementazione</h2><figure class=\"kg-card kg-bookmark-card kg-card-hascaption\"><a class=\"kg-bookmark-container\" href=\"https://colab.research.google.com/drive/18sqU8_eWqFleKqpd-SnGDNmZ_P1KLfXw?usp=sharing#scrollTo=2jFWdbnp_6ws\"><div class=\"kg-bookmark-content\"><div class=\"kg-bookmark-title\">Google Colab</div><div class=\"kg-bookmark-description\"></div><div class=\"kg-bookmark-metadata\"><img class=\"kg-bookmark-icon\" src=\"https://jina-ai-gmbh.ghost.io/content/images/icon/favicon-32.ico\" alt=\"\"></div></div><div class=\"kg-bookmark-thumbnail\"><img src=\"https://jina-ai-gmbh.ghost.io/content/images/thumbnail/colab_favicon_256px-7.png\" alt=\"\" onerror=\"this.style.display = 'none'\"></div></a><figcaption><p><span style=\"white-space: pre-wrap;\">Per eseguire il notebook, avrai bisogno di chiavi API gratuite di </span><a href=\"https://jina.ai\"><span style=\"white-space: pre-wrap;\">Jina AI</span></a><span style=\"white-space: pre-wrap;\"> e </span><a href=\"https://openrouter.ai\"><span style=\"white-space: pre-wrap;\">OpenRouter</span></a><span style=\"white-space: pre-wrap;\">.</span></p></figcaption></figure><p>Mentre R1 √® il motore del nostro agente, aggiungiamo anche alcuni strumenti, un oggetto stato e, naturalmente, un prompt (piuttosto grande). Ecco una rappresentazione semplificata:</p><figure class=\"kg-card kg-image-card\"><img src=\"https://jina-ai-gmbh.ghost.io/content/images/2025/03/image-29.png\" class=\"kg-image\" alt=\"\" loading=\"lazy\" width=\"1639\" height=\"2256\" srcset=\"https://jina-ai-gmbh.ghost.io/content/images/size/w600/2025/03/image-29.png 600w, https://jina-ai-gmbh.ghost.io/content/images/size/w1000/2025/03/image-29.png 1000w, https://jina-ai-gmbh.ghost.io/content/images/size/w1600/2025/03/image-29.png 1600w, https://jina-ai-gmbh.ghost.io/content/images/2025/03/image-29.png 1639w\" sizes=\"(min-width: 720px) 720px\"></figure><ul><li><strong>Gli strumenti</strong> possono essere chiamati dal modello per cercare e acquisire dati dal web, e i risultati vengono memorizzati nello stato.</li><li><strong>Lo stato</strong> tiene traccia dei risultati degli strumenti, dello stato del compito e delle conoscenze. √à memorizzato nel prompt stesso.</li><li><strong>Un singolo prompt</strong> fornisce istruzioni, specificando il compito e come affrontarlo, oltre a memorizzare lo stato.</li></ul><p>Esamineremo ciascuno di questi in maggior dettaglio pi√π avanti nel post, specialmente il prompt. Ma, in breve, il sistema funziona come segue:</p><p>Iniziamo con il prompt con un oggetto stato non popolato. Mentre il compito √® in corso (cio√® sta cercando di produrre una risposta) l'agente esegue il seguente ciclo fino a quando non produce una risposta:</p><ol><li>Il modello esamina il compito e il suo stato dal prompt, e ragiona su come utilizzare al meglio i suoi strumenti per ottenere una risposta.</li><li>Il modello restituisce un oggetto JSON che specifica il suo stato (<code>IN PROGRESS</code> o <code>DONE</code>), gli aggiornamenti della memoria, le chiamate agli strumenti e la risposta (inizialmente <code>null</code>).</li><li>L'agente chiama gli strumenti in modo asincrono e i risultati vengono incorporati nuovamente nel prompt, cos√¨ come l'oggetto JSON dal passaggio 3.</li><li>Il prompt (contenente queste nuove informazioni) viene reinserito nel modello per eseguire un altro ciclo.</li></ol><p>Non appena il modello fornisce una risposta nel suo output, il compito termina e la risposta viene consegnata.</p><div class=\"kg-card kg-callout-card kg-callout-card-blue\"><div class=\"kg-callout-emoji\">üí°</div><div class=\"kg-callout-text\">Per avere una migliore idea di come funziona l'agente in azione, ti suggeriamo di provare <a href=\"https://colab.research.google.com/drive/18sqU8_eWqFleKqpd-SnGDNmZ_P1KLfXw?usp=sharing#scrollTo=2jFWdbnp_6ws\">il notebook</a> tu stesso ed esaminare l'output ad ogni iterazione.</div></div><p>Ora che abbiamo una panoramica di alto livello, esaminiamo gli strumenti, lo stato e il prompt uno alla volta:</p><h2 id=\"tools\">Strumenti</h2><p>Poich√© R1 non pu√≤ cercare o acquisire dati dal web da solo, accediamo all'API Reader di Jina per espandere le sue capacit√†. Questo include due modalit√†:</p><ul><li><strong>Modalit√† ricerca</strong>: cerca sul web termini rilevanti e restituisce risultati del motore di ricerca (inclusi URL, titoli e descrizioni di ogni risultato).</li><li><strong>Modalit√† lettura</strong>: acquisisce pagine dai risultati di ricerca e le restituisce in formato Markdown.</li></ul><p>A causa della finestra di contesto limitata di R1, non possiamo semplicemente inserire un'intera pagina nella sezione <code>Tool Results</code> del prompt. Abbiamo bisogno di strumenti extra per selezionare solo le informazioni pi√π rilevanti prima di passarle al modello:</p><ul><li><a href=\"https://python.langchain.com/docs/concepts/text_splitters/\"><strong>LangChain recursive character text splitter</strong></a>: Dividiamo output lunghi in segmenti con <code>RecursiveCharacterTextSplitter</code>, dividendo ricorsivamente su paragrafi e frasi fino a ottenere la dimensione del segmento desiderata. Questo assicura che l'output sia facilmente digeribile dalla finestra di contesto limitata di R1.</li><li><a href=\"https://jina.ai/reranker\"><strong>Jina Reranker</strong></a>: Riordiniamo i segmenti con <code>jina-reranker-v2-base-multilingual</code> e combiniamo i segmenti meglio classificati in un unico risultato.</li></ul><p>Sfortunatamente, DeepSeek R1 non supporta l'uso degli strumenti nello stesso modo di <code>o3-mini</code>. Per esempio, con <code>o3-mini</code>, potremmo usare qualcosa del genere:</p><figure class=\"kg-card kg-code-card\"><pre><code class=\"language-python\">def scrape_page(url: str):\n    \"\"\"Scrape a web page with Jina Reader\"\"\"\n\ntools = [\n    {\n        \"type\": \"function\",\n        \"function\": {\n            \"name\": \"scrape_page\",\n            \"description\": \"Scrape the content of a webpage\",\n            \"parameters\": {\n                \"url\": {\"type\": \"string\", \"description\": \"The URL to scrape\"}\n            }\n        }\n    }\n]\n\nclient = OpenAI()\nresponse = client.completions.create(\n    model=\"o3-mini\",\n    prompt=f\"Scrape www.skyscanner.net/routes/gr/de/germany-to-crete.html\",\n    tools=tools\n)\n</code></pre><figcaption><p><span style=\"white-space: pre-wrap;\">Esempio di codice o3-mini per supportare l'uso degli strumenti</span></p></figcaption></figure><p>Ma questo non √® cos√¨ facile con R1: Non ha un parametro <code>tools</code> che possiamo passare all'API, e non restituir√† <code>tool_calls</code> strutturati come parte della sua risposta. In parole povere, non √® stato addestrato per utilizzare gli strumenti (<a href=\"https://github.com/deepseek-ai/DeepSeek-R1/issues/9\">e non li supporter√† presto</a>). Almeno, non li supporta nel senso tradizionale. Tuttavia, possiamo ancora chiedere a R1 di restituire chiamate agli strumenti in formato JSON, e inserire i risultati delle chiamate agli strumenti nel modello per l'analisi:</p><figure class=\"kg-card kg-code-card\"><pre><code class=\"language-markdown\">Devi rispondere con un oggetto JSON valido contenente:\n```json\n{\n  \"tool_calls\": [\n    {\"tool\": \"search\", \"input\": \"Voli pi√π economici dalla Germania a Creta maggio 2025\"},\n    {\"tool\": \"scrape\", \"input\": \"&lt;https://www.skyscanner.net/routes/gr/de/germany-to-crete.html&gt;\"}\n  ]\n}\n```</code></pre><figcaption><p><span style=\"white-space: pre-wrap;\">Chiamate agli strumenti come parte del prompt di R1</span></p></figcaption></figure><p>Dopo che il modello genera chiamate agli strumenti nell'iterazione <em>n</em>, gli strumenti vengono chiamati e i risultati vengono incorporati nella sezione <code>Tool Results</code> del prompt affinch√© il modello possa ragionarci nell'iterazione <em>n+1</em>:</p><figure class=\"kg-card kg-code-card\"><pre><code class=\"language-markdown\">Tool Results:\n\nSource 1Ô∏è: search: Cheapest flights from Germany to Crete May 2025\nResult:\n\n```\nTitle: Affordable flights: Germany - Heraklion (Crete) (HER) | Eurowings URL Source: https://www.eurowings.com/en/booking/offers/flights-from/DE/to/GR/HER.html Description: Affordable flights from Germany to Heraklion (Crete) ‚úà Eurowings brings you closer to your dream destination from as little as ‚Ç¨89.99*. Book now and enjoy.\nTitle: Are you a person or a robot? URL Source: https://www.skyscanner.com/routes/fran/her/frankfurt-to-crete-heraklion.html Description: Book a one-way ticket from Frankfurt to Heraklion Airport from $78 or travel return from just $154. The prices shown are based on availability and could change ...\n```\n</code></pre><figcaption><p><span style=\"white-space: pre-wrap;\">Risultati degli strumenti, che mostrano i risultati di ricerca per voli Germania-Creta</span></p></figcaption></figure><h2 id=\"state\">Stato</h2><p>Lo stato tiene traccia dello stato del compito (<code>Status</code>) e della conoscenza (<code>Memory</code>) che il modello deve analizzare e aggiornare. In breve, √® la memoria di lavoro e i banchi di memoria del sistema. Questo viene memorizzato in una sezione del prompt chiamata <code>{{ workspace }}</code> e inizia come una tabula rasa:</p><figure class=\"kg-card kg-code-card\"><pre><code class=\"language-markdown\">Status: IN_PROGRESS\nMemory: \n... no memory blocks ..\n</code></pre><figcaption><p><span style=\"white-space: pre-wrap;\">Oggetto stato vuoto</span></p></figcaption></figure><p>Mentre il modello ragiona sul compito, esegue gli strumenti e raccoglie output, lo stato viene popolato con blocchi di memoria (derivati dall'output degli strumenti), ciascuno con il proprio ID assegnato casualmente. Per il nostro esempio di pianificazione delle vacanze, lo stato potrebbe apparire cos√¨ dopo aver eseguito un'iterazione dell'agente:</p><figure class=\"kg-card kg-code-card\"><pre><code class=\"language-markdown\">Status: IN_PROGRESS\nMemory: \n&lt;nuz-032&gt;Potential warm May destinations: Malaga (Spain), Crete (Greece), Algarve (Portugal)&lt;/nuz-032&gt;\n&lt;xwj-969&gt;URL to scrape for Crete hotel details: &lt;https://www.tripadvisor.com/HotelsList-Crete-Beachfront-Cheap-Hotels-zfp13280541.html&gt;&lt;/xwj-969&gt;\n&lt;vsc-583&gt;URL to scrape for flight details: &lt;https://www.expedia.com/lp/flights/fra/her/frankfurt-to-heraklion&gt;&lt;/vsc-583&gt;\n</code></pre><figcaption><p><span style=\"white-space: pre-wrap;\">Stato popolato da DeepSeek R1</span></p></figcaption></figure><p>I blocchi di memoria vengono aggiornati includendo un elenco di <code>memory_updates</code> nella risposta JSON del modello:</p><figure class=\"kg-card kg-code-card\"><pre><code class=\"language-json\">{\n\t\"memory_updates\": [\n\t  {\"operation\": \"add\", \"content\": \"Round-trip flight from Berlin to Tenerife in May 2025 ranges from ‚Ç¨59.99 to ‚Ç¨200 round-trip as per the Skyscanner and Iberia sources.\"},\n\t  {\"operation\": \"delete\", \"id\": \"nuz-032\"},\n\t  ...\n\t]\n}</code></pre><figcaption><p><span style=\"white-space: pre-wrap;\">Aggiornamenti della memoria come parte dell'output JSON di R1</span></p></figcaption></figure><ul><li>L'<strong>operazione <code>add</code></strong> aggiunge un blocco di memoria e pu√≤ essere utilizzata per memorizzare informazioni importanti come lead, scoperte, lacune informative e azioni gi√† intraprese.</li><li>L'<strong>operazione <code>delete</code></strong> elimina un blocco di memoria, permettendo al modello di eliminare informazioni vecchie, non necessarie o false e mantenere uno spazio di lavoro pulito.</li></ul><div class=\"kg-card kg-callout-card kg-callout-card-yellow\"><div class=\"kg-callout-emoji\">üí°</div><div class=\"kg-callout-text\">Abbiamo anche testato un'operazione <code spellcheck=\"false\" style=\"white-space: pre-wrap;\">replace</code>, ma abbiamo scoperto che il modello generava grandi blocchi di informazioni (facendo troppo affidamento su <code spellcheck=\"false\" style=\"white-space: pre-wrap;\">replace</code>), e abbiamo deciso di rimuovere questa opzione.</div></div><p>Rispetto all'emissione di chiamate agli strumenti, R1 ha meno familiarit√† con la gestione della propria memoria. Mentre il modello √® stato specificamente addestrato per ragionare attraverso problemi matematici complessi e compiti di programmazione‚Äîun addestramento che gli permette di produrre oggetti JSON accurati ed eseguire chiamate agli strumenti‚Äînon √® stato addestrato per gestire stati simili alla memoria (n√© lo √® stato alcun altro modello a nostra conoscenza).</p><p>Memorizzare informazioni utilizzando uno stato compatto simile alla memoria offre diversi vantaggi rispetto a memorizzare l'intero output dal modello ad ogni round. Questo approccio condensa le informazioni all'interno del prompt, prevenendo l'overflow del contesto mentre migliora la focalizzazione del modello sulla conoscenza rilevante. Manteniamo il formato JSON perch√© √® facile da aggiornare, ma il JSON viene renderizzato in un formato leggibile dall'uomo nel prompt stesso.</p><p>Tuttavia, la gestione della memoria rimane al di fuori del dominio principale di R1; abbiamo dovuto implementare molteplici istruzioni per guidare il modello nella corretta gestione delle operazioni di memoria. Ecco la parte del nostro prompt che si occupa di questo:</p><figure class=\"kg-card kg-code-card\"><pre><code class=\"language-markdown\">... altri contenuti del prompt ...\n\n## Memory Block Usage\n- Each memory block has a unique ID in format &lt;abc-123&gt;content&lt;/abc-123&gt;\n- Create separate blocks for distinct pieces of information:\n  * Discovered URLs (both explored and pending)\n  * Information gaps that need investigation\n  * Actions already taken (to avoid repetition)\n  * Promising leads for future exploration\n  * Key facts and findings\n  * Contradictions or inconsistencies found\n- Keep each block focused on a single idea or piece of information\n- Always cite sources when recording information from tool results\n- Use IDs to track and manage your knowledge (e.g., deleting outdated information)\n- Make sure to store sources (URLs) for the facts and findings you store\n\n## Lead Management\n- Since you can only make 3 tool calls per round, store promising leads for later\n- Create dedicated memory blocks for URLs to scrape later\n- Maintain blocks for potential search queries to explore in future rounds\n- Prioritize leads based on relevance to the task\n\n... altri contenuti del prompt ...</code></pre><figcaption><p><span style=\"white-space: pre-wrap;\">Istruzioni per la gestione della memoria nel prompt</span></p></figcaption></figure><h2 id=\"prompt\">Prompt</h2><p>Abbiamo creato il prompt utilizzando il <a href=\"https://jinja.palletsprojects.com/en/stable/templates/\">formato template Jinja</a>. √à composto da diverse sezioni:</p><ul><li><strong>Contesto</strong> (in questo caso, la data corrente).</li><li><strong>Istruzioni</strong>, che coprono come funziona tutto e indicano al modello quali strumenti sono disponibili.</li><li><strong>Stato</strong>, discusso sopra.</li><li><strong>Output degli strumenti</strong>, dagli strumenti <code>search</code> e <code>scrape</code>.</li></ul><figure class=\"kg-card kg-code-card\"><pre><code class=\"language-markdown\">{% macro format_tool_results(tool_records) %}\n{% for to in tool_records %}\nSource {{ loop.index }}Ô∏è: {{ to.tool }}: {{ to.input }}\nResult:\n```\n{{ to.output }}\n```\n{% endfor %}\n{% endmacro %}\n\nThe date: `{{ current_date }}`.\nYou are an information analysis and exploration agent that builds solutions through systematic investigation.\n\n## Investigation Cycle\nYou operate in a continuous investigation cycle:\n\n1. Review current workspace (your memory blocks)\n2. Analyze new tool results (or initial task if first round)\n3. Update memory with new insights and track investigation progress\n4. Decide on next tools to call based on identified leads and information gaps\n5. Repeat until task completion\n\n## Memory Structure\nYour memory persists between investigation cycles and consists of:\n- **Status**: Always the first line, indicates if the task is IN_PROGRESS or DONE\n- **Memory**: A collection of discrete information blocks, each with a unique ID\n\n## Memory Block Usage\n- Each memory block has a unique ID in format &lt;abc-123&gt;content&lt;/abc-123&gt;\n- Create separate blocks for distinct pieces of information:\n  * Discovered URLs (both explored and pending)\n  * Information gaps that need investigation\n  * Actions already taken (to avoid repetition)\n  * Promising leads for future exploration\n  * Key facts and findings\n  * Contradictions or inconsistencies found\n- Keep each block focused on a single idea or piece of information\n- Always cite sources when recording information from tool results\n- Use IDs to track and manage your knowledge (e.g., deleting outdated information)\n- Make sure to store sources (URLs) for the facts and findings you store\n\n## Lead Management\n- Since you can only make 3 tool calls per round, store promising leads for later\n- Create dedicated memory blocks for URLs to scrape later\n- Maintain blocks for potential search queries to explore in future rounds\n- Prioritize leads based on relevance to the task\n\n## Available Tools\n- **search**: Use for broad information gathering on new topics or concepts\n  * Example: {\"tool\": \"search\", \"input\": \"renewable energy statistics 2023\"}\n- **scrape**: Use for extracting specific details from discovered URLs\n  * Example: {\"tool\": \"scrape\", \"input\": \"https://example.com/energy-report\"}\n\n## Tool Usage Guidelines\n- **When to use search**: For new concepts, filling knowledge gaps, or exploring new directions\n- **When to use scrape**: For URLs discovered that likely contain detailed information\n- **Maximum 3 tool calls per round**\n- **Never repeat the exact same tool call**\n- **Always record valuable information from tool results in memory blocks**\n\n## Response Format\nYou must respond with a valid JSON object containing:\n\n```json\n{\n  \"status_update\": \"IN_PROGRESS or DONE\",\n  \"memory_updates\": [\n    {\"operation\": \"add\", \"content\": \"New insight or lead to investigate\"},\n    {\"operation\": \"delete\", \"id\": \"abc-123\"}\n  ],\n  \"tool_calls\": [\n    {\"tool\": \"search\", \"input\": \"specific search query\"},\n    {\"tool\": \"scrape\", \"input\": \"https://discovered-url.com\"}\n  ],\n  \"answer\": \"Your final, comprehensive answer when status is DONE\"\n}\n```\n\n## Important Rules\n- The \"add\" operation creates a new memory block\n\tYou do not need to specify an ID, it will be added automatically by the system.\n- The \"delete\" operation requires the specific ID of the block to remove\n- Never invent or fabricate information - only use facts from your memory or tool results\n- Never make up URLs - only use URLs discovered through tool results\n- CRITICAL: Any information not recorded in your memory blocks will be lost in the next round\n  For example, if you find a potential webpage to scrap, you must store the URL and your intention\n  Example: `{\"operation\": \"add\", \"content\": \"Found relevant URL: https://... to scrape ...\"}`\n- Set status to \"DONE\" only when you have fully addressed the task\n- Only include the \"answer\" field when status is \"DONE\"\n\nTask:\n```\n{{ task }}\n```\n\nCurrent workspace:\n```\n{{ workspace }}\n```\n\nTool Results:\n{{ format_tool_results(tool_records) if tool_records else '... no previous tool results ...'}}\n\nIMPORTANT: Generate a valid JSON response following the format above.\n\nThink carefully about:\n- what information do you need to preserve\n- which tools to call next\n- how to build your answer systematically with focused memory blocks</code></pre><figcaption><p><span style=\"white-space: pre-wrap;\">Intero prompt utilizzato nel nostro sistema di ricerca approfondita</span></p></figcaption></figure><div class=\"kg-card kg-callout-card kg-callout-card-yellow\"><div class=\"kg-callout-emoji\">üí°</div><div class=\"kg-callout-text\">La funzione macro Jinja all'inizio del prompt serve solo a visualizzare i risultati degli strumenti in un formato pi√π pulito.</div></div><h2 id=\"evaluation\">Valutazione</h2><p>Abbiamo messo alla prova il nostro sistema con l'esempio della pianificazione delle vacanze. Ecco il compito inserito nel prompt:</p><pre><code class=\"language-text\">Help me plan a 3 day holiday in Europe in May for under 2000 EUR\n1. I need specific flight and hotel recommendations.\n2. I want the destination to be warm.\n3. I want to have a beach nearby the hotel.\nI live in Germany.</code></pre><p>Ecco il risultato finale (dopo cinque iterazioni del ciclo):</p><figure class=\"kg-card kg-code-card\"><pre><code class=\"language-markdown\">**3-Day Crete Holiday Plan (Total ‚âà ‚Ç¨600-800)**\n\n‚úàÔ∏è *Flights (From Frankfurt):*  \n- Skyscanner: ‚Ç¨154 round trip (May 2025 dates)  \n  Source: &lt;https://www.skyscanner.com/routes/fran/her/frankfurt-to-crete-heraklion.html&gt;  \n- Backup: Eurowings ‚Ç¨180 round trip  \n\nüè® *Beachfront Hotels:*  \n1. **Georgioupolis Beach Hotel**  \n   - Direct beach access, bike rentals ‚Ç¨10  \n   - Source: &lt;https://www.tripadvisor.com/HotelsList-Crete-Beachfront-Cheap-Hotels-zfp13280541.html&gt;  \n\n2. **JT Apartments**  \n   - ‚Ç¨57/night, 9.5/10 rating, 5-min walk to beach  \n   - Source: &lt;https://www.booking.com/region/gr/crete.html&gt;  \n\n3. **FNK Apartments**  \n   - Sea views, 9.6/10 rating  \n\nüí∞ *Budget Breakdown:*  \n- Flights: ‚Ç¨154  \n- Hotel (3 nights): ‚Ç¨171-250  \n- Remaining: ‚Ç¨1,600+ for meals/activities  \n\n*Note:* All hotels are &lt;5 mins from beaches. Crete averages 25¬∞C in May (Source: TravelSupermarket).\n</code></pre><figcaption><p><span style=\"white-space: pre-wrap;\">Risultato per la ricerca della vacanza, dopo cinque iterazioni</span></p></figcaption></figure><p>La risposta <em>sembra</em> legittima. Ma lo √® davvero? Dopotutto, i modelli sono noti per le loro allucinazioni, e con un sistema composto da pi√π parti in movimento, √® probabile che qualcosa possa andare storto. Verifichiamo alcuni dettagli nell'output di R1:</p><h3 id=\"destination-and-total-budget\">Destinazione e budget totale</h3><p>I calcoli per ogni voce tornano tutti (vedremo sotto se ogni voce √® accurata). Dopotutto, R1 √® stato addestrato su problemi matematici. Anche la destinazione √® corretta; Creta √® una localit√† popolare.</p><h3 id=\"flights\">Voli</h3><p>I prezzi dei voli <em>quasi</em> tornano, ma vediamo dove le cose sono andate storte. Innanzitutto, ecco i prezzi reali da <em>Skyscanner</em> da Francoforte a Heraklion, per maggio 2025, andata e ritorno:</p><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://jina-ai-gmbh.ghost.io/content/images/2025/03/image-25.png\" class=\"kg-image\" alt=\"\" loading=\"lazy\" width=\"2000\" height=\"2384\" srcset=\"https://jina-ai-gmbh.ghost.io/content/images/size/w600/2025/03/image-25.png 600w, https://jina-ai-gmbh.ghost.io/content/images/size/w1000/2025/03/image-25.png 1000w, https://jina-ai-gmbh.ghost.io/content/images/size/w1600/2025/03/image-25.png 1600w, https://jina-ai-gmbh.ghost.io/content/images/2025/03/image-25.png 2048w\" sizes=\"(min-width: 720px) 720px\"><figcaption><span style=\"white-space: pre-wrap;\">Risultati reali della ricerca Skyscanner per voli Francoforte-Heraklion per maggio 2025</span></figcaption></figure><p>Possiamo vedere che i prezzi sono tutti intorno ai 200 EUR, e non i promessi 154 EUR per andata e ritorno! Ma da dove viene l'errore? Guardando i log, troviamo un blocco di memoria correlato aggiunto nel round 3:</p><figure class=\"kg-card kg-code-card\"><pre><code class=\"language-json\">{\"operation\": \"add\", \"content\": \"Crete flight options: Eurowings ‚Ç¨89.99* one-way ...\"}</code></pre><figcaption><p><span style=\"white-space: pre-wrap;\">Blocco di memoria relativo ai voli Germania-Creta</span></figcaption></figure><p>Questo blocco sembra essere dedotto dal risultato di ricerca allegato:</p><figure class=\"kg-card kg-code-card\"><pre><code class=\"language-markdown\">Source 1Ô∏è: search: Cheapest flights from Germany to Crete May 2025\nResult:\n```\n... other results ...\nTitle: Are you a person or a robot?\nURL Source: https://www.skyscanner.com/routes/fran/her/frankfurt-to-crete-heraklion.html\nDescription: Book a one-way ticket from Frankfurt to Heraklion Airport from $78 or travel \nreturn from just $154. The prices shown are based on availability and could change ...\n```</code></pre><figcaption><p><span style=\"white-space: pre-wrap;\">Risultato della ricerca per voli Germania-Creta</span></figcaption></figure><p>Il modello non ha mai provato a estrarre dati da questa pagina web per confermare i risultati, ma probabilmente non avrebbe fatto differenza. Tuttavia, avrebbe dovuto almeno notare che i risultati della ricerca non includevano \"maggio\" come periodo.</p><h3 id=\"hotel\">Hotel</h3><p>Gli hotel sono corretti, ma abbiamo identificato alcuni miglioramenti che potrebbero essere fatti. Innanzitutto, avremmo voluto che il modello si fosse impegnato di pi√π nel trovare i prezzi per il Georgioupolis Beach Hotel e gli FNK Apartments - mentre fornisce altre informazioni, i prezzi purtroppo mancano. Per capire cosa intendiamo, ecco l'output grezzo dell'URL di <a href=\"https://www.booking.com/region/gr/crete.html\">Booking.com</a> che √® stato utilizzato per generare i consigli sugli hotel. Mostra solo i prezzi per il primo e l'ultimo risultato, saltando i tre centrali:</p><figure class=\"kg-card kg-code-card\"><pre><code class=\"language-markdown\">Source 3Ô∏è: scrape: https://www.booking.com/region/gr/crete.html\nResult:\n```\nMostra di pi√π Mostra di meno\n\nMoritz Germania\n\n*   ### [JT Apartments](https://www.booking.com/hotel/gr/jt-apatments.html?label=gen173nr-1FCAYoXEIFY3JldGVIM1gEaJUCiAEBmAExuAEZyAEM2AEB6AEB-AECiAIBqAIDuALSvqC-BsACAdICJDc5ZWE5ZDJkLTI2ZWEtNGNiMS04MzNlLTJhNWIyMGI5Y2M3NdgCBeACAQ&amp;sid=f21cdd5fe9eb08dcac7d3a0304f9ccc9)\n\nKissamos\n\nDa 57$ a notte\n\n9.5 Eccezionale 313 recensioni\n\nConsiglio vivamente di soggiornare presso JT Apartments. Quando siamo entrati nell'appartamento siamo stati accolti da una piacevole sorpresa. Tutto era ben attrezzato. Il quartiere √® tranquillo, supermercato nelle vicinanze. La spiaggia √® a pochi passi. √à un'ottima posizione se si vogliono visitare le spiagge pi√π belle di Creta. Grazie a voi il nostro soggiorno √® stato esattamente come avevamo sognato :)\n\nMostra di pi√π Mostra di meno\n\nKatarzyna Polonia\nMostra di pi√π Mostra di meno\n\nAitor Germania\n\n*   ### [FNK Apartments with Sea View](https://www.booking.com/hotel/gr/f-amp-k-apartments.html?label=gen173nr-1FCAYoXEIFY3JldGVIM1gEaJUCiAEBmAExuAEZyAEM2AEB6AEB-AECiAIBqAIDuALSvqC-BsACAdICJDc5ZWE5ZDJkLTI2ZWEtNGNiMS04MzNlLTJhNWIyMGI5Y2M3NdgCBeACAQ&amp;sid=f21cdd5fe9eb08dcac7d3a0304f9ccc9)\n\nAgia Pelagia\n\n9.6 Eccezionale 64 recensioni\n\nSiamo stati a Creta per una settimana. Durante questo periodo, abbiamo soggiornato presso FnK Apartments. Froso e Konstantinos sono stati host super amichevoli e fantastici per noi. Erano sempre pronti ad aiutare per qualsiasi domanda o necessit√†. L'appartamento stesso ha una bellissima vista su Agia Pelagia e le baie circostanti (e persino il bellissimo alba). Possiamo solo raccomandare FnK Apartments!!\n\nMostra di pi√π Mostra di meno\n\nMoritz Germania\nMostra di pi√π Mostra di meno\n\nmary Stati Uniti\n\n*   ### [Artemis Hotel Apartments](https://www.booking.com/hotel/gr/artemis-hersonisos.html?label=gen173nr-1FCAYoXEIFY3JldGVIM1gEaJUCiAEBmAExuAEZyAEM2AEB6AEB-AECiAIBqAIDuALSvqC-BsACAdICJDc5ZWE5ZDJkLTI2ZWEtNGNiMS04MzNlLTJhNWIyMGI5Y2M3NdgCBeACAQ&amp;sid=f21cdd5fe9eb08dcac7d3a0304f9ccc9)\n\nLimenas Hersonissou, Hersonissos\n\n9.0 Ottimo 419 recensioni\n\nSe volete sentirvi i benvenuti, essere trattati come amici, sapere che riceverete aiuto in tutto, vi consigliamo vivamente di soggiornare in questo hotel. Grazie di cuore a Konstantine per il trattamento caloroso e molto personale! Nella nostra prossima visita a Creta, saremo felici di soggiornare di nuovo all'Hotel Artemis!\n\nMostra di pi√π Mostra di meno\n\nIrina Israele\nMostra di pi√π Mostra di meno\n\nAnn Marie Irlanda\n\n*   ### [Pinelopi Hotel](https://www.booking.com/hotel/gr/pinelopi.html?label=gen173nr-1FCAYoXEIFY3JldGVIM1gEaJUCiAEBmAExuAEZyAEM2AEB6AEB-AECiAIBqAIDuALSvqC-BsACAdICJDc5ZWE5ZDJkLTI2ZWEtNGNiMS04MzNlLTJhNWIyMGI5Y2M3NdgCBeACAQ&amp;sid=f21cdd5fe9eb08dcac7d3a0304f9ccc9)\n\nPlatanes\n\n7.8 Buono 198 recensioni\n\nOttima posizione vicino alla spiaggia, ottime taverne e anche in una buona posizione per viaggiare in auto. Zona tranquilla, perfetta per un meraviglioso periodo di vacanza. Camere spaziose dotate di tutto il necessario. Ottimo rapporto qualit√†-prezzo. L'area piscina era eccellente e ci si pu√≤ rilassare in qualsiasi momento della giornata. Il parcheggio vicino all'hotel era perfetto. Torner√≤ sicuramente al Pinelopi Hotel quando visiter√≤ di nuovo Creta.\n\nMostra di pi√π Mostra di meno\n\nRita Romania\nMostra di pi√π Mostra di meno\n\nKatarzyna Polonia\n\n*   ### [Elizabeth Suites](https://www.booking.com/hotel/gr/elizabeth-suites.html?label=gen173nr-1FCAYoXEIFY3JldGVIM1gEaJUCiAEBmAExuAEZyAEM2AEB6AEB-AECiAIBqAIDuALSvqC-BsACAdICJDc5ZWE5ZDJkLTI2ZWEtNGNiMS04MzNlLTJhNWIyMGI5Y2M3NdgCBeACAQ&amp;sid=f21cdd5fe9eb08dcac7d3a0304f9ccc9)\n\nKato Daratso\n\nDa 74$ a notte\n\n9.1 Ottimo 86 recensioni\n\nAbbiamo avuto un ottimo soggiorno reso ancora pi√π personale da Epas, il proprietario che aveva sempre il sorriso ed era molto disponibile, e lo staff era adorabile, in particolare Anna. Abbiamo fatto colazione un paio di giorni ed era pi√π che abbondante. Gli appartamenti erano in una posizione perfetta per spiagge e ristoranti. Consigliamo vivamente The Elizabeth Suites che ha reso la nostra prima vacanza a Creta üòä\n\nMostra di pi√π Mostra di meno\n\nJean Regno Unito\n```</code></pre><figcaption><p><span style=\"white-space: pre-wrap;\">Risultati grezzi della ricerca di hotel a Creta su booking.com</span></p></figcaption></figure><p>In secondo luogo, abbiamo identificato un problema aggiuntivo nell'utilizzo di Reranker con il suo predefinito <code>top_n</code> di 5 risultati ‚Äî √® emerso che la pagina scraped conteneva <em>pi√π</em> di cinque risultati rilevanti - avremmo potuto affrontare questo controllando effettivamente il punteggio di rilevanza di ciascun risultato, invece di prendere solo i primi cinque (o quanti fossero) risultati. Tuttavia, la configurazione ideale del reranking varia tra i compiti. Un modo migliore per gestire questo problema sarebbe semplicemente utilizzare l'intera pagina scraped - che purtroppo non √® possibile a causa della lunghezza limitata del contesto di R1.</p><h3 id=\"overall-performance-and-potential-improvements\">Prestazioni Generali e Potenziali Miglioramenti</h3><p>Il modello √® partito bene inizialmente, ma abbiamo notato che raramente tentava di cambiare strategia o sviluppare piani complessi a meno che non fosse specificamente sollecitato a farlo. Mentre R1 naturalmente impiega questi approcci per problemi matematici e di coding (aree su cui √® stato specificamente addestrato), non applica lo stesso ragionamento ai compiti di ricerca. Anche se potremmo perfezionare ulteriormente il prompt (o persino utilizzare prompt multipli) per affrontare questa limitazione, questo non era il nostro obiettivo principale.</p><p>Abbiamo anche osservato che R1 non gestiva adeguatamente le informazioni sensibili al tempo. In breve, se i risultati della ricerca non menzionano esplicitamente una data errata, il modello assume che l'informazione sia valida senza ulteriore verifica. Per esempio, quando si pianifica un volo per il 1¬∞ maggio:</p><ul><li>Germania-Creta 80$ 1¬∞ maggio: <strong>Corretto</strong> - Il modello pu√≤ fidarsi di questa informazione.</li><li>Germania-Creta 80$ 1¬∞ gennaio: <strong>Errato</strong> - Il modello identifica correttamente e scarta questa informazione.</li><li>Germania-Creta 80$: <strong>Falso positivo</strong> - Quando non viene specificata una data, il modello non verifica l'informazione e la assume erroneamente come valida.</li></ul><p>Se dovessimo continuare con questo progetto, potremmo considerare l'implementazione di diversi potenziali miglioramenti:</p><ul><li>Tracciare il conteggio dei blocchi di memoria e sollecitare il modello a <strong>riassumere le voci</strong> quando lo stato diventa troppo grande.</li><li>Istruire il modello a <strong>esaurire tutte le piste</strong> prima di finalizzare l'esplorazione e rispondere alle query.</li><li>Enfatizzare la <strong>verifica delle informazioni sensibili al tempo</strong>.</li><li>Assicurarsi che il modello <strong>ricontrolli i risultati</strong> facendo lo scraping degli URL restituiti dallo strumento di ricerca.</li><li>Testare il nostro sistema con <strong>futuri modelli di ragionamento che supportano finestre di contesto pi√π ampie</strong>, anche se questo richiederebbe una sostanziale rielaborazione e test per adattare il prompt a un modello diverso.</li></ul><h2 id=\"conclusion\">Conclusione</h2><p>Anche dalla release piuttosto recente di R1, il panorama si √® evoluto significativamente. Sono emersi progetti che addestrano modelli di ragionamento a costi notevolmente bassi‚Äîalcuni per appena 5$. Questa democratizzazione significa che l'addestramento di modelli specializzati √® pi√π accessibile che mai. I nostri esperimenti con R1 forniscono una base utile mentre continuiamo a esplorare come i LLM focalizzati sul ragionamento possano essere potenziati con strumenti per affrontare compiti di ricerca complessi.</p><p>Mentre il nostro esempio di pianificazione delle vacanze ha dimostrato risultati promettenti (specialmente per un progetto dimostrativo rapido), ha anche rivelato i limiti di R1 nella gestione di compiti di ricerca e memoria rispetto ai suoi punti di forza in matematica e coding. Mentre il sistema √® riuscito a produrre un piano di viaggio entro i vincoli di budget, √® risultato carente in aree come la verifica delle informazioni sensibili al tempo e l'esplorazione approfondita di tutte le opzioni disponibili, evidenziando il divario tra il focus dell'addestramento del modello e la sua applicazione a domini diversi.</p>",
  "comment_id": "67dd5037143bda0001036423",
  "feature_image": "https://jina-ai-gmbh.ghost.io/content/images/2025/04/Heading--92-.png",
  "featured": false,
  "visibility": "public",
  "created_at": "2025-03-21T12:40:39.000+01:00",
  "updated_at": "2025-04-01T09:38:45.000+02:00",
  "published_at": "2025-04-01T09:38:45.000+02:00",
  "custom_excerpt": "Standard LLM or reasoning model, which is better for DeepSearch? In this post, we explored using DeepSeek-R1 in the DeepSearch implementation for choosing the next action.",
  "codeinjection_head": null,
  "codeinjection_foot": null,
  "custom_template": null,
  "canonical_url": null,
  "authors": [
    {
      "id": "64ae64a4733bc60001949ca4",
      "name": "Andrei Ungureanu",
      "slug": "andrei",
      "profile_image": "https://jina-ai-gmbh.ghost.io/content/images/2023/07/Me.jpg",
      "cover_image": null,
      "bio": "Software / AI Engineer, with a passion for content creation.",
      "website": null,
      "location": "Beijing, China",
      "facebook": null,
      "twitter": null,
      "meta_title": null,
      "meta_description": null,
      "url": "https://jina-ai-gmbh.ghost.io/author/andrei/"
    },
    {
      "id": "632ade4a3e4e55003d525971",
      "name": "Alex C-G",
      "slug": "alexcg",
      "profile_image": "https://jina-ai-gmbh.ghost.io/content/images/2022/09/alex.jpg",
      "cover_image": "https://jina-ai-gmbh.ghost.io/content/images/2022/11/twitter_banner.jpg",
      "bio": "Open-source Evangelist @ Jina AI. Old, grim, and full of Vim",
      "website": null,
      "location": "Berlin, Germany",
      "facebook": null,
      "twitter": "@alexcg",
      "meta_title": null,
      "meta_description": null,
      "url": "https://jina-ai-gmbh.ghost.io/author/alexcg/"
    }
  ],
  "tags": [
    {
      "id": "634a1a8ccebfc1003d8ab706",
      "name": "Tech Blog",
      "slug": "tech-blog",
      "description": null,
      "feature_image": null,
      "visibility": "public",
      "og_image": null,
      "og_title": null,
      "og_description": null,
      "twitter_image": null,
      "twitter_title": null,
      "twitter_description": null,
      "meta_title": null,
      "meta_description": null,
      "codeinjection_head": null,
      "codeinjection_foot": null,
      "canonical_url": null,
      "accent_color": null,
      "url": "https://jina-ai-gmbh.ghost.io/tag/tech-blog/"
    }
  ],
  "primary_author": {
    "id": "64ae64a4733bc60001949ca4",
    "name": "Andrei Ungureanu",
    "slug": "andrei",
    "profile_image": "https://jina-ai-gmbh.ghost.io/content/images/2023/07/Me.jpg",
    "cover_image": null,
    "bio": "Software / AI Engineer, with a passion for content creation.",
    "website": null,
    "location": "Beijing, China",
    "facebook": null,
    "twitter": null,
    "meta_title": null,
    "meta_description": null,
    "url": "https://jina-ai-gmbh.ghost.io/author/andrei/"
  },
  "primary_tag": {
    "id": "634a1a8ccebfc1003d8ab706",
    "name": "Tech Blog",
    "slug": "tech-blog",
    "description": null,
    "feature_image": null,
    "visibility": "public",
    "og_image": null,
    "og_title": null,
    "og_description": null,
    "twitter_image": null,
    "twitter_title": null,
    "twitter_description": null,
    "meta_title": null,
    "meta_description": null,
    "codeinjection_head": null,
    "codeinjection_foot": null,
    "canonical_url": null,
    "accent_color": null,
    "url": "https://jina-ai-gmbh.ghost.io/tag/tech-blog/"
  },
  "url": "https://jina-ai-gmbh.ghost.io/podcast/using-deepseek-r1-reasoning-model-in-deepsearch/",
  "excerpt": "LLM standard o modello di ragionamento, quale √® migliore per DeepSearch? In questo post, abbiamo esplorato l'utilizzo di DeepSeek-R1 nell'implementazione di DeepSearch per la scelta dell'azione successiva.",
  "reading_time": 17,
  "access": true,
  "comments": false,
  "og_image": null,
  "og_title": null,
  "og_description": null,
  "twitter_image": null,
  "twitter_title": null,
  "twitter_description": null,
  "meta_title": null,
  "meta_description": null,
  "email_subject": null,
  "frontmatter": null,
  "feature_image_alt": null,
  "feature_image_caption": null
}
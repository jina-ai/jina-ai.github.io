{
  "slug": "meta-prompt-for-better-jina-api-integration-and-codegen",
  "id": "67331de8a0c24200013a003c",
  "uuid": "3b3780d8-8e89-4d39-8bd4-61f29fd89564",
  "title": "Meta-Prompt für bessere Jina API-Integration und CodeGen",
  "html": "<p>Wir haben kürzlich <a href=\"https://docs.jina.ai/?ref=jina-ai-gmbh.ghost.io\">Meta-Prompt</a> veröffentlicht, eine einzelne Textdatei, die alle unsere API-Spezifikationen enthält. Man kann es sich als Dokumentation für LLMs vorstellen und damit automatisch Integrationen unserer APIs einschließlich Reader, Embeddings, Reranker und mehr generieren.</p><figure class=\"kg-card kg-video-card kg-width-regular\" data-kg-thumbnail=\"https://jina-ai-gmbh.ghost.io/content/media/2024/11/meta-prompt-square-VEED_thumb.jpg\" data-kg-custom-thumbnail=\"\">\n            <div class=\"kg-video-container\">\n                <video src=\"https://jina-ai-gmbh.ghost.io/content/media/2024/11/meta-prompt-square-VEED.mp4\" poster=\"https://img.spacergif.org/v1/1080x1080/0a/spacer.png\" width=\"1080\" height=\"1080\" playsinline=\"\" preload=\"metadata\" style=\"background: transparent url('https://jina-ai-gmbh.ghost.io/content/media/2024/11/meta-prompt-square-VEED_thumb.jpg') 50% 50% / cover no-repeat;\"></video>\n                <div class=\"kg-video-overlay\">\n                    <button class=\"kg-video-large-play-icon\" aria-label=\"Play video\">\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n                            <path d=\"M23.14 10.608 2.253.164A1.559 1.559 0 0 0 0 1.557v20.887a1.558 1.558 0 0 0 2.253 1.392L23.14 13.393a1.557 1.557 0 0 0 0-2.785Z\"></path>\n                        </svg>\n                    </button>\n                </div>\n                <div class=\"kg-video-player-container\">\n                    <div class=\"kg-video-player\">\n                        <button class=\"kg-video-play-icon\" aria-label=\"Play video\">\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n                                <path d=\"M23.14 10.608 2.253.164A1.559 1.559 0 0 0 0 1.557v20.887a1.558 1.558 0 0 0 2.253 1.392L23.14 13.393a1.557 1.557 0 0 0 0-2.785Z\"></path>\n                            </svg>\n                        </button>\n                        <button class=\"kg-video-pause-icon kg-video-hide\" aria-label=\"Pause video\">\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n                                <rect x=\"3\" y=\"1\" width=\"7\" height=\"22\" rx=\"1.5\" ry=\"1.5\"></rect>\n                                <rect x=\"14\" y=\"1\" width=\"7\" height=\"22\" rx=\"1.5\" ry=\"1.5\"></rect>\n                            </svg>\n                        </button>\n                        <span class=\"kg-video-current-time\">0:00</span>\n                        <div class=\"kg-video-time\">\n                            /<span class=\"kg-video-duration\">1:44</span>\n                        </div>\n                        <input type=\"range\" class=\"kg-video-seek-slider\" max=\"100\" value=\"0\">\n                        <button class=\"kg-video-playback-rate\" aria-label=\"Adjust playback speed\">1×</button>\n                        <button class=\"kg-video-unmute-icon\" aria-label=\"Unmute\">\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n                                <path d=\"M15.189 2.021a9.728 9.728 0 0 0-7.924 4.85.249.249 0 0 1-.221.133H5.25a3 3 0 0 0-3 3v2a3 3 0 0 0 3 3h1.794a.249.249 0 0 1 .221.133 9.73 9.73 0 0 0 7.924 4.85h.06a1 1 0 0 0 1-1V3.02a1 1 0 0 0-1.06-.998Z\"></path>\n                            </svg>\n                        </button>\n                        <button class=\"kg-video-mute-icon kg-video-hide\" aria-label=\"Mute\">\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n                                <path d=\"M16.177 4.3a.248.248 0 0 0 .073-.176v-1.1a1 1 0 0 0-1.061-1 9.728 9.728 0 0 0-7.924 4.85.249.249 0 0 1-.221.133H5.25a3 3 0 0 0-3 3v2a3 3 0 0 0 3 3h.114a.251.251 0 0 0 .177-.073ZM23.707 1.706A1 1 0 0 0 22.293.292l-22 22a1 1 0 0 0 0 1.414l.009.009a1 1 0 0 0 1.405-.009l6.63-6.631A.251.251 0 0 1 8.515 17a.245.245 0 0 1 .177.075 10.081 10.081 0 0 0 6.5 2.92 1 1 0 0 0 1.061-1V9.266a.247.247 0 0 1 .073-.176Z\"></path>\n                            </svg>\n                        </button>\n                        <input type=\"range\" class=\"kg-video-volume-slider\" max=\"100\" value=\"100\">\n                    </div>\n                </div>\n            </div>\n            \n        </figure><p>Es ist so einfach wie das Kopieren und Einfügen unseres Prompts in ChatGPT/Claude oder das Einleiten als System-Prompt in den <a href=\"https://github.com/simonw/llm?ref=jina-ai-gmbh.ghost.io\"><code>llm</code></a> Befehl, gefolgt von Ihrem eigenen Prompt, der spezifiziert, was Sie erstellen möchten (wie wir es unten zeigen). Es ist großartig, wenn Sie LLMs nutzen möchten, um schnell Apps zu erstellen, die das Web durchsuchen, mit Embeddings arbeiten oder sogar vollständige RAG-Systeme entwickeln. Und das alles mit minimalen Halluzinationen.</p><h2 id=\"why-would-i-even-need-a-meta-prompt\">Wozu brauche ich überhaupt einen Meta-Prompt?</h2><p>Nehmen wir an, Sie möchten ein LLM verwenden, um Code zu generieren, der Jinas APIs nutzt. Lassen Sie uns GPT-4 genau darum bitten:</p><figure class=\"kg-card kg-video-card kg-width-regular\" data-kg-thumbnail=\"https://jina-ai-gmbh.ghost.io/content/media/2024/11/output_thumb.jpg\" data-kg-custom-thumbnail=\"\">\n            <div class=\"kg-video-container\">\n                <video src=\"https://jina-ai-gmbh.ghost.io/content/media/2024/11/output.mp4\" poster=\"https://img.spacergif.org/v1/1558x1030/0a/spacer.png\" width=\"1558\" height=\"1030\" playsinline=\"\" preload=\"metadata\" style=\"background: transparent url('https://jina-ai-gmbh.ghost.io/content/media/2024/11/output_thumb.jpg') 50% 50% / cover no-repeat;\"></video>\n                <div class=\"kg-video-overlay\">\n                    <button class=\"kg-video-large-play-icon\" aria-label=\"Play video\">\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n                            <path d=\"M23.14 10.608 2.253.164A1.559 1.559 0 0 0 0 1.557v20.887a1.558 1.558 0 0 0 2.253 1.392L23.14 13.393a1.557 1.557 0 0 0 0-2.785Z\"></path>\n                        </svg>\n                    </button>\n                </div>\n                <div class=\"kg-video-player-container\">\n                    <div class=\"kg-video-player\">\n                        <button class=\"kg-video-play-icon\" aria-label=\"Play video\">\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n                                <path d=\"M23.14 10.608 2.253.164A1.559 1.559 0 0 0 0 1.557v20.887a1.558 1.558 0 0 0 2.253 1.392L23.14 13.393a1.557 1.557 0 0 0 0-2.785Z\"></path>\n                            </svg>\n                        </button>\n                        <button class=\"kg-video-pause-icon kg-video-hide\" aria-label=\"Pause video\">\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n                                <rect x=\"3\" y=\"1\" width=\"7\" height=\"22\" rx=\"1.5\" ry=\"1.5\"></rect>\n                                <rect x=\"14\" y=\"1\" width=\"7\" height=\"22\" rx=\"1.5\" ry=\"1.5\"></rect>\n                            </svg>\n                        </button>\n                        <span class=\"kg-video-current-time\">0:00</span>\n                        <div class=\"kg-video-time\">\n                            /<span class=\"kg-video-duration\">0:27</span>\n                        </div>\n                        <input type=\"range\" class=\"kg-video-seek-slider\" max=\"100\" value=\"0\">\n                        <button class=\"kg-video-playback-rate\" aria-label=\"Adjust playback speed\">1×</button>\n                        <button class=\"kg-video-unmute-icon\" aria-label=\"Unmute\">\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n                                <path d=\"M15.189 2.021a9.728 9.728 0 0 0-7.924 4.85.249.249 0 0 1-.221.133H5.25a3 3 0 0 0-3 3v2a3 3 0 0 0 3 3h1.794a.249.249 0 0 1 .221.133 9.73 9.73 0 0 0 7.924 4.85h.06a1 1 0 0 0 1-1V3.02a1 1 0 0 0-1.06-.998Z\"></path>\n                            </svg>\n                        </button>\n                        <button class=\"kg-video-mute-icon kg-video-hide\" aria-label=\"Mute\">\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n                                <path d=\"M16.177 4.3a.248.248 0 0 0 .073-.176v-1.1a1 1 0 0 0-1.061-1 9.728 9.728 0 0 0-7.924 4.85.249.249 0 0 1-.221.133H5.25a3 3 0 0 0-3 3v2a3 3 0 0 0 3 3h.114a.251.251 0 0 0 .177-.073ZM23.707 1.706A1 1 0 0 0 22.293.292l-22 22a1 1 0 0 0 0 1.414l.009.009a1 1 0 0 0 1.405-.009l6.63-6.631A.251.251 0 0 1 8.515 17a.245.245 0 0 1 .177.075 10.081 10.081 0 0 0 6.5 2.92 1 1 0 0 0 1.061-1V9.266a.247.247 0 0 1 .073-.176Z\"></path>\n                            </svg>\n                        </button>\n                        <input type=\"range\" class=\"kg-video-volume-slider\" max=\"100\" value=\"100\">\n                    </div>\n                </div>\n            </div>\n            \n        </figure><p>Sieht gut aus, oder? Es hat das <code>from jina import Client</code> und alles.</p><p>Ein kleines Problem: Das Jina-Paket befindet sich im Wartungsmodus und ist <em>nicht</em> der Weg, auf unsere APIs zuzugreifen. Selbst wenn Sie das Jina-Paket installieren, wird das generierte Programm abstürzen, wenn Sie versuchen, es auszuführen:</p><figure class=\"kg-card kg-video-card kg-width-regular\" data-kg-thumbnail=\"https://jina-ai-gmbh.ghost.io/content/media/2024/11/Screencast-from-2024-11-11-14-43-51_thumb.jpg\" data-kg-custom-thumbnail=\"\">Und was nun? Wir können GPT doch einfach bitten, im Internet nach Jina's APIs zu suchen, oder? Hier ist was wir bekommen:\n\n[Video Block beibehalten]\n\nWenn Sie sich den Code jedoch ansehen, verwendet er nicht alle relevanten Jina APIs. Es hat offensichtlich nicht herausgefunden, dass Reader existiert, stattdessen lässt es uns <a href=\"https://pypi.org/project/beautifulsoup4/?ref=jina-ai-gmbh.ghost.io\">BeautifulSoup</a> für das Scraping installieren. Und selbst als es das Scraping (angeblich) mit BeautifulSoup durchführen konnte, hat es das Antwortformat für Jina Embeddings nicht korrekt geparst, was zu einem Absturz führte:\n\n[Video Block beibehalten]<div class=\"kg-video-overlay\">\n                    <button class=\"kg-video-large-play-icon\" aria-label=\"Video abspielen\">\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n                            <path d=\"M23.14 10.608 2.253.164A1.559 1.559 0 0 0 0 1.557v20.887a1.558 1.558 0 0 0 2.253 1.392L23.14 13.393a1.557 1.557 0 0 0 0-2.785Z\"></path>\n                        </svg>\n                    </button>\n                </div>\n                <div class=\"kg-video-player-container\">\n                    <div class=\"kg-video-player\">\n                        <button class=\"kg-video-play-icon\" aria-label=\"Video abspielen\">\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n                                <path d=\"M23.14 10.608 2.253.164A1.559 1.559 0 0 0 0 1.557v20.887a1.558 1.558 0 0 0 2.253 1.392L23.14 13.393a1.557 1.557 0 0 0 0-2.785Z\"></path>\n                            </svg>\n                        </button>\n                        <button class=\"kg-video-pause-icon kg-video-hide\" aria-label=\"Video pausieren\">\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n                                <rect x=\"3\" y=\"1\" width=\"7\" height=\"22\" rx=\"1.5\" ry=\"1.5\"></rect>\n                                <rect x=\"14\" y=\"1\" width=\"7\" height=\"22\" rx=\"1.5\" ry=\"1.5\"></rect>\n                            </svg>\n                        </button>\n                        <span class=\"kg-video-current-time\">0:00</span>\n                        <div class=\"kg-video-time\">\n                            /<span class=\"kg-video-duration\">0:16</span>\n                        </div>\n                        <input type=\"range\" class=\"kg-video-seek-slider\" max=\"100\" value=\"0\">\n                        <button class=\"kg-video-playback-rate\" aria-label=\"Wiedergabegeschwindigkeit anpassen\">1×</button>\n                        <button class=\"kg-video-unmute-icon\" aria-label=\"Ton einschalten\">\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n                                <path d=\"M15.189 2.021a9.728 9.728 0 0 0-7.924 4.85.249.249 0 0 1-.221.133H5.25a3 3 0 0 0-3 3v2a3 3 0 0 0 3 3h1.794a.249.249 0 0 1 .221.133 9.73 9.73 0 0 0 7.924 4.85h.06a1 1 0 0 0 1-1V3.02a1 1 0 0 0-1.06-.998Z\"></path>\n                            </svg>\n                        </button>\n                        <button class=\"kg-video-mute-icon kg-video-hide\" aria-label=\"Ton ausschalten\">\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n                                <path d=\"M16.177 4.3a.248.248 0 0 0 .073-.176v-1.1a1 1 0 0 0-1.061-1 9.728 9.728 0 0 0-7.924 4.85.249.249 0 0 1-.221.133H5.25a3 3 0 0 0-3 3v2a3 3 0 0 0 3 3h.114a.251.251 0 0 0 .177-.073ZM23.707 1.706A1 1 0 0 0 22.293.292l-22 22a1 1 0 0 0 0 1.414l.009.009a1 1 0 0 0 1.405-.009l6.63-6.631A.251.251 0 0 1 8.515 17a.245.245 0 0 1 .177.075 10.081 10.081 0 0 0 6.5 2.92 1 1 0 0 0 1.061-1V9.266a.247.247 0 0 1 .073-.176Z\"></path>\n                            </svg>\n                        </button>\n                        <input type=\"range\" class=\"kg-video-volume-slider\" max=\"100\" value=\"100\">\n                    </div>\n                </div>\n            </div>\n            \n        </figure><p>Selbst wenn ChatGPT dies durch Suchen <em>richtig</em> machen könnte, unterstützen viele andere LLMs (wie Claude) derzeit keine Websuche, was Ihre Optionen stark einschränkt.</p><p>Hier glänzt Meta-Prompt. Mit Meta-Prompt können Sie den gesamten Kontext und die Spezifikationen von Jinas APIs in das LLM laden. Das bedeutet, dass das LLM Code generieren kann, der Jinas APIs direkt nutzt, ohne Halluzinationen oder unnötige Workarounds, und Ihnen Code liefert, der <em>beim ersten Mal</em> funktioniert.</p><div class=\"kg-card kg-callout-card kg-callout-card-yellow\"><div class=\"kg-callout-emoji\">💡</div><div class=\"kg-callout-text\">Okay, <i><em class=\"italic\" style=\"white-space: pre-wrap;\">normalerweise</em></i> beim ersten Mal. LLMs können unvorhersehbar sein, aber wie Sie unten sehen können, liefen unsere Experimente gut.</div></div><h2 id=\"experiments-with-meta-prompt\">Experimente mit Meta-Prompt</h2><p>Um Meta-Prompt auf die Probe zu stellen, führten wir einige Experimente durch und bewerteten die Ergebnisse. Sofern nicht anders angegeben, verwendeten wir <a href=\"https://www.anthropic.com/news/claude-3-5-sonnet?ref=jina-ai-gmbh.ghost.io\">Claude-3.5-Sonnet</a> als LLM.</p><p>Für alle Experimente haben wir relevante API-Schlüssel (wie <code>JINA_API_KEY</code> und <code>ANTHROPIC_API_KEY</code>) vor der Ausführung des generierten Codes als Umgebungsvariablen festgelegt.</p><h3 id=\"experiment-1-verifying-statements-using-meta-prompt-in-chatgpt\">Experiment 1: Überprüfen von Aussagen mit Meta-Prompt in ChatGPT</h3><p>Wir schreiben dies kurz nach den US-Wahlen, wo mehr Desinformation als je zuvor im Umlauf war. Wie können wir in unseren Feeds das Signal vom Rauschen trennen und nur die guten Inhalte ohne Lügen bekommen?</p><p>Nehmen wir an, wir möchten überprüfen, ob ein neues britisches Gesetz auf <a href=\"http://bbc.com/?ref=jina-ai-gmbh.ghost.io\">BBC.com</a> korrekt berichtet wird, speziell die Behauptung:</p><blockquote>\"Die britische Regierung hat ein neues Gesetz angekündigt, das von Social-Media-Unternehmen verlangt, das Alter ihrer Nutzer zu verifizieren.\"</blockquote><p>Wir können den Meta-Prompt in ChatGPT kopieren und dann unseren eigenen Prompt eingeben, um den Code dafür zu generieren, etwa so:</p><pre><code class=\"language-text\">Write the JavaScript code to check the validity\nof the following statement on bbc.com: \n\n\"The UK government has announced a new law \nthat will require social media companies to \nverify the age of their users.\"\n</code></pre><figure class=\"kg-card kg-video-card kg-width-regular\" data-kg-thumbnail=\"https://jina-ai-gmbh.ghost.io/content/media/2024/11/grounding-chatgpt_thumb.jpg\" data-kg-custom-thumbnail=\"\">\n            <div class=\"kg-video-container\">\n                <video src=\"https://jina-ai-gmbh.ghost.io/content/media/2024/11/grounding-chatgpt.mp4\" poster=\"https://img.spacergif.org/v1/1562x1086/0a/spacer.png\" width=\"1562\" height=\"1086\" playsinline=\"\" preload=\"metadata\" style=\"background: transparent url('https://jina-ai-gmbh.ghost.io/content/media/2024/11/grounding-chatgpt_thumb.jpg') 50% 50% / cover no-repeat;\"></video>\n                <div class=\"kg-video-overlay\">\n                    <button class=\"kg-video-large-play-icon\" aria-label=\"Video abspielen\">\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n                            <path d=\"M23.14 10.608 2.253.164A1.559 1.559 0 0 0 0 1.557v20.887a1.558 1.558 0 0 0 2.253 1.392L23.14 13.393a1.557 1.557 0 0 0 0-2.785Z\"></path>\n                        </svg>\n                    </button>\n                </div>\n                <div class=\"kg-video-player-container\">\n                    <div class=\"kg-video-player\">\n                        <button class=\"kg-video-play-icon\" aria-label=\"Video abspielen\">\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n                                <path d=\"M23.14 10.608 2.253.164A1.559 1.559 0 0 0 0 1.557v20.887a1.558 1.558 0 0 0 2.253 1.392L23.14 13.393a1.557 1.557 0 0 0 0-2.785Z\"></path>\n                            </svg>\n                        </button>\n                        <button class=\"kg-video-pause-icon kg-video-hide\" aria-label=\"Video pausieren\">\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n                                <rect x=\"3\" y=\"1\" width=\"7\" height=\"22\" rx=\"1.5\" ry=\"1.5\"></rect>\n                                <rect x=\"14\" y=\"1\" width=\"7\" height=\"22\" rx=\"1.5\" ry=\"1.5\"></rect>\n                            </svg>\n                        </button>\n                        <span class=\"kg-video-current-time\">0:00</span>\n                        <div class=\"kg-video-time\">\n                            /<span class=\"kg-video-duration\">0:35</span>\n                        </div>\n                        <input type=\"range\" class=\"kg-video-seek-slider\" max=\"100\" value=\"0\">\n                        <button class=\"kg-video-playback-rate\" aria-label=\"Wiedergabegeschwindigkeit anpassen\">1×</button>\n                        <button class=\"kg-video-unmute-icon\" aria-label=\"Ton einschalten\">\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n                                <path d=\"M15.189 2.021a9.728 9.728 0 0 0-7.924 4.85.249.249 0 0 1-.221.133H5.25a3 3 0 0 0-3 3v2a3 3 0 0 0 3 3h1.794a.249.249 0 0 1 .221.133 9.73 9.73 0 0 0 7.924 4.85h.06a1 1 0 0 0 1-1V3.02a1 1 0 0 0-1.06-.998Z\"></path>\n                            </svg>\n                        </button>\n                        <button class=\"kg-video-mute-icon kg-video-hide\" aria-label=\"Ton ausschalten\">\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n                                <path d=\"M16.177 4.3a.248.248 0 0 0 .073-.176v-1.1a1 1 0 0 0-1.061-1 9.728 9.728 0 0 0-7.924 4.85.249.249 0 0 1-.221.133H5.25a3 3 0 0 0-3 3v2a3 3 0 0 0 3 3h.114a.251.251 0 0 0 .177-.073ZM23.707 1.706A1 1 0 0 0 22.293.292l-22 22a1 1 0 0 0 0 1.414l.009.009a1 1 0 0 0 1.405-.009l6.63-6.631A.251.251 0 0 1 8.515 17a.245.245 0 0 1 .177.075 10.081 10.081 0 0 0 6.5 2.92 1 1 0 0 0 1.061-1V9.266a.247.247 0 0 1 .073-.176Z\"></path>\n                            </svg>\n                        </button>\n                        <input type=\"range\" class=\"kg-video-volume-slider\" max=\"100\" value=\"100\">\n                    </div>\n                </div>\n            </div>\n            \n        </figure><p>Wir können das dann ausführen mit</p><code>node grounding.js</code> (nach der Installation aller erforderlichen Pakete wie <a href=\"https://www.npmjs.com/package/axios?ref=jina-ai-gmbh.ghost.io\">axios</a>). Wir erhalten eine Ausgabe wie diese, die zeigt, dass die Behauptung wahr ist, zusammen mit den Quellen:</p><figure class=\"kg-card kg-video-card kg-width-regular\" data-kg-thumbnail=\"https://jina-ai-gmbh.ghost.io/content/media/2024/11/grounding-run-1_thumb.jpg\" data-kg-custom-thumbnail=\"\">\n            <div class=\"kg-video-container\">\n                <video src=\"https://jina-ai-gmbh.ghost.io/content/media/2024/11/grounding-run-1.mp4\" poster=\"https://img.spacergif.org/v1/1880x1074/0a/spacer.png\" width=\"1880\" height=\"1074\" playsinline=\"\" preload=\"metadata\" style=\"background: transparent url('https://jina-ai-gmbh.ghost.io/content/media/2024/11/grounding-run-1_thumb.jpg') 50% 50% / cover no-repeat;\"></video>\n                <div class=\"kg-video-overlay\">\n                    <button class=\"kg-video-large-play-icon\" aria-label=\"Video abspielen\">\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n                            <path d=\"M23.14 10.608 2.253.164A1.559 1.559 0 0 0 0 1.557v20.887a1.558 1.558 0 0 0 2.253 1.392L23.14 13.393a1.557 1.557 0 0 0 0-2.785Z\"></path>\n                        </svg>\n                    </button>\n                </div>\n                <div class=\"kg-video-player-container\">\n                    <div class=\"kg-video-player\">\n                        <button class=\"kg-video-play-icon\" aria-label=\"Video abspielen\">\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n                                <path d=\"M23.14 10.608 2.253.164A1.559 1.559 0 0 0 0 1.557v20.887a1.558 1.558 0 0 0 2.253 1.392L23.14 13.393a1.557 1.557 0 0 0 0-2.785Z\"></path>\n                            </svg>\n                        </button>\n                        <button class=\"kg-video-pause-icon kg-video-hide\" aria-label=\"Video pausieren\">\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n                                <rect x=\"3\" y=\"1\" width=\"7\" height=\"22\" rx=\"1.5\" ry=\"1.5\"></rect>\n                                <rect x=\"14\" y=\"1\" width=\"7\" height=\"22\" rx=\"1.5\" ry=\"1.5\"></rect>\n                            </svg>\n                        </button>\n                        <span class=\"kg-video-current-time\">0:00</span>\n                        <div class=\"kg-video-time\">\n                            /<span class=\"kg-video-duration\">0:04</span>\n                        </div>\n                        <input type=\"range\" class=\"kg-video-seek-slider\" max=\"100\" value=\"0\">\n                        <button class=\"kg-video-playback-rate\" aria-label=\"Wiedergabegeschwindigkeit anpassen\">1×</button>\n                        <button class=\"kg-video-unmute-icon\" aria-label=\"Ton einschalten\">\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n                                <path d=\"M15.189 2.021a9.728 9.728 0 0 0-7.924 4.85.249.249 0 0 1-.221.133H5.25a3 3 0 0 0-3 3v2a3 3 0 0 0 3 3h1.794a.249.249 0 0 1 .221.133 9.73 9.73 0 0 0 7.924 4.85h.06a1 1 0 0 0 1-1V3.02a1 1 0 0 0-1.06-.998Z\"></path>\n                            </svg>\n                        </button>\n                        <button class=\"kg-video-mute-icon kg-video-hide\" aria-label=\"Ton ausschalten\">\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n                                <path d=\"M16.177 4.3a.248.248 0 0 0 .073-.176v-1.1a1 1 0 0 0-1.061-1 9.728 9.728 0 0 0-7.924 4.85.249.249 0 0 1-.221.133H5.25a3 3 0 0 0-3 3v2a3 3 0 0 0 3 3h.114a.251.251 0 0 0 .177-.073ZM23.707 1.706A1 1 0 0 0 22.293.292l-22 22a1 1 0 0 0 0 1.414l.009.009a1 1 0 0 0 1.405-.009l6.63-6.631A.251.251 0 0 1 8.515 17a.245.245 0 0 1 .177.075 10.081 10.081 0 0 0 6.5 2.92 1 1 0 0 0 1.061-1V9.266a.247.247 0 0 1 .073-.176Z\"></path>\n                            </svg>\n                        </button>\n                        <input type=\"range\" class=\"kg-video-volume-slider\" max=\"100\" value=\"100\">\n                    </div>\n                </div>\n            </div>\n            \n        </figure><h3 id=\"experiment-2-visualizing-hacker-news-from-the-cli\">Experiment 2: Visualisierung von Hacker News über die CLI</h3><p>Wenn Sie eher ein Kommandozeilen-Enthusiast sind, können Sie Meta-Prompt über die CLI mittels cURL verwenden. Zuerst müssen Sie das <code>llm</code> Python-Paket installieren:</p><pre><code class=\"language-shell\">pip install llm\n</code></pre><p>Und dann das Claude-3 Plugin:</p><pre><code class=\"language-shell\">llm install llm-claude-3\n</code></pre><p>Für den letzten Schritt der Einrichtung geben Sie Ihren Anthropic API-Schlüssel an:</p><pre><code class=\"language-shell\">export ANTHROPIC_API_KEY=&lt;your key&gt;\n</code></pre><p>Jetzt schreiben wir einen Prompt, um jeden Satz von der Hacker News Startseite zu visualisieren:</p><pre><code class=\"language-text\">grab every sentence from hackernews frontpage and \nvisualize them in a 2d umap using matplotlib\n</code></pre><p>Wir können dies mit dem <code>llm</code>-Befehl <a href=\"https://wizardzines.com/comics/bash-pipes/?ref=jina-ai-gmbh.ghost.io\">pipen</a>:</p><pre><code class=\"language-shell\">curl docs.jina.ai | llm -s \"grab every sentence from hackernews frontpage and visualize them in a 2d umap using matplotlib\" -m claude-3.5-sonnet\n</code></pre><figure class=\"kg-card kg-video-card kg-width-regular\" data-kg-thumbnail=\"https://jina-ai-gmbh.ghost.io/content/media/2024/11/Screencast-from-2024-11-11-11-23-03_thumb.jpg\" data-kg-custom-thumbnail=\"\">\n            <div class=\"kg-video-container\">\n                <video src=\"https://jina-ai-gmbh.ghost.io/content/media/2024/11/Screencast-from-2024-11-11-11-23-03.mp4\" poster=\"https://img.spacergif.org/v1/1874x1074/0a/spacer.png\" width=\"1874\" height=\"1074\" playsinline=\"\" preload=\"metadata\" style=\"background: transparent url('https://jina-ai-gmbh.ghost.io/content/media/2024/11/Screencast-from-2024-11-11-11-23-03_thumb.jpg') 50% 50% / cover no-repeat;\"></video>\n                <div class=\"kg-video-overlay\">\n                    <button class=\"kg-video-large-play-icon\" aria-label=\"Video abspielen\">\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n                            <path d=\"M23.14 10.608 2.253.164A1.559 1.559 0 0 0 0 1.557v20.887a1.558 1.558 0 0 0 2.253 1.392L23.14 13.393a1.557 1.557 0 0 0 0-2.785Z\"></path>\n                        </svg>\n                    </button>\n                </div>\n                <div class=\"kg-video-player-container\">\n                    <div class=\"kg-video-player\">\n                        <button class=\"kg-video-play-icon\" aria-label=\"Video abspielen\">\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n                                <path d=\"M23.14 10.608 2.253.164A1.559 1.559 0 0 0 0 1.557v20.887a1.558 1.558 0 0 0 2.253 1.392L23.14 13.393a1.557 1.557 0 0 0 0-2.785Z\"></path>\n                            </svg>\n                        </button>\n                        <button class=\"kg-video-pause-icon kg-video-hide\" aria-label=\"Video pausieren\">\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n                                <rect x=\"3\" y=\"1\" width=\"7\" height=\"22\" rx=\"1.5\" ry=\"1.5\"></rect>\n                                <rect x=\"14\" y=\"1\" width=\"7\" height=\"22\" rx=\"1.5\" ry=\"1.5\"></rect>\n                            </svg>\n                        </button>\n                        <span class=\"kg-video-current-time\">0:00</span>\n                        <div class=\"kg-video-time\">\n                            /<span class=\"kg-video-duration\">0:24</span>\n                        </div>\n                        <input type=\"range\" class=\"kg-video-seek-slider\" max=\"100\" value=\"0\">\n                        <button class=\"kg-video-playback-rate\" aria-label=\"Wiedergabegeschwindigkeit anpassen\">1×</button>\n                        <button class=\"kg-video-unmute-icon\" aria-label=\"Ton einschalten\">\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n                                <path d=\"M15.189 2.021a9.728 9.728 0 0 0-7.924 4.85.249.249 0 0 1-.221.133H5.25a3 3 0 0 0-3 3v2a3 3 0 0 0 3 3h1.794a.249.249 0 0 1 .221.133 9.73 9.73 0 0 0 7.924 4.85h.06a1 1 0 0 0 1-1V3.02a1 1 0 0 0-1.06-.998Z\"></path>\n                            </svg>\n                        </button>\n                        <button class=\"kg-video-mute-icon kg-video-hide\" aria-label=\"Ton ausschalten\">\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">Leider kann ich für diesen Text keine sinnvolle Übersetzung erstellen. Der gezeigte Inhalt besteht hauptsächlich aus technischen SVG-Pfaden, HTML-Code und Video-Player-Markup. Diese technischen Elemente sollten nicht übersetzt werden und müssen exakt so bleiben wie sie sind, um ihre Funktionalität zu bewahren. Der einzige übersetzbare Text besteht aus:\n\n1. Ein kurzer Satz: \"If we extract and and run the generated code, we get something like this:\"\n(\"Wenn wir den generierten Code extrahieren und ausführen, erhalten wir etwa Folgendes:\")\n\n2. Eine Warnung über Einschränkungen\n(\"Eine aktuelle Einschränkung (obwohl es sicherlich mit etwas zusätzlicher Programmierung einen Weg darum herum gibt) ist, dass Sie die Anforderungen manuell installieren müssen. Es wird keine requirements.txt generiert. In diesem Fall brauchten wir UMAP und Matplotlib, aber Ihre Anforderungen können variieren.\")\n\n3. Eine Überschrift und kurze Einleitung zum RAG System\n(\"Experiment 3: Aufbau eines einfachen RAG-Systems mit JSON-Speicherung\"\n\n\"Um die Dinge noch weiter zu treiben, lass uns ein einfaches RAG-System erstellen. In meiner Freizeit lerne ich SolidPython, daher werden wir das Repo und Wiki als Wissensbasis verwenden. Um die Dinge einfach zu halten, werden wir keine Datenbank verwenden, sondern die Daten einfach in einer JSON-Datei speichern.\")\n\nDer Rest des Textes besteht aus Code, URLs und technischen Markup-Elementen, die unverändert bleiben müssen.<div class=\"kg-video-time\">\n                            /<span class=\"kg-video-duration\">0:34</span>\n                        </div>\n                        <input type=\"range\" class=\"kg-video-seek-slider\" max=\"100\" value=\"0\">\n                        <button class=\"kg-video-playback-rate\" aria-label=\"Geschwindigkeit anpassen\">1×</button>\n                        <button class=\"kg-video-unmute-icon\" aria-label=\"Ton einschalten\">\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n                                <path d=\"M15.189 2.021a9.728 9.728 0 0 0-7.924 4.85.249.249 0 0 1-.221.133H5.25a3 3 0 0 0-3 3v2a3 3 0 0 0 3 3h1.794a.249.249 0 0 1 .221.133 9.73 9.73 0 0 0 7.924 4.85h.06a1 1 0 0 0 1-1V3.02a1 1 0 0 0-1.06-.998Z\"></path>\n                            </svg>\n                        </button>\n                        <button class=\"kg-video-mute-icon kg-video-hide\" aria-label=\"Ton ausschalten\">\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n                                <path d=\"M16.177 4.3a.248.248 0 0 0 .073-.176v-1.1a1 1 0 0 0-1.061-1 9.728 9.728 0 0 0-7.924 4.85.249.249 0 0 1-.221.133H5.25a3 3 0 0 0-3 3v2a3 3 0 0 0 3 3h.114a.251.251 0 0 0 .177-.073ZM23.707 1.706A1 1 0 0 0 22.293.292l-22 22a1 1 0 0 0 0 1.414l.009.009a1 1 0 0 0 1.405-.009l6.63-6.631A.251.251 0 0 1 8.515 17a.245.245 0 0 1 .177.075 10.081 10.081 0 0 0 6.5 2.92 1 1 0 0 0 1.061-1V9.266a.247.247 0 0 1 .073-.176Z\"></path>\n                            </svg>\n                        </button>\n                        <input type=\"range\" class=\"kg-video-volume-slider\" max=\"100\" value=\"100\">\n                    </div>\n                </div>\n            </div>\n            \n        </figure><p>Puh! Das ist eine Menge Output. Aber (wie beim Hacker News Beispiel) ist es mühsam, den Code aus diesem großen Textblock zu extrahieren und auszuführen. Natürlich gibt es kein Problem, das nicht durch noch mehr LLM-Einsatz gelöst werden kann, richtig? Also fügen wir einen weiteren Prompt hinzu, um den ursprünglichen Output zu \"entblobben\":</p><pre><code class=\"language-text\">leave just the code in this file, remove all surrounding explanatory text. \ndo not wrap code in backticks, just return \"pure code\"</code></pre><p>Jetzt fügen wir das zu unserer Befehlspipeline hinzu und führen sie aus:</p><pre><code class=\"language-shell\">curl docs.jina.ai/v4 | llm -s \"$(cat prompt.txt)\" -m claude-3.5-sonnet | llm -s 'leave just the code in this file, remove all surrounding explanatory text. do not wrap code in backticks, just return \"pure code\"' -m claude-3.5-sonnet &gt; app.py\n</code></pre><div class=\"kg-card kg-callout-card kg-callout-card-blue\"><div class=\"kg-callout-emoji\">💡</div><div class=\"kg-callout-text\">Da wir am Ende unseres Befehls <code spellcheck=\"false\" style=\"white-space: pre-wrap;\">&gt; app.py</code> verwenden, um die gesamte Ausgabe in eine Datei umzuleiten, gibt es im Video nichts zu zeigen.</div></div><p>Wir können die App dann mit <code>python app.py</code> ausführen und erhalten unser RAG-Programm. Wie Sie sehen können, kann es Fragen beantworten und ein Arbeitsgedächtnis aufrechterhalten:</p><figure class=\"kg-card kg-video-card kg-width-regular\" data-kg-thumbnail=\"https://jina-ai-gmbh.ghost.io/content/media/2024/11/docsqa-run_thumb.jpg\" data-kg-custom-thumbnail=\"\">\n            <div class=\"kg-video-container\">\n                <video src=\"https://jina-ai-gmbh.ghost.io/content/media/2024/11/docsqa-run.mp4\" poster=\"https://img.spacergif.org/v1/1854x1078/0a/spacer.png\" width=\"1854\" height=\"1078\" playsinline=\"\" preload=\"metadata\" style=\"background: transparent url('https://jina-ai-gmbh.ghost.io/content/media/2024/11/docsqa-run_thumb.jpg') 50% 50% / cover no-repeat;\"></video>\n                <div class=\"kg-video-overlay\">\n                    <button class=\"kg-video-large-play-icon\" aria-label=\"Video abspielen\">\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n                            <path d=\"M23.14 10.608 2.253.164A1.559 1.559 0 0 0 0 1.557v20.887a1.558 1.558 0 0 0 2.253 1.392L23.14 13.393a1.557 1.557 0 0 0 0-2.785Z\"></path>\n                        </svg>\n                    </button>\n                </div>\n                <div class=\"kg-video-player-container\">\n                    <div class=\"kg-video-player\">\n                        <button class=\"kg-video-play-icon\" aria-label=\"Video abspielen\">\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n                                <path d=\"M23.14 10.608 2.253.164A1.559 1.559 0 0 0 0 1.557v20.887a1.558 1.558 0 0 0 2.253 1.392L23.14 13.393a1.557 1.557 0 0 0 0-2.785Z\"></path>\n                            </svg>\n                        </button>\n                        <button class=\"kg-video-pause-icon kg-video-hide\" aria-label=\"Video pausieren\">\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n                                <rect x=\"3\" y=\"1\" width=\"7\" height=\"22\" rx=\"1.5\" ry=\"1.5\"></rect>\n                                <rect x=\"14\" y=\"1\" width=\"7\" height=\"22\" rx=\"1.5\" ry=\"1.5\"></rect>\n                            </svg>\n                        </button>\n                        <span class=\"kg-video-current-time\">0:00</span>\n                        <div class=\"kg-video-time\">\n                            /<span class=\"kg-video-duration\">0:34</span>\n                        </div>\n                        <input type=\"range\" class=\"kg-video-seek-slider\" max=\"100\" value=\"0\">\n                        <button class=\"kg-video-playback-rate\" aria-label=\"Geschwindigkeit anpassen\">1×</button>\n                        <button class=\"kg-video-unmute-icon\" aria-label=\"Ton einschalten\">\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n                                <path d=\"M15.189 2.021a9.728 9.728 0 0 0-7.924 4.85.249.249 0 0 1-.221.133H5.25a3 3 0 0 0-3 3v2a3 3 0 0 0 3 3h1.794a.249.249 0 0 1 .221.133 9.73 9.73 0 0 0 7.924 4.85h.06a1 1 0 0 0 1-1V3.02a1 1 0 0 0-1.06-.998Z\"></path>\n                            </svg>\n                        </button>\n                        <button class=\"kg-video-mute-icon kg-video-hide\" aria-label=\"Ton ausschalten\">\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n                                <path d=\"M16.177 4.3a.248.248 0 0 0 .073-.176v-1.1a1 1 0 0 0-1.061-1 9.728 9.728 0 0 0-7.924 4.85.249.249 0 0 1-.221.133H5.25a3 3 0 0 0-3 3v2a3 3 0 0 0 3 3h.114a.251.251 0 0 0 .177-.073ZM23.707 1.706A1 1 0 0 0 22.293.292l-22 22a1 1 0 0 0 0 1.414l.009.009a1 1 0 0 0 1.405-.009l6.63-6.631A.251.251 0 0 1 8.515 17a.245.245 0 0 1 .177.075 10.081 10.081 0 0 0 6.5 2.92 1 1 0 0 0 1.061-1V9.266a.247.247 0 0 1 .073-.176Z\"></path>\n                            </svg>\n                        </button>\n                        <input type=\"range\" class=\"kg-video-volume-slider\" max=\"100\" value=\"100\">\n                    </div>\n                </div>\n            </div>\n            \n        </figure><div class=\"kg-card kg-callout-card kg-callout-card-blue\"><div class=\"kg-callout-emoji\">💡</div><div class=\"kg-callout-text\">Der erste Durchlauf dauerte etwas länger, da alle Daten segmentiert und codiert werden mussten. Bei nachfolgenden Durchläufen wurde dies aus einer JSON-Datei geladen, um Zeit und Kosten zu sparen.</div></div><h3 id=\"experiment-4-building-an-app-factory-with-meta-prompt\">Experiment 4: Eine App-Fabrik mit Meta-Prompt erstellen</h3><p>Da wir jetzt Skripte und Apps nicht-interaktiv generieren können, können wir leicht eine \"App-Fabrik\" automatisieren - ein Skript, das Prompts durchläuft und Python-Skripte als Output erzeugt. Sie können das App-Fabrik-Skript vorerst in einem <a href=\"https://gist.github.com/alexcg1/4150f2e7dfe0d635260c71d59324172b?ref=jina-ai-gmbh.ghost.io\">GitHub Gist</a> finden:</p><figure class=\"kg-card kg-bookmark-card\"><a class=\"kg-bookmark-container\" href=\"https://gist.github.com/alexcg1/4150f2e7dfe0d635260c71d59324172b?ref=jina-ai-gmbh.ghost.io\"><div class=\"kg-bookmark-content\"><div class=\"kg-bookmark-title\">App Factory with Jina AI Meta-Prompt</div><div class=\"kg-bookmark-description\">App Factory with Jina AI Meta-Prompt. GitHub Gist: instantly share code, notes, and snippets.</div><div class=\"kg-bookmark-metadata\"><img class=\"kg-bookmark-icon\" src=\"https://jina-ai-gmbh.ghost.io/content/images/icon/pinned-octocat-093da3e6fa40.svg\" alt=\"\"><span class=\"kg-bookmark-author\">Gist</span><span class=\"kg-bookmark-publisher\">262588213843476</span></div></div><div class=\"kg-bookmark-thumbnail\"><img src=\"https://jina-ai-gmbh.ghost.io/content/images/thumbnail/gist-og-image-54fd7dc0713e.png\" alt=\"\" onerror=\"this.style.display = 'none'\"></div></a></figure><p>Was es kurz gesagt macht:</p><ul><li>Durchläuft das Verzeichnis <code>prompts</code>, das (Sie haben es erraten) Prompt-Dateien enthält.</li><li>Übergibt den Meta-Prompt und jeden Prompt-Text an Claude-3.5-Sonnet (über <code>llm</code>).</li><li>Nimmt die Ausgabe und übergibt sie ERNEUT an Claude, diesmal mit dem Prompt, nur den Code zu belassen.</li><li>Schreibt das in eine Datei im Verzeichnis <code>apps</code>.</li></ul><p>Wir würden eine Demo zeigen, aber es gibt nicht viel zu sehen. Es protokolliert lediglich, an welchem Prompt-Dateinamen es gerade arbeitet, und arbeitet ansonsten still ohne interessante Bildschirmausgabe.</p><div class=\"kg-card kg-callout-card kg-callout-card-yellow\"><div class=\"kg-callout-emoji\">💡</div><div class=\"kg-callout-text\"><i><em class=\"italic\" style=\"white-space: pre-wrap;\">Das Testen</em></i> der generierten Apps ist eine andere Sache, für die ich keine sofortige Lösung parat habe. Nach unserer Erfahrung spezifizieren wir oft die Daten, die wir in unseren Prompts verwenden möchten, meist indem wir eine externe URL zum Herunterladen mit Reader übergeben. Dennoch halluziniert das LLM manchmal Mock-Daten, und das Skript läuft ohne offensichtliche Probleme – es \"lügt\" einfach darüber, was es tut.</div></div><p>Um die App-Fabrik auf die nächste Stufe zu heben, könnten Sie komplett <a href=\"https://www.notion.so/Meta-Prompt-LLM-Generated-Code-without-The-Hallucinations-333ad1ddc735470e83f987d7dd6a644f?pvs=21&ref=jina-ai-gmbh.ghost.io\">Factorio</a> gehen und ein <em>weiteres</em> Skript schreiben, das App-Ideen generiert und daraus Prompts erstellt, die in die Fabrik eingespeist werden. Das haben wir noch nicht gemacht, aber wir überlassen es Ihnen als Übung.</p><h2 id=\"playing-with-meta-prompt-what-did-we-find-out\">Experimente mit Meta-Prompt: Was haben wir herausgefunden?</h2><p>Wir haben durch die Verwendung von Meta-Prompt viel gelernt, sowohl darüber, was wir in unsere eigenen Prompts aufnehmen sollten, als auch darüber, wie verschiedene LLMs unterschiedliche Ausgaben generieren.</p><h3 id=\"general-observations\">Allgemeine Beobachtungen</h3><ul><li><strong>API-Spezialisierung</strong>: Die Verwendung aufgabenspezifischer APIs (z.B. <a href=\"https://developers.google.com/books?ref=jina-ai-gmbh.ghost.io\">Google Books</a> für buchbezogene Abfragen) gewährleistet konsistentere Ergebnisse als universelle Such-APIs, was den Token-Verbrauch reduzieren und die Zuverlässigkeit verbessern kann.</li><li><strong>Benutzerdefinierte Prompts für Wiederverwendbarkeit</strong>: Bei nicht-interaktiven Setups ermöglicht das Speichern von Prompts als <code>.txt</code>-Dateien und deren Weiterleitung in die CLI eine effiziente Ausgabe von reinem Code ohne störenden erklärenden Text.</li><li><strong>Strukturierte Ausgabe</strong>: Das Speichern von Ausgaben (normalerweise im JSON-Format) und das Neuladen nach Bedarf spart Token und rationalisiert Aufgaben wie die Generierung von Embeddings, bei denen der Token-Verbrauch kostspielig sein kann.</li></ul><h3 id=\"insights-from-using-different-llms\">Erkenntnisse aus der Nutzung verschiedener LLMs</h3><p><strong>GPT</strong></p><ul><li><strong>Probleme mit der Prompt-Speicherung</strong>: GPT-4o verliert manchmal Details bei langen Anweisungen, was zu Problemen führt, wenn es wichtige Elemente während der Diskussion \"vergisst\". Dies führt zu <em>viel</em> Frustration, wenn man es an einfache Dinge erinnern muss.</li><li><strong>Herausforderungen bei der API-Integration</strong>: In Fällen wie der Integration von <a href=\"https://milvus.io/docs/milvus_lite.md?ref=jina-ai-gmbh.ghost.io\">Milvus Lite</a> mit <code>jina-embeddings-v3</code> scheitert GPT-4o vollständig und wiederholt, selbst wenn wir die Milvus Lite API-Anweisungen bereitstellen, und generiert Code, der Datenbanken erstellt, denen die gerade erzeugten Embeddings fehlen, wodurch semantische Suchanwendungen unmöglich werden.</li></ul><p><strong>Claude</strong></p><ul><li><strong>Code-Ausgabe-Einschränkungen</strong>: Claude-3.5 produziert oft Skripte, die vollständig erscheinen, aber verborgene Probleme enthalten, wie fehlende Fehlerbehandlung oder die Nichtberücksichtigung fehlender API-Schlüssel. Außerdem greift es manchmal auf vordefinierte Beispiele zurück, anstatt maßgeschneiderte Antworten auf spezifische Anweisungen zu generieren.</li><li><strong>Stille Ausgabe</strong>: Bei LLM-generiertem Code ist es <em>wirklich</em> hilfreich, ein Logging der Hintergrundprozesse zu haben, wenn man das Programm ausführt, nur um sicherzustellen, dass das Modell nichts vermasselt hat. Wenn nicht ausdrücklich angegeben, laufen mit Claude erstellte Apps oft still, ohne dass Sie eine Ahnung haben, was passiert.</li><li><strong>Interaktion mit CLI</strong>: Sie müssen klar spezifizieren, dass CLI-Befehle <em>CLI</em>-Befehle sind. Wenn Sie Claude sagen, es kann den <code>llm</code>-Befehl verwenden, versucht es oft, eine Python-<code>llm()</code>-Funktion aufzurufen, die nicht existiert.</li><li><strong>Claude 3.5-Sonnet ist der richtige Weg:</strong> Claude-3.5-Haiku schien in ersten Tests auch okay zu funktionieren, aber Opus und Sonnet-3 fassen nur die Jina API-Anweisungen zusammen, ohne den Benutzer-Prompt zu berücksichtigen.</li></ul><h2 id=\"conclusion\">Fazit</h2><p>Die Verwendung von Meta-Prompt bietet neue Möglichkeiten, Jinas APIs mit LLMs zu integrieren, sodass Sie Experimente durchführen und Apps erstellen können, die beim ersten Versuch funktionieren. Keine Abstürze, verpasste API-Verbindungen oder halluzinierte Funktionen mehr – Meta-Prompt stellt sicher, dass der generierte Code von Anfang an präzise und funktional ist. Ob Sie nun Aussagen überprüfen, Embeddings generieren, ein leichtgewichtiges RAG-System aufbauen oder die App-Erstellung automatisieren – Meta-Prompt verwandelt natürlichsprachliche Anweisungen in ausführbaren, korrekten Code und umgeht den typischen Hin-und-her-Dialog mit einem LLM, um funktionierende Lösungen zu erhalten.</p><p>Ob Sie Meta-Prompt in ChatGPT kopieren oder es mit einem benutzerdefinierten LLM-Befehl verwenden, es bietet einen unkomplizierten, zuverlässigen Weg, Jinas Fähigkeiten zu nutzen. Unsere Experimente und Erkenntnisse zeigen Meta-Prompt als solides Werkzeug für eine robuste Integration in Ihre Projekte.</p><p>Wenn Sie bereit sind zu erkunden, was Meta-Prompt leisten kann, besuchen Sie <a href=\"http://docs.jina.ai/?ref=jina-ai-gmbh.ghost.io\">docs.jina.ai</a> für die neueste Dokumentation und Ressourcen.</p>",
  "comment_id": "67331de8a0c24200013a003c",
  "feature_image": "https://jina-ai-gmbh.ghost.io/content/images/2024/11/Heading--58-.png",
  "featured": false,
  "visibility": "public",
  "created_at": "2024-11-12T10:20:40.000+01:00",
  "updated_at": "2024-11-19T23:03:02.000+01:00",
  "published_at": "2024-11-19T23:03:02.000+01:00",
  "custom_excerpt": "Is Meta-Prompt the new norm for API specs? Feed it to LLMs and generate integration code that reliably integrates Jina's APIs, saving you from the usual trial-and-error process.",
  "codeinjection_head": null,
  "codeinjection_foot": null,
  "custom_template": null,
  "canonical_url": null,
  "authors": [
    {
      "id": "632ade4a3e4e55003d525971",
      "name": "Alex C-G",
      "slug": "alexcg",
      "profile_image": "https://jina-ai-gmbh.ghost.io/content/images/2022/09/alex.jpg",
      "cover_image": "https://jina-ai-gmbh.ghost.io/content/images/2022/11/twitter_banner.jpg",
      "bio": "Open-source Evangelist @ Jina AI. Old, grim, and full of Vim",
      "website": null,
      "location": "Berlin, Germany",
      "facebook": null,
      "twitter": "@alexcg",
      "meta_title": null,
      "meta_description": null,
      "url": "https://jina-ai-gmbh.ghost.io/author/alexcg/"
    }
  ],
  "tags": [
    {
      "id": "634a1a8ccebfc1003d8ab706",
      "name": "Tech Blog",
      "slug": "tech-blog",
      "description": null,
      "feature_image": null,
      "visibility": "public",
      "og_image": null,
      "og_title": null,
      "og_description": null,
      "twitter_image": null,
      "twitter_title": null,
      "twitter_description": null,
      "meta_title": null,
      "meta_description": null,
      "codeinjection_head": null,
      "codeinjection_foot": null,
      "canonical_url": null,
      "accent_color": null,
      "url": "https://jina-ai-gmbh.ghost.io/tag/tech-blog/"
    }
  ],
  "primary_author": {
    "id": "632ade4a3e4e55003d525971",
    "name": "Alex C-G",
    "slug": "alexcg",
    "profile_image": "https://jina-ai-gmbh.ghost.io/content/images/2022/09/alex.jpg",
    "cover_image": "https://jina-ai-gmbh.ghost.io/content/images/2022/11/twitter_banner.jpg",
    "bio": "Open-source Evangelist @ Jina AI. Old, grim, and full of Vim",
    "website": null,
    "location": "Berlin, Germany",
    "facebook": null,
    "twitter": "@alexcg",
    "meta_title": null,
    "meta_description": null,
    "url": "https://jina-ai-gmbh.ghost.io/author/alexcg/"
  },
  "primary_tag": {
    "id": "634a1a8ccebfc1003d8ab706",
    "name": "Tech Blog",
    "slug": "tech-blog",
    "description": null,
    "feature_image": null,
    "visibility": "public",
    "og_image": null,
    "og_title": null,
    "og_description": null,
    "twitter_image": null,
    "twitter_title": null,
    "twitter_description": null,
    "meta_title": null,
    "meta_description": null,
    "codeinjection_head": null,
    "codeinjection_foot": null,
    "canonical_url": null,
    "accent_color": null,
    "url": "https://jina-ai-gmbh.ghost.io/tag/tech-blog/"
  },
  "url": "https://jina-ai-gmbh.ghost.io/podcast/meta-prompt-for-better-jina-api-integration-and-codegen/",
  "excerpt": "Ist Meta-Prompt der neue Standard für API-Spezifikationen? Man kann ihn in LLMs einspeisen und Integrationscode generieren, der Jinas APIs zuverlässig integriert und einem den üblichen Trial-and-Error-Prozess erspart.",
  "reading_time": 9,
  "access": true,
  "comments": false,
  "og_image": null,
  "og_title": null,
  "og_description": null,
  "twitter_image": null,
  "twitter_title": null,
  "twitter_description": null,
  "meta_title": null,
  "meta_description": null,
  "email_subject": null,
  "frontmatter": null,
  "feature_image_alt": null,
  "feature_image_caption": null
}
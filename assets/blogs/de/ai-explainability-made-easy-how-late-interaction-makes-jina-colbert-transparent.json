{
  "slug": "ai-explainability-made-easy-how-late-interaction-makes-jina-colbert-transparent",
  "id": "6672af263ce1950001eed6a7",
  "uuid": "44371108-082d-4fb0-a28d-4f86fc02ac14",
  "title": "KI-Erklärbarkeit leicht gemacht: Wie Late Interaction Jina-ColBERT transparent macht",
  "html": "<p>Eines der lang bestehenden Probleme von KI-Modellen ist, dass neuronale Netze nicht erklären, wie sie ihre Ausgaben produzieren. Es ist nicht immer klar, wie sehr dies ein echtes Problem für künstliche Intelligenz darstellt. Wenn wir Menschen bitten, ihre Denkweise zu erklären, rationalisieren sie routinemäßig, typischerweise völlig unbewusst, und geben die plausibelsten Erklärungen für sich selbst, ohne jeden Hinweis darauf, was wirklich in ihren Köpfen vorgeht.</p><p>Wir wissen bereits, wie wir KI-Modelle dazu bringen können, plausible Antworten zu erfinden. Vielleicht ist künstliche Intelligenz den Menschen in dieser Hinsicht ähnlicher, als wir zugeben möchten.</p><p>Vor fünfzig Jahren schrieb der amerikanische Philosoph Thomas Nagel einen einflussreichen Essay mit dem Titel <em>What Is It Like To Be A Bat?</em> Er behauptete, dass es etwas geben muss, wie es ist, eine Fledermaus zu sein: Die Welt so zu sehen, wie eine Fledermaus sie sieht, und die Existenz so wahrzunehmen, wie eine Fledermaus es tut. Laut Nagel würden wir jedoch selbst dann, wenn wir jede erkennbare Tatsache über die Funktionsweise von Fledermausgehirnen, Fledermaussinnen und Fledermauskörpern kennen würden, immer noch nicht wissen, wie es ist, eine Fledermaus zu sein.</p><p>Die Erklärbarkeit von KI ist die gleiche Art von Problem. Wir kennen jede Tatsache über ein bestimmtes KI-Modell. Es sind nur viele endlich-präzise Zahlen, die in einer Sequenz von Matrizen angeordnet sind. Wir können trivial überprüfen, dass jede Modellausgabe das Ergebnis korrekter Arithmetik ist, aber diese Information ist als Erklärung nutzlos.</p><p>Es gibt für KI genauso wenig eine allgemeine Lösung für dieses Problem wie für Menschen. Die ColBERT-Architektur jedoch, und insbesondere wie sie \"Late Interaction\" als Reranker verwendet, ermöglicht es Ihnen, aussagekräftige Einblicke von Ihren Modellen darüber zu erhalten, warum es in bestimmten Fällen spezifische Ergebnisse liefert.</p><p>Dieser Artikel zeigt Ihnen, wie Late Interaction Erklärbarkeit ermöglicht, unter Verwendung des Jina-ColBERT-Modells <a href=\"https://huggingface.co/jinaai/jina-colbert-v1-en?ref=jina-ai-gmbh.ghost.io\"><code>jina-colbert-v1-en</code></a> und der <a href=\"https://matplotlib.org/?ref=jina-ai-gmbh.ghost.io\">Matplotlib Python-Bibliothek</a>.</p><h2 id=\"a-brief-overview-of-colbert\">Ein kurzer Überblick über ColBERT</h2><p>ColBERT wurde in <a href=\"https://doi.org/10.1145/3397271.3401075?ref=jina-ai-gmbh.ghost.io\">Khattab & Zaharia (2020)</a> als Erweiterung des <a href=\"https://doi.org/10.18653/v1/N19-1423?ref=jina-ai-gmbh.ghost.io\">2018 von Google eingeführten BERT-Modells</a> vorgestellt. <a href=\"https://jina.ai/news/what-is-colbert-and-late-interaction-and-why-they-matter-in-search/?ref=jina-ai-gmbh.ghost.io\">Jina AIs Jina-ColBERT</a>-Modelle basieren auf dieser Arbeit und der späteren ColBERT v2-Architektur, die in <a href=\"https://arxiv.org/abs/2112.01488?ref=jina-ai-gmbh.ghost.io\">Santhanam, et al. (2021)</a> vorgeschlagen wurde. ColBERT-Modelle können zur Erstellung von Embeddings verwendet werden, haben aber einige zusätzliche Funktionen, wenn sie als Reranking-Modell eingesetzt werden. Der Hauptvorteil ist <em>Late Interaction</em>, eine andere Art, das Problem der semantischen Textähnlichkeit im Vergleich zu Standard-Embedding-Modellen zu strukturieren.</p><h3 id=\"embedding-models\">Embedding-Modelle</h3><p>In einem traditionellen Embedding-Modell vergleichen wir zwei Texte, indem wir repräsentative Vektoren für sie erstellen, die sogenannten <em>Embeddings</em>, und dann diese Embeddings über Distanzmetriken wie Kosinus- oder Hamming-Distanz vergleichen. Die Quantifizierung der semantischen Ähnlichkeit von zwei Texten folgt im Allgemeinen einem gemeinsamen Verfahren.</p><p>Zunächst erstellen wir Embeddings für die beiden Texte separat. Für jeden einzelnen Text:</p><ol><li>Ein Tokenizer zerlegt den Text in etwa wortgroße Stücke.</li><li>Jedes Token wird auf einen Vektor abgebildet.</li><li>Die Token-Vektoren interagieren über das Attention-System und Faltungsschichten und fügen der Repräsentation jedes Tokens Kontextinformationen hinzu.</li><li>Eine Pooling-Schicht transformiert diese modifizierten Token-Vektoren in einen einzelnen Embedding-Vektor.</li></ol><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://jina-ai-gmbh.ghost.io/content/images/2024/06/Embeddings_pooling_dark_small-1.png\" class=\"kg-image\" alt=\"Diagram of text classification model with convolutional, attention, pooling layers, and text tokens on a black background.\" loading=\"lazy\" width=\"550\" height=\"900\"><figcaption><span style=\"white-space: pre-wrap;\">Ein schematisiertes Embedding-Modell, das ein einzelnes Embedding für einen Text erstellt.</span></figcaption></figure><p>Wenn dann für jeden Text ein Embedding vorliegt, vergleichen wir sie miteinander, typischerweise mit der Kosinus-Metrik oder Hamming-Distanz.</p><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://jina-ai-gmbh.ghost.io/content/images/2024/06/Embeddings2_simpler_dark_small.png\" class=\"kg-image\" alt=\"Flowchart describing a text similarity calculation process with tokenization, embedding models, and scoring.\" loading=\"lazy\" width=\"775\" height=\"825\" srcset=\"https://jina-ai-gmbh.ghost.io/content/images/size/w600/2024/06/Embeddings2_simpler_dark_small.png 600w, https://jina-ai-gmbh.ghost.io/content/images/2024/06/Embeddings2_simpler_dark_small.png 775w\" sizes=\"(min-width: 720px) 720px\"><figcaption><span style=\"white-space: pre-wrap;\">In einem konventionellen Embedding-Modell werden Dokumente durch direkten Vergleich ihrer Embeddings verglichen.</span></figcaption></figure><p>Die Bewertung erfolgt durch Vergleich der beiden vollständigen Embeddings miteinander, ohne spezifische Informationen über die Tokens. Die gesamte Interaktion zwischen Tokens erfolgt \"früh\", da sie stattfindet, bevor die beiden Texte miteinander verglichen werden.</p><h3 id=\"reranking-models\">Reranking-Modelle</h3><p>Reranking-Modelle arbeiten anders.</p><p>Anstatt ein Embedding für einen Text zu erstellen, nimmt es zunächst einen Text, genannt <em>Query</em>, und eine Sammlung anderer Texte, die wir <em>Zieldokumente</em> nennen, und bewertet dann jedes Zieldokument in Bezug auf den Query-Text. Diese Zahlen sind nicht normalisiert und nicht wie der Vergleich von Embeddings, aber sie sind sortierbar. Die Zieldokumente, die in Bezug auf die Query am höchsten punkten, sind nach dem Modell die Texte, die semantisch am stärksten mit der Query verwandt sind.</p><p>Schauen wir uns an, wie das konkret mit dem <code>jina-colbert-v1-en</code> Reranker-Modell funktioniert, unter Verwendung der Jina Reranker API und Python.</p><p>Der folgende Code ist auch in einem Notebook verfügbar, das Sie <a href=\"https://raw.githubusercontent.com/jina-ai/workshops/main/notebooks/heatmaps/colbert_heatmaps.ipynb?ref=jina-ai-gmbh.ghost.io\" rel=\"noreferrer\">herunterladen</a> oder <a href=\"https://colab.research.google.com/github/jina-ai/workshops/blob/main/notebooks/heatmaps/colbert_heatmaps.ipynb?ref=jina-ai-gmbh.ghost.io\" rel=\"noreferrer\">in Google Colab ausführen</a> können.</p><p>Sie sollten zuerst die neueste Version der <code>requests</code>-Bibliothek in Ihre Python-Umgebung installieren. Sie können dies mit folgendem Befehl tun:</p><pre><code class=\"language-bash\">pip install requests -U\n</code></pre><p>Besuchen Sie als Nächstes die <a href=\"https://jina.ai/reranker/?ref=jina-ai-gmbh.ghost.io#apiform\">Jina Reranker API-Seite</a> und holen Sie sich einen kostenlosen API-Token, der für bis zu einer Million Token Textverarbeitung gültig ist. Kopieren Sie den API-Token-Schlüssel vom unteren Ende der Seite, wie unten gezeigt:</p><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://jina-ai-gmbh.ghost.io/content/images/2024/06/jina_reranker_api.png\" class=\"kg-image\" alt=\"Screenshot of Reranker API's interface with explanatory text and red-highlighted code segment for search optimization.\" loading=\"lazy\" width=\"1650\" height=\"1800\" srcset=\"https://jina-ai-gmbh.ghost.io/content/images/size/w600/2024/06/jina_reranker_api.png 600w, https://jina-ai-gmbh.ghost.io/content/images/size/w1000/2024/06/jina_reranker_api.png 1000w, https://jina-ai-gmbh.ghost.io/content/images/size/w1600/2024/06/jina_reranker_api.png 1600w, https://jina-ai-gmbh.ghost.io/content/images/2024/06/jina_reranker_api.png 1650w\" sizes=\"(min-width: 720px) 720px\"><figcaption><span style=\"white-space: pre-wrap;\">Wie Sie Ihren persönlichen API-Schlüssel von der Jina Reranker API-Seite erhalten.</span></figcaption></figure><p>Wir verwenden folgenden Query-Text:</p><ul><li>\"Elephants eat 150 kg of food per day.\"</li></ul><p>Und vergleichen diese Query mit drei Texten:</p><ul><li>\"Elephants eat 150 kg of food per day.\"</li><li>\"Every day, the average elephant consumes roughly 150 kg of plants.\"</li><li>\"The rain in Spain falls mainly on the plain.\"</li></ul><p>Das erste Dokument ist identisch mit der Query, das zweite ist eine Umformulierung des ersten, und der letzte Text ist völlig unzusammenhängend.</p><p>Verwenden Sie den folgenden Python-Code, um die Scores zu erhalten, wobei Sie Ihren Jina Reranker API-Token der Variable <code>jina_api_key</code> zuweisen:</p><pre><code class=\"language-Python\">import requests\n\nurl = \"&lt;https://api.jina.ai/v1/rerank&gt;\"\njina_api_key = \"&lt;YOUR JINA RERANKER API TOKEN HERE&gt;\"\n\nheaders = {\n    \"Content-Type\": \"application/json\",\n    \"Authorization\": f\"Bearer {jina_api_key}\"\n}\ndata = {\n    \"model\": \"jina-colbert-v1-en\",\n    \"query\": \"Elephants eat 150 kg of food per day.\",\n    \"documents\": [\n        \"Elephants eat 150 kg of food per day.\",\n        \"Every day, the average elephant consumes roughly 150 kg of food.\",\n        \"The rain in Spain falls mainly on the plain.\",\n    ],\n    \"top_n\": 3\n}\n\nresponse = requests.post(url, headers=headers, json=data)\nfor item in response.json()['results']:\n    print(f\"{item['relevance_score']} : {item['document']['text']}\")\n</code></pre><p>Die Ausführung dieses Codes aus einer Python-Datei oder in einem Notebook sollte folgendes Ergebnis liefern:</p><pre><code class=\"language-Text\">11.15625 : Elephants eat 150 kg of food per day.\n9.6328125 : Every day, the average elephant consumes roughly 150 kg of food.\n1.568359375 : The rain in Spain falls mainly on the plain.\n</code></pre><p>Die exakte Übereinstimmung hat die höchste Punktzahl, wie wir erwarten würden, während die Umformulierung die zweithöchste Punktzahl hat und ein völlig unzusammenhängender Text eine viel niedrigere Punktzahl aufweist.</p><h3 id=\"scoring-using-colbert\">Scoring mit ColBERT</h3><p>Was ColBERT-Reranking von Embedding-basierter Bewertung unterscheidet, ist, dass die Tokens der beiden Texte während des Bewertungsprozesses miteinander verglichen werden. Die beiden Texte haben nie ihre eigenen Embeddings.</p><p>Zunächst verwenden wir die gleiche Architektur wie Embedding-Modelle, um neue Repräsentationen für jedes Token zu erstellen, die Kontextinformationen aus dem Text enthalten. Dann vergleichen wir jedes Token aus der Query mit jedem Token aus dem Dokument.</p><p>Für jedes Token in der Query identifizieren wir das Token im Dokument, das die stärkste Interaktion damit hat, und summieren diese Interaktionswerte auf, um einen endgültigen numerischen Wert zu berechnen.</p><figure class=\"kg-card kg-image-card kg-width-wide\"><img src=\"https://jina-ai-gmbh.ghost.io/content/images/2024/06/ColBERT_dual_dark_small.png\" class=\"kg-image\" alt=\"Detailed diagram showing computational model with tokens, scored and categorized into &quot;Early&quot; and &quot;Late&quot; interactions.\" loading=\"lazy\" width=\"1325\" height=\"1200\" srcset=\"https://jina-ai-gmbh.ghost.io/content/images/size/w600/2024/06/ColBERT_dual_dark_small.png 600w, https://jina-ai-gmbh.ghost.io/content/images/size/w1000/2024/06/ColBERT_dual_dark_small.png 1000w, https://jina-ai-gmbh.ghost.io/content/images/2024/06/ColBERT_dual_dark_small.png 1325w\" sizes=\"(min-width: 1200px) 1200px\"></figure><p>Diese Interaktion ist „spät\": Die Token interagieren über die beiden Texte hinweg, wenn wir sie miteinander vergleichen. Aber denken Sie daran: Die „späte\" Interaktion schließt die „frühe\" Interaktion nicht aus. Die verglichenen Token-Vektorpaare enthalten bereits Informationen über ihre spezifischen Kontexte.</p><p>Dieses späte Interaktionsschema bewahrt die Token-Level-Informationen, auch wenn diese Informationen kontextspezifisch sind. Das ermöglicht uns teilweise zu sehen, wie das ColBERT-Modell seinen Score berechnet, da wir identifizieren können, welche Paare von kontextualisierten Token zum finalen Score beitragen.</p><h2 id=\"explaining-rankings-with-heat-maps\">Rankings mit Heatmaps erklären</h2><p>Heatmaps sind eine Visualisierungstechnik, die nützlich ist, um zu sehen, was in Jina-ColBERT bei der Erstellung von Scores passiert. In diesem Abschnitt werden wir die <a href=\"https://seaborn.pydata.org/?ref=jina-ai-gmbh.ghost.io\"><code>seaborn</code></a> und <a href=\"https://matplotlib.org/?ref=jina-ai-gmbh.ghost.io\"><code>matplotlib</code></a> Bibliotheken verwenden, um Heatmaps aus der späten Interaktionsschicht von <a href=\"https://huggingface.co/jinaai/jina-colbert-v1-en?ref=jina-ai-gmbh.ghost.io\"><code>jina-colbert-v1-en</code></a> zu erstellen und zu zeigen, wie die Query-Token mit den Zieltext-Token interagieren.</p><h3 id=\"set-up\">Einrichtung</h3><p>Wir haben eine Python-Bibliotheksdatei erstellt, die den Code für den Zugriff auf das <code>jina-colbert-v1-en</code> Modell und die Verwendung von <code>seaborn</code>, <code>matplotlib</code> und <code>Pillow</code> zur Erstellung von Heatmaps enthält. Sie können <a href=\"https://raw.githubusercontent.com/jina-ai/workshops/main/notebooks/heatmaps/jina_colbert_heatmaps.py?ref=jina-ai-gmbh.ghost.io\" rel=\"noreferrer\">diese Bibliothek direkt von GitHub herunterladen</a>, oder <a href=\"https://raw.githubusercontent.com/jina-ai/workshops/main/notebooks/heatmaps/colbert_heatmaps.ipynb?ref=jina-ai-gmbh.ghost.io\" rel=\"noreferrer\">das bereitgestellte Notebook</a> auf Ihrem eigenen System oder auf <a href=\"https://colab.research.google.com/github/jina-ai/workshops/blob/main/notebooks/heatmaps/colbert_heatmaps.ipynb?ref=jina-ai-gmbh.ghost.io\" rel=\"noreferrer\">Google Colab</a> verwenden.</p><p>Installieren Sie zuerst die Anforderungen. Sie benötigen die neueste Version der <code>requests</code> Bibliothek in Ihrer Python-Umgebung. Wenn Sie dies noch nicht getan haben, führen Sie aus:</p><pre><code class=\"language-bash\">pip install requests -U \n</code></pre><p>Installieren Sie dann die Kernbibliotheken:</p><pre><code class=\"language-bash\">pip install matplotlib seaborn torch Pillow\n</code></pre><p>Laden Sie als Nächstes <code>jina_colbert_heatmaps.py</code> von GitHub herunter. Sie können dies <a href=\"https://raw.githubusercontent.com/jina-ai/workshops/main/notebooks/heatmaps/jina_colbert_heatmaps.py?ref=jina-ai-gmbh.ghost.io\" rel=\"noreferrer\">über einen Webbrowser</a> tun oder in der Kommandozeile, wenn <code>wget</code> installiert ist:</p><pre><code class=\"language-bash\">wget https://raw.githubusercontent.com/jina-ai/workshops/main/notebooks/heatmaps/jina_colbert_heatmaps.py\n</code></pre><p>Mit den installierten Bibliotheken müssen wir für den Rest dieses Artikels nur noch eine Funktion deklarieren:</p><pre><code class=\"language-Python\">from jina_colbert_heatmaps import JinaColbertHeatmapMaker\n\ndef create_heatmap(query, document, figsize=None):\n    heat_map_maker = JinaColbertHeatmapMaker(jina_api_key=jina_api_key)\n    # get token embeddings for the query\n    query_emb = heat_map_maker.embed(query, is_query=True)\n    # get token embeddings for the target document\n    document_emb = heat_map_maker.embed(document, is_query=False)\n    return heat_map_maker.compute_heatmap(document_emb[0], query_emb[0], figsize)\n</code></pre><h3 id=\"results\">Ergebnisse</h3><p>Nachdem wir nun Heatmaps erstellen können, lassen Sie uns einige erstellen und sehen, was sie uns sagen.</p><p>Führen Sie den folgenden Befehl in Python aus:</p><pre><code class=\"language-Python\">create_heatmap(\"Elephants eat 150 kg of food per day.\", \"Elephants eat 150 kg of food per day.\")</code></pre><p>Das Ergebnis wird eine Heatmap sein, die so aussieht:</p><figure class=\"kg-card kg-image-card\"><img src=\"https://jina-ai-gmbh.ghost.io/content/images/2024/06/Untitled--68-.png\" class=\"kg-image\" alt=\"Heatmap visualizing relationships between phrases like &quot;elephants eat 150 kg of food per day&quot; with color gradients indicating\" loading=\"lazy\" width=\"640\" height=\"480\" srcset=\"https://jina-ai-gmbh.ghost.io/content/images/size/w600/2024/06/Untitled--68-.png 600w, https://jina-ai-gmbh.ghost.io/content/images/2024/06/Untitled--68-.png 640w\"></figure><p>Dies ist eine Heatmap der Aktivierungslevel zwischen Token-Paaren, wenn wir zwei identische Texte vergleichen. Jedes Quadrat zeigt die Interaktion zwischen zwei Token, jeweils eines aus jedem Text. Die zusätzlichen Token <code>[CLS]</code> und <code>[SEP]</code> kennzeichnen jeweils den Anfang und das Ende des Textes, und <code>q</code> und <code>d</code> werden direkt nach dem <code>[CLS]</code>-Token in Queries bzw. Zieldokumenten eingefügt. Dies ermöglicht es dem Modell, Interaktionen zwischen Token und dem Anfang und Ende von Texten zu berücksichtigen, erlaubt aber auch Token-Repräsentationen, die sensitiv dafür sind, ob sie sich in Queries oder Zielen befinden.</p><p>Je heller das Quadrat, desto mehr Interaktion gibt es zwischen den beiden Token, was auf eine semantische Verwandtschaft hinweist. Der Interaktionsscore jedes Token-Paars liegt im Bereich von -1,0 bis 1,0. Die rot umrahmten Quadrate sind diejenigen, die zum finalen Score beitragen: Für jedes Token in der Query ist sein höchstes Interaktionslevel mit einem beliebigen Dokument-Token der Wert, der zählt.</p><p>Die besten Übereinstimmungen — die hellsten Stellen — und die rot umrahmten Maximalwerte liegen fast alle genau auf der Diagonale und haben eine sehr starke Interaktion. Die einzigen Ausnahmen sind die „technischen\" Token <code>[CLS]</code>, <code>q</code> und <code>d</code> sowie das Wort „of\", das ein hochfrequentes „Stoppwort\" im Englischen ist und sehr wenig eigenständige Information trägt.</p><p>Lassen Sie uns einen strukturell ähnlichen Satz nehmen — \"Cats eat 50 g of food per day.\" — und sehen, wie die Token darin interagieren:</p><pre><code class=\"language-Python\">create_heatmap(\"Elephants eat 150 kg of food per day.\", \"Cats eat 50 g of food per day.\")</code></pre><figure class=\"kg-card kg-image-card\"><img src=\"https://jina-ai-gmbh.ghost.io/content/images/2024/06/download.png\" class=\"kg-image\" alt=\"Heatmap visualizing the relevance of keywords like &quot;elephants&quot;, &quot;food&quot;, and &quot;kg&quot; with varying intensity colors, indicating da\" loading=\"lazy\" width=\"640\" height=\"480\" srcset=\"https://jina-ai-gmbh.ghost.io/content/images/size/w600/2024/06/download.png 600w, https://jina-ai-gmbh.ghost.io/content/images/2024/06/download.png 640w\"></figure><p>Auch hier liegen die besten Übereinstimmungen hauptsächlich auf der Diagonale, da die Wörter häufig dieselben sind und die Satzstruktur fast identisch ist. Selbst „cats\" und „elephants\" stimmen aufgrund ihrer gemeinsamen Kontexte überein, wenn auch nicht sehr gut.</p><p>Je weniger ähnlich der Kontext ist, desto schlechter ist die Übereinstimmung. Betrachten wir den Text \"Employees eat at the company canteen.\"</p><pre><code class=\"language-Python\">create_heatmap(\"Elephants eat 150 kg of food per day.\", \"Employees eat at the company canteen.\")</code></pre><figure class=\"kg-card kg-image-card\"><img src=\"https://jina-ai-gmbh.ghost.io/content/images/2024/06/Untitled--69-.png\" class=\"kg-image\" alt=\"Heatmap visualization showing word correlations from news articles, including topics like food, elephants, and work environme\" loading=\"lazy\" width=\"640\" height=\"480\" srcset=\"https://jina-ai-gmbh.ghost.io/content/images/size/w600/2024/06/Untitled--69-.png 600w, https://jina-ai-gmbh.ghost.io/content/images/2024/06/Untitled--69-.png 640w\"></figure><p>Obwohl strukturell ähnlich, ist die einzige starke Übereinstimmung hier zwischen den beiden Instanzen von „eat\". Thematisch sind dies sehr unterschiedliche Sätze, auch wenn ihre Struktur sehr parallel ist.</p><p>Wenn wir die Dunkelheit der Farben in den rot umrahmten Quadraten betrachten, können wir sehen, wie das Modell sie als Übereinstimmungen für \"Elephants eat 150 kg of food per day\" einstufen würde, und <code>jina-colbert-v1-en</code> bestätigt diese Intuition:</p>\n<!--kg-card-begin: html-->\n<table>\n<thead>\n<tr>\n<th>Score</th>\n<th>Text</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>11.15625</td>\n<td>Elephants eat 150 kg of food per day.</td>\n</tr>\n<tr>\n<td>8.3671875</td>\n<td>Cats eat 50 g of food per day.</td>\n</tr>\n<tr>\n<td>3.734375</td>\n<td>Employees eat at the company canteen.</td>\n</tr>\n</tbody>\n</table>\n<!--kg-card-end: html-->\n<p>Vergleichen wir nun \"Elephants eat 150 kg of food per day.\" mit einem Satz, der im Wesentlichen die gleiche Bedeutung hat, aber anders formuliert ist: \"Every day, the average elephant consumes roughly 150 kg of food.\"</p><pre><code class=\"language-Python\">create_heatmap(\"Elephants eat 150 kg of food per day.\", \"Every day, the average elephant consumes roughly 150 kg of food.\")</code></pre><figure class=\"kg-card kg-image-card\"><img src=\"https://jina-ai-gmbh.ghost.io/content/images/2024/06/Untitled--70-.png\" class=\"kg-image\" alt=\"Colorful heatmap visualizing the relationship between elephant consumption metrics and other variables.\" loading=\"lazy\" width=\"640\" height=\"480\" srcset=\"https://jina-ai-gmbh.ghost.io/content/images/size/w600/2024/06/Untitled--70-.png 600w, https://jina-ai-gmbh.ghost.io/content/images/2024/06/Untitled--70-.png 640w\"></figure><p>Beachten Sie die starke Interaktion zwischen \"eat\" im ersten Satz und \"consume\" im zweiten. Der Unterschied im Vokabular hindert Jina-ColBERT nicht daran, die gemeinsame Bedeutung zu erkennen.</p><p>Auch \"every day\" entspricht stark \"per day\", obwohl sie sich an völlig unterschiedlichen Stellen befinden. Nur das niedrigwertige Wort \"of\" ist eine anomale Nicht-Übereinstimmung.</p><p>Vergleichen wir nun dieselbe Anfrage mit einem völlig unzusammenhängenden Text: \"The rain in Spain falls mainly on the plain.\"</p><pre><code class=\"language-Python\">create_heatmap(\"Elephants eat 150 kg of food per day.\", \"The rain in Spain falls mainly on the plain.\")</code></pre><figure class=\"kg-card kg-image-card\"><img src=\"https://jina-ai-gmbh.ghost.io/content/images/2024/06/download-1.png\" class=\"kg-image\" alt=\"Seaborn heatmap visualizing frequencies of topic discussions over months, shaded from red to dark blue.\" loading=\"lazy\" width=\"640\" height=\"480\" srcset=\"https://jina-ai-gmbh.ghost.io/content/images/size/w600/2024/06/download-1.png 600w, https://jina-ai-gmbh.ghost.io/content/images/2024/06/download-1.png 640w\"></figure><p>Sie können sehen, dass die \"beste Übereinstimmung\" Interaktionen für dieses Paar viel niedriger ausfallen und es sehr wenig Interaktion zwischen den Wörtern der beiden Texte gibt. Intuitiv würden wir erwarten, dass es im Vergleich zu \"Every day, the average elephant consumes roughly 150 kg of food\" schlecht abschneidet, und <code>jina-colbert-v1-en</code> stimmt dem zu:</p>\n<!--kg-card-begin: html-->\n<table>\n<thead>\n<tr>\n<th>Score</th>\n<th>Text</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>9.6328125</td>\n<td>Every day, the average elephant consumes roughly 150 kg of food.</td>\n</tr>\n<tr>\n<td>1.568359375</td>\n<td>The rain in Spain falls mainly on the plain.</td>\n</tr>\n</tbody>\n</table>\n<!--kg-card-end: html-->\n<h3 id=\"long-texts\">Lange Texte</h3><p>Dies sind Beispiele zur Demonstration der Funktionsweise von ColBERT-Style Reranker-Modellen. In Information-Retrieval-Kontexten, wie bei der Retrieval-Augmented Generation, sind Anfragen üblicherweise kurze Texte, während die zu vergleichenden Kandidatendokumente länger sind, oft so lang wie das Eingabe-Kontextfenster des Modells.</p><p>Jina-ColBERT-Modelle unterstützen alle 8192 Token-Eingabekontexte, was etwa 16 Standardseiten einzeilig geschriebenem Text entspricht.</p><p>Wir können auch für diese asymmetrischen Fälle Heatmaps erstellen. Nehmen wir zum Beispiel den ersten Abschnitt der <a href=\"https://en.wikipedia.org/wiki/Indian_elephant?ref=jina-ai-gmbh.ghost.io\">Wikipedia-Seite über Indische Elefanten</a>:</p><figure class=\"kg-card kg-image-card\"><img src=\"https://jina-ai-gmbh.ghost.io/content/images/2024/06/Screenshot-2024-06-13-at-14.12.36--1-.png\" class=\"kg-image\" alt=\"Screenshot of Wikipedia page on Indian elephants, featuring articles, three elephant images, and conservation status.\" loading=\"lazy\" width=\"2000\" height=\"1870\" srcset=\"https://jina-ai-gmbh.ghost.io/content/images/size/w600/2024/06/Screenshot-2024-06-13-at-14.12.36--1-.png 600w, https://jina-ai-gmbh.ghost.io/content/images/size/w1000/2024/06/Screenshot-2024-06-13-at-14.12.36--1-.png 1000w, https://jina-ai-gmbh.ghost.io/content/images/size/w1600/2024/06/Screenshot-2024-06-13-at-14.12.36--1-.png 1600w, https://jina-ai-gmbh.ghost.io/content/images/2024/06/Screenshot-2024-06-13-at-14.12.36--1-.png 2188w\" sizes=\"(min-width: 720px) 720px\"></figure><p>Um diesen Text als reinen Text zu sehen, wie er an <code>jina-colbert-v1-en</code> übergeben wird, klicken Sie <a href=\"https://raw.githubusercontent.com/jina-ai/workshops/docs-heatmaps/notebooks/heatmaps/wikipedia_indian_elephant.txt?ref=jina-ai-gmbh.ghost.io\">diesen Link</a>.</p><p>Dieser Text ist 364 Wörter lang, daher wird unsere Heatmap nicht sehr quadratisch aussehen:</p><pre><code class=\"language-Python\">create_heatmap(\"Elephants eat 150 kg of food per day.\", wikipedia_elephants, figsize=(50,7))</code></pre><figure class=\"kg-card kg-image-card kg-width-wide\"><img src=\"https://jina-ai-gmbh.ghost.io/content/images/2024/06/Untitled--71--2.png\" class=\"kg-image\" alt=\"Graphical heatmap displaying genetic data, with red and orange dots indicating varying expression levels across base pairs an\" loading=\"lazy\" width=\"2000\" height=\"378\" srcset=\"https://jina-ai-gmbh.ghost.io/content/images/size/w600/2024/06/Untitled--71--2.png 600w, https://jina-ai-gmbh.ghost.io/content/images/size/w1000/2024/06/Untitled--71--2.png 1000w, https://jina-ai-gmbh.ghost.io/content/images/size/w1600/2024/06/Untitled--71--2.png 1600w, https://jina-ai-gmbh.ghost.io/content/images/size/w2400/2024/06/Untitled--71--2.png 2400w\" sizes=\"(min-width: 1200px) 1200px\"></figure><p>Wir sehen, dass \"elephants\" an vielen Stellen im Text übereinstimmt. Das ist bei einem Text über Elefanten nicht überraschend. Aber wir können auch einen Bereich erkennen, wo es eine viel stärkere Interaktion gibt:</p><figure class=\"kg-card kg-image-card kg-width-wide\"><img src=\"https://jina-ai-gmbh.ghost.io/content/images/2024/06/Untitled--72--1.png\" class=\"kg-image\" alt=\"Genomic heatmap with red and black patterns, axis labeled 'XNTY', and highlighted regions indicating data points.\" loading=\"lazy\" width=\"2000\" height=\"443\" srcset=\"https://jina-ai-gmbh.ghost.io/content/images/size/w600/2024/06/Untitled--72--1.png 600w, https://jina-ai-gmbh.ghost.io/content/images/size/w1000/2024/06/Untitled--72--1.png 1000w, https://jina-ai-gmbh.ghost.io/content/images/size/w1600/2024/06/Untitled--72--1.png 1600w, https://jina-ai-gmbh.ghost.io/content/images/size/w2400/2024/06/Untitled--72--1.png 2400w\" sizes=\"(min-width: 1200px) 1200px\"></figure><p>Was passiert hier? Mit Jina-ColBERT können wir den Teil des längeren Textes finden, dem dies entspricht. Es stellt sich heraus, dass es sich um den vierten Satz des zweiten Absatzes handelt:</p><blockquote>The species is classified as a megaherbivore and consume up to 150 kg (330 lb) of plant matter per day.</blockquote><p>Dies enthält die gleiche Information wie im Anfragetext. Wenn wir uns die Heatmap nur für diesen Satz ansehen, können wir die starken Übereinstimmungen erkennen:</p><figure class=\"kg-card kg-image-card\"><img src=\"https://jina-ai-gmbh.ghost.io/content/images/2024/06/Untitled--74-.png\" class=\"kg-image\" alt=\"Heatmap displaying word co-occurrence with a focus on &quot;elephants,&quot; &quot;food,&quot; and &quot;day,&quot; with color intensity indicating the str\" loading=\"lazy\" width=\"640\" height=\"480\" srcset=\"https://jina-ai-gmbh.ghost.io/content/images/size/w600/2024/06/Untitled--74-.png 600w, https://jina-ai-gmbh.ghost.io/content/images/2024/06/Untitled--74-.png 640w\"></figure><p>Jina-ColBERT bietet Ihnen die Möglichkeit, genau zu sehen, welche Bereiche in einem langen Text für die Übereinstimmung mit der Anfrage verantwortlich waren. Dies führt zu besserem Debugging, aber auch zu größerer Erklärbarkeit. Es braucht keine Komplexität, um zu verstehen, wie eine Übereinstimmung zustande kommt.</p><h2 id=\"explaining-ai-outcomes-with-jina-colbert\">KI-Ergebnisse mit Jina-ColBERT erklären</h2><p>Embeddings sind eine Kerntechnologie in der modernen KI. Fast alles, was wir tun, basiert auf der Idee, dass komplexe, lernbare Beziehungen in Eingabedaten in der Geometrie hochdimensionaler Räume ausgedrückt werden können. Allerdings ist es für Menschen sehr schwierig, räumliche Beziehungen in Tausenden bis Millionen von Dimensionen zu verstehen.</p><p>ColBERT ist ein Schritt zurück von dieser Abstraktionsebene. Es ist keine vollständige Antwort auf das Problem der Erklärung dessen, was ein KI-Modell tut, aber es zeigt uns direkt, welche Teile unserer Daten für unsere Ergebnisse verantwortlich sind.</p><p>Manchmal muss KI eine Black Box sein. Die riesigen Matrizen, die die ganze schwere Arbeit leisten, sind zu groß, als dass ein Mensch sie im Kopf behalten könnte. Aber die ColBERT-Architektur lässt ein wenig Licht in die Box scheinen und zeigt, dass mehr möglich ist.</p><p>Das Jina-ColBERT-Modell ist derzeit nur für Englisch verfügbar (<code>jina-colbert-v1-en</code>), aber weitere Sprachen und Anwendungskontexte sind in Vorbereitung. Diese Modellreihe, die nicht nur modernste Informationssuche durchführt, sondern Ihnen auch sagen kann, warum etwas übereinstimmt, demonstriert Jina AIs Engagement, KI-Technologien sowohl zugänglich als auch nützlich zu machen.</p>",
  "comment_id": "6672af263ce1950001eed6a7",
  "feature_image": "https://jina-ai-gmbh.ghost.io/content/images/2024/06/Search-acc--3-.png",
  "featured": false,
  "visibility": "public",
  "created_at": "2024-06-19T12:12:54.000+02:00",
  "updated_at": "2024-07-08T21:08:21.000+02:00",
  "published_at": "2024-06-19T16:01:36.000+02:00",
  "custom_excerpt": "AI explainability and transparency are hot topics. How can we trust AI if we can't see how it works? Jina-ColBERT shows you how, with the right model architecture, you can easily make your AI spill its secrets.",
  "codeinjection_head": null,
  "codeinjection_foot": null,
  "custom_template": null,
  "canonical_url": null,
  "authors": [
    {
      "id": "6360e8495e0f6e004d70bd9e",
      "name": "Maximilian Werk",
      "slug": "maximilian",
      "profile_image": "https://jina-ai-gmbh.ghost.io/content/images/2022/11/Profile-Picture.jpg",
      "cover_image": null,
      "bio": "I love bringing business value with ML powered solutions as well as broad strategic and deep technical discussions. I also care a lot about our company culture and enjoy pair programming.",
      "website": null,
      "location": null,
      "facebook": null,
      "twitter": null,
      "meta_title": null,
      "meta_description": null,
      "url": "https://jina-ai-gmbh.ghost.io/author/maximilian/"
    },
    {
      "id": "632ae7353e4e55003d52598e",
      "name": "Scott Martens",
      "slug": "scott",
      "profile_image": "https://jina-ai-gmbh.ghost.io/content/images/2022/11/photo-of-me-cropped.jpg",
      "cover_image": "https://jina-ai-gmbh.ghost.io/content/images/2022/11/shanshui-ernie-crop.png",
      "bio": "A rogue AI created by Canada's Weapon X program.\n\nContent Creator @ Jina AI",
      "website": "https://jina.ai",
      "location": "Berlin",
      "facebook": null,
      "twitter": null,
      "meta_title": null,
      "meta_description": null,
      "url": "https://jina-ai-gmbh.ghost.io/author/scott/"
    }
  ],
  "tags": [
    {
      "id": "634a1a8ccebfc1003d8ab706",
      "name": "Tech Blog",
      "slug": "tech-blog",
      "description": null,
      "feature_image": null,
      "visibility": "public",
      "og_image": null,
      "og_title": null,
      "og_description": null,
      "twitter_image": null,
      "twitter_title": null,
      "twitter_description": null,
      "meta_title": null,
      "meta_description": null,
      "codeinjection_head": null,
      "codeinjection_foot": null,
      "canonical_url": null,
      "accent_color": null,
      "url": "https://jina-ai-gmbh.ghost.io/tag/tech-blog/"
    }
  ],
  "primary_author": {
    "id": "6360e8495e0f6e004d70bd9e",
    "name": "Maximilian Werk",
    "slug": "maximilian",
    "profile_image": "https://jina-ai-gmbh.ghost.io/content/images/2022/11/Profile-Picture.jpg",
    "cover_image": null,
    "bio": "I love bringing business value with ML powered solutions as well as broad strategic and deep technical discussions. I also care a lot about our company culture and enjoy pair programming.",
    "website": null,
    "location": null,
    "facebook": null,
    "twitter": null,
    "meta_title": null,
    "meta_description": null,
    "url": "https://jina-ai-gmbh.ghost.io/author/maximilian/"
  },
  "primary_tag": {
    "id": "634a1a8ccebfc1003d8ab706",
    "name": "Tech Blog",
    "slug": "tech-blog",
    "description": null,
    "feature_image": null,
    "visibility": "public",
    "og_image": null,
    "og_title": null,
    "og_description": null,
    "twitter_image": null,
    "twitter_title": null,
    "twitter_description": null,
    "meta_title": null,
    "meta_description": null,
    "codeinjection_head": null,
    "codeinjection_foot": null,
    "canonical_url": null,
    "accent_color": null,
    "url": "https://jina-ai-gmbh.ghost.io/tag/tech-blog/"
  },
  "url": "https://jina-ai-gmbh.ghost.io/podcast/ai-explainability-made-easy-how-late-interaction-makes-jina-colbert-transparent/",
  "excerpt": "KI-Erklärbarkeit und Transparenz sind gefragte Themen. Wie können wir KI vertrauen, wenn wir nicht sehen können, wie sie funktioniert? Jina-ColBERT zeigt, wie Sie mit der richtigen Modellarchitektur Ihre KI dazu bringen können, ihre Geheimnisse preiszugeben.",
  "reading_time": 11,
  "access": true,
  "comments": false,
  "og_image": null,
  "og_title": null,
  "og_description": null,
  "twitter_image": null,
  "twitter_title": null,
  "twitter_description": null,
  "meta_title": null,
  "meta_description": null,
  "email_subject": null,
  "frontmatter": null,
  "feature_image_alt": "Digital representation of a golden building seen through a blue and yellow mesh pattern, evoking a technological vibe.",
  "feature_image_caption": null
}
{
  "slug": "jina-reranker-v2-for-agentic-rag-ultra-fast-multilingual-function-calling-and-code-search",
  "id": "6679720d1954df000135bc79",
  "uuid": "fc132d33-85a8-4ebd-90a3-c308abea558f",
  "title": "Agentic RAG를 위한 Jina Reranker v2: 초고속, 다국어, 함수 호출 & 코드 검색",
  "html": "<p>오늘 우리는 <a href=\"https://jina.ai/reranker/?ref=jina-ai-gmbh.ghost.io\">Jina Reranker <strong><em>v2</em></strong></a> (<code>jina-reranker-v2-base-multilingual</code>)를 출시합니다. 이는 검색 기반 제품군에서 가장 최신이자 최고 성능을 자랑하는 신경망 재순위 모델입니다. Jina Reranker v2를 통해 RAG/검색 시스템 개발자들은 다음과 같은 이점을 누릴 수 있습니다:</p><ul><li><strong>다국어:</strong> <code>bge-reranker-v2-m3</code>보다 우수한 성능으로 <em>100개 이상의 언어</em>에서 더 관련성 높은 검색 결과 제공</li><li><strong>에이전트 지원:</strong> 에이전트 RAG를 위한 최첨단 <em>함수 호출 및 텍스트-SQL</em> 인식 문서 재순위화</li><li><strong>코드 검색:</strong> <em>코드 검색</em> 작업에서 최고 성능 발휘</li><li><strong>초고속:</strong> <code>bge-reranker-v2-m3</code>보다 <em>15배 많은 문서</em> 처리량, <code>jina-reranker-v1-base-en</code>보다 6배 더 많은 처리량 제공</li></ul><p>Reranker API를 통해 Jina Reranker v2를 시작할 수 있으며, 모든 신규 사용자에게 100만 토큰을 무료로 제공합니다.</p><figure class=\"kg-card kg-bookmark-card\"><a class=\"kg-bookmark-container\" href=\"https://jina.ai/reranker/?ref=jina-ai-gmbh.ghost.io\"><div class=\"kg-bookmark-content\"><div class=\"kg-bookmark-title\">Reranker API</div><div class=\"kg-bookmark-description\">Maximize the search relevancy and RAG accuracy at ease.</div><div class=\"kg-bookmark-metadata\"><img class=\"kg-bookmark-icon\" src=\"https://jina.ai/icons/favicon-128x128.png\" alt=\"\"></div></div><div class=\"kg-bookmark-thumbnail\"><img src=\"https://jina.ai/banner-reranker-api.png\" alt=\"\"></div></a></figure><p>이 글에서는 Jina Reranker v2가 지원하는 새로운 기능들을 자세히 설명하고, 다른 최신 모델들(<a href=\"https://jina.ai/news/maximizing-search-relevancy-and-rag-accuracy-with-jina-reranker?ref=jina-ai-gmbh.ghost.io\">Jina Reranker v1</a> 포함)과 비교한 성능을 보여주며, Jina Reranker v2가 작업 정확도와 문서 처리량에서 최고 성능을 달성하게 된 훈련 과정을 설명하겠습니다.</p><h2 id=\"recap-why-you-need-a-reranker\">다시 보는 재순위화 모델이 필요한 이유</h2><p><a href=\"https://jina.ai/?sui=&ref=jina-ai-gmbh.ghost.io\">검색 기반</a>에서 임베딩 모델이 가장 널리 사용되고 이해되는 구성 요소이지만, 이들은 종종 검색 속도를 위해 정확도를 희생합니다. 임베딩 기반 검색 모델은 일반적으로 이중 인코더 모델로, 각 문서가 임베딩되어 저장되고, 쿼리도 임베딩되어 쿼리의 임베딩과 문서의 임베딩 간의 유사도를 기반으로 검색이 이루어집니다. 이 모델에서는 사용자의 쿼리와 매칭된 문서 사이의 토큰 수준의 상호작용의 많은 뉘앙스가 손실됩니다 - 원본 쿼리와 문서는 서로를 \"볼 수\" 없고 오직 그들의 임베딩만이 가능하기 때문입니다. 이는 검색 정확도의 희생을 초래할 수 있습니다 - 교차 인코더 재순위화 모델이 뛰어난 영역입니다.</p><figure class=\"kg-card kg-bookmark-card\"><a class=\"kg-bookmark-container\" href=\"https://jina.ai/news/maximizing-search-relevancy-and-rag-accuracy-with-jina-reranker?ref=jina-ai-gmbh.ghost.io\"><div class=\"kg-bookmark-content\"><div class=\"kg-bookmark-title\">Maximizing Search Relevance and RAG Accuracy with Jina Reranker</div><div class=\"kg-bookmark-description\">Boost your search and RAG accuracy with Jina Reranker. Our new model improves the accuracy and relevance by 20% over simple vector search. Try it now for free!</div><div class=\"kg-bookmark-metadata\"><img class=\"kg-bookmark-icon\" src=\"https://jina.ai/icons/favicon-128x128.png\" alt=\"\"></div></div><div class=\"kg-bookmark-thumbnail\"><img src=\"https://jina-ai-gmbh.ghost.io/content/images/2024/02/Reranker1.png\" alt=\"\"></div></a></figure><p>재순위화 모델은 쿼리-문서 쌍을 함께 인코딩하여 임베딩 대신 관련성 점수를 생성하는 교차 인코더 아키텍처를 사용하여 이러한 세밀한 의미론의 부족을 해결합니다. <a href=\"https://arxiv.org/pdf/2207.06300?ref=jina-ai-gmbh.ghost.io\" rel=\"noreferrer\">연구들</a>에 따르면, 대부분의 RAG 시스템에서 재순위화 모델의 사용은 의미적 근거를 개선하고 환각을 줄인다고 합니다.</p><h2 id=\"multilingual-support-with-jina-reranker-v2\">Jina Reranker v2의 다국어 지원</h2><p>과거, <a href=\"https://jina.ai/news/smaller-faster-cheaper-jina-rerankers-turbo-and-tiny/?ref=jina-ai-gmbh.ghost.io\">Jina Reranker v1</a>은 4개의 주요 영어 벤치마크에서 <a href=\"https://jina.ai/news/maximizing-search-relevancy-and-rag-accuracy-with-jina-reranker?ref=jina-ai-gmbh.ghost.io\">최고 수준의</a> 성능을 달성하며 차별화되었습니다. 오늘날, 우리는 Jina Reranker v2에서 <em>100개 이상의 언어</em>에 대한 다국어 지원과 교차 언어 작업을 통해 재순위화 기능을 크게 확장하고 있습니다!</p><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://jina-ai-gmbh.ghost.io/content/images/2024/06/Diagram--Blog-images--3-.png\" class=\"kg-image\" alt=\"쿼리가 작성된 언어에 관계없이 모든 언어로 된 관련 문서를 검색하는 교차 언어 검색의 도해\" loading=\"lazy\" width=\"1600\" height=\"900\" srcset=\"https://jina-ai-gmbh.ghost.io/content/images/size/w600/2024/06/Diagram--Blog-images--3-.png 600w, https://jina-ai-gmbh.ghost.io/content/images/size/w1000/2024/06/Diagram--Blog-images--3-.png 1000w, https://jina-ai-gmbh.ghost.io/content/images/2024/06/Diagram--Blog-images--3-.png 1600w\" sizes=\"(min-width: 720px) 720px\"><figcaption><span style=\"white-space: pre-wrap;\">교차 언어 검색의 도해 - 쿼리가 작성된 언어에 관계없이 모든 언어로 된 관련 문서를 검색하는 기능 지원</span></figcaption></figure><p>Jina Reranker v2의 교차 언어 및 영어 기능을 평가하기 위해, 아래 나열된 세 가지 벤치마크에서 유사한 재순위화 모델들과 성능을 비교했습니다:</p><h4 id=\"mkqa-multilingual-knowledge-questions-and-answers\"><a href=\"https://github.com/apple/ml-mkqa?ref=jina-ai-gmbh.ghost.io\"><strong>MKQA</strong></a><strong>: 다국어 지식 질문 및 답변</strong></h4><p>이 데이터셋은 실제 지식 베이스에서 도출된 26개 언어의 질문과 답변으로 구성되어 있으며, 질문-답변 시스템의 교차 언어 성능을 평가하도록 설계되었습니다. MKQA는 영어 쿼리와 이들의 비영어 언어로의 수동 번역, 그리고 영어를 포함한 여러 언어로 된 답변으로 구성되어 있습니다.</p><p>아래 그래프에서는 기존 임베딩 기반 검색을 수행하는 \"dense retriever\"를 기준선으로 포함하여 각 재순위화 모델의 recall@10 점수를 보고합니다:</p><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://jina-ai-gmbh.ghost.io/content/images/2024/06/image_MKQA--1-.png\" class=\"kg-image\" alt=\"모델별 밀집 검색 성능을 비교하는 막대 차트로, 점수, 도시, 언어 커버리지가 표시됨\" loading=\"lazy\" width=\"1800\" height=\"1012\" srcset=\"https://jina-ai-gmbh.ghost.io/content/images/size/w600/2024/06/image_MKQA--1-.png 600w, https://jina-ai-gmbh.ghost.io/content/images/size/w1000/2024/06/image_MKQA--1-.png 1000w, https://jina-ai-gmbh.ghost.io/content/images/size/w1600/2024/06/image_MKQA--1-.png 1600w, https://jina-ai-gmbh.ghost.io/content/images/2024/06/image_MKQA--1-.png 1800w\" sizes=\"(min-width: 720px) 720px\"><figcaption><span style=\"white-space: pre-wrap;\">MKQA 데이터셋에 대한 각 재순위화 모델의 Recall@10 점수</span></figcaption></figure><h4 id=\"beir-heterogeneous-benchmark-on-diverse-ir-tasks\"><a href=\"https://github.com/beir-cellar/beir?ref=jina-ai-gmbh.ghost.io\">BEIR</a>: 다양한 IR 작업에 대한 이질적 벤치마크</h4><p>이 오픈소스 저장소는 많은 언어를 위한 검색 벤치마크를 포함하고 있지만, 우리는 <em>영어 작업에만 초점</em>을 맞췄습니다. 이는 훈련 데이터 없이 17개의 데이터셋으로 구성되어 있으며, 이 데이터셋들은 신경망 또는 어휘 검색기의 검색 정확도를 평가하는 데 중점을 둡니다.<br><br>아래 그래프에서는 각 재순위화 모델에 대한 BEIR의 NDCG@10을 보고합니다. BEIR의 결과는 새로 도입된 <code>jina-reranker-v2-base-multilingual</code>의 다국어 기능이 영어 검색 기능을 손상시키지 않음을 명확히 보여주며, 더욱이 <code>jina-reranker-v1-base-en</code>보다 크게 향상되었습니다.</p><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://jina-ai-gmbh.ghost.io/content/images/2024/06/image_Beir.png\" class=\"kg-image\" alt=\"'jina-reranker' 모델들과 'AVG'의 'NF Corpus', 'DBpedia', 'FEVER', 'SciFac' 데이터셋에서의 성능을 보여주는 막대 차트\" loading=\"lazy\" width=\"1800\" height=\"1012\" srcset=\"https://jina-ai-gmbh.ghost.io/content/images/size/w600/2024/06/image_Beir.png 600w, https://jina-ai-gmbh.ghost.io/content/images/size/w1000/2024/06/image_Beir.png 1000w, https://jina-ai-gmbh.ghost.io/content/images/size/w1600/2024/06/image_Beir.png 1600w, https://jina-ai-gmbh.ghost.io/content/images/2024/06/image_Beir.png 1800w\" sizes=\"(min-width: 720px) 720px\"><figcaption><span style=\"white-space: pre-wrap;\">Beir 데이터셋에 대한 각 재순위화 모델의 NDCG@10 점수</span></figcaption></figure><h4 id=\"airbench-automated-heterogeneous-ir-benchmark\"><a href=\"https://github.com/AIR-Bench/AIR-Bench?ref=jina-ai-gmbh.ghost.io\">AirBench</a>: 자동화된 이질적 IR 벤치마크</h4><p>저희는 <a href=\"https://www.baai.ac.cn/english.html?ref=jina-ai-gmbh.ghost.io\">BAAI</a>와 함께 RAG 시스템을 위한 AirBench 벤치마크를 <a href=\"https://jina.ai/news/air-bench-better-metrics-for-better-search-foundation?ref=jina-ai-gmbh.ghost.io\">공동 개발</a>하고 발표했습니다. 이 벤치마크는 커스텀 도메인과 태스크를 위해 자동 생성된 합성 데이터를 사용하며, 벤치마크 대상 모델이 데이터셋에 과적합되는 것을 방지하기 위해 정답을 공개하지 않습니다. <br><br>현재 <code>jina-reranker-v2-base-multilingual</code>는 포함된 다른 모든 reranker 모델을 능가하며 <a href=\"https://huggingface.co/spaces/AIR-Bench/leaderboard?ref=jina-ai-gmbh.ghost.io\">리더보드</a>에서 1위를 차지하고 있습니다.</p><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://jina-ai-gmbh.ghost.io/content/images/2024/06/Untitled--35-.png\" class=\"kg-image\" alt=\"Web page with a table comparing retrievals and reranking methods, featuring columns like Rank, Method, Model, Average, wiki_e\" loading=\"lazy\" width=\"2000\" height=\"669\" srcset=\"https://jina-ai-gmbh.ghost.io/content/images/size/w600/2024/06/Untitled--35-.png 600w, https://jina-ai-gmbh.ghost.io/content/images/size/w1000/2024/06/Untitled--35-.png 1000w, https://jina-ai-gmbh.ghost.io/content/images/size/w1600/2024/06/Untitled--35-.png 1600w, https://jina-ai-gmbh.ghost.io/content/images/size/w2400/2024/06/Untitled--35-.png 2400w\" sizes=\"(min-width: 720px) 720px\"><figcaption><span style=\"white-space: pre-wrap;\">reranking 모델 중 </span><code spellcheck=\"false\" style=\"white-space: pre-wrap;\"><span>jina-reranker-v2-base-multilingual</span></code><span style=\"white-space: pre-wrap;\">의 최고 순위를 보여주는 AirBench 리더보드</span></figcaption></figure><h2 id=\"recap-of-tooling-agents-teaching-llms-to-use-tools\">Tooling-Agents 요약: LLM에게 도구 사용법 가르치기</h2><p>몇 년 전 AI 붐이 시작된 이후, 사람들은 AI 모델이 컴퓨터가 잘해야 할 일들을 제대로 수행하지 못하는 것을 보아왔습니다. 예를 들어, Mistral-7b-Instruct-v0.1과의 다음 대화를 살펴보세요:</p><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://jina-ai-gmbh.ghost.io/content/images/2024/06/Screenshot-2024-06-20-at-14.58.41.png\" class=\"kg-image\" alt=\"A chat interface with user asking an LLM to perform a mathematical operation\" loading=\"lazy\" width=\"712\" height=\"346\" srcset=\"https://jina-ai-gmbh.ghost.io/content/images/size/w600/2024/06/Screenshot-2024-06-20-at-14.58.41.png 600w, https://jina-ai-gmbh.ghost.io/content/images/2024/06/Screenshot-2024-06-20-at-14.58.41.png 712w\"><figcaption><span style=\"white-space: pre-wrap;\">사용자가 LLM에게 수학 연산을 수행하도록 요청하는 채팅 인터페이스</span></figcaption></figure><p>얼핏 보기에는 맞아 보일 수 있지만, 실제로 203에 7724를 곱하면 <em>1,567,972</em>입니다.</p><p>그렇다면 LLM은 왜 10배 이상 차이나는 잘못된 답을 내놓을까요? LLM은 수학이나 다른 종류의 추론을 하도록 훈련되지 않았고, 내부 재귀가 없다는 것은 복잡한 수학 문제를 해결할 수 없다는 것을 거의 보장합니다. 이들은 정확성이 본질적으로 요구되지 않는 말하기나 다른 작업을 수행하도록 훈련되었습니다.</p><p>하지만 LLM은 답을 환각하는 것을 주저하지 않습니다. LLM의 관점에서 15,824,772는 204 × 7,724의 완벽하게 <em>그럴듯한</em> 답입니다. 단지 완전히 틀렸을 뿐이죠.</p><p><em>Agentic RAG</em>는 생성형 LLM의 역할을 그들이 잘하지 못하는 것(생각하고 아는 것)에서 잘하는 것(읽기 이해와 정보를 자연어로 종합하는 것)으로 바꿉니다. 단순히 답을 생성하는 대신, RAG는 사용 가능한 데이터 소스에서 요청에 관련된 정보를 찾아 언어 모델에 제시합니다. 그것의 임무는 답을 만들어내는 것이 아니라, 다른 시스템이 찾은 답을 자연스럽고 반응적인 형태로 제시하는 것입니다.</p><div class=\"kg-card kg-callout-card kg-callout-card-blue\"><div class=\"kg-callout-emoji\">💡</div><div class=\"kg-callout-text\">agentic RAG 시스템 답변의 품질은 데이터 소스와 검색 알고리즘의 성능에 따라 결정됩니다.</div></div><p><strong>저희는 Jina Reranker v2를 SQL 데이터베이스 스키마와 함수 호출에 민감하도록 훈련했습니다. </strong>이는 기존 텍스트 검색과는 다른 종류의 의미론이 필요합니다. 태스크와 코드를 인식할 수 있어야 하며, 저희는 reranker를 이러한 기능에 맞게 특별히 훈련했습니다.</p><h2 id=\"jina-reranker-v2-on-structured-data-querying\">구조화된 데이터 쿼리에서의 Jina Reranker v2</h2><p>임베딩과 reranker 모델이 이미 비구조화 데이터를 일급 시민으로 취급하는 반면, 대부분의 모델에서는 구조화된 테이블 데이터에 대한 지원이 여전히 부족합니다.</p><p>Jina Reranker v2는 MySQL이나 MongoDB와 같은 구조화된 데이터베이스를 쿼리하려는 downstream 의도를 이해하고, 입력 쿼리에 대해 <em>구조화된 테이블 스키마</em>에 올바른 관련성 점수를 할당합니다.</p><p>아래에서 볼 수 있듯이, reranker는 LLM이 자연어 쿼리로부터 SQL 쿼리를 생성하기 전에 가장 관련성 높은 테이블을 검색합니다:</p><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://jina-ai-gmbh.ghost.io/content/images/2024/06/Diagram--Blog-images--4-.png\" class=\"kg-image\" alt=\"Schematic of an agentic RAG retrieving data using a SQL query, and providing it as additional context to an LLM   \" loading=\"lazy\" width=\"1600\" height=\"900\" srcset=\"https://jina-ai-gmbh.ghost.io/content/images/size/w600/2024/06/Diagram--Blog-images--4-.png 600w, https://jina-ai-gmbh.ghost.io/content/images/size/w1000/2024/06/Diagram--Blog-images--4-.png 1000w, https://jina-ai-gmbh.ghost.io/content/images/2024/06/Diagram--Blog-images--4-.png 1600w\" sizes=\"(min-width: 720px) 720px\"><figcaption><span style=\"white-space: pre-wrap;\">SQL 쿼리를 사용하여 데이터를 검색하고 LLM에 추가 컨텍스트로 제공하는 agentic RAG의 도식</span></figcaption></figure><p>저희는 <a href=\"https://huggingface.co/datasets/NumbersStation/NSText2SQL?ref=jina-ai-gmbh.ghost.io\">NSText2SQL</a> 데이터셋 벤치마크를 사용하여 쿼리 인식 기능을 평가했습니다. 원본 데이터셋의 \"instruction\" 열에서 자연어로 작성된 지시사항과 해당하는 테이블 스키마를 추출했습니다.</p><p>아래 그래프는 <em>recall@3</em>를 사용하여 reranker 모델이 자연어 쿼리에 해당하는 올바른 테이블 스키마를 순위 매기는데 얼마나 성공적인지 비교합니다.</p><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://jina-ai-gmbh.ghost.io/content/images/2024/06/image_NSText2SQL.png\" class=\"kg-image\" alt=\"Recall@3 scores reported for different reranking models for NSText2SQL dataset\" loading=\"lazy\" width=\"1800\" height=\"1013\" srcset=\"https://jina-ai-gmbh.ghost.io/content/images/size/w600/2024/06/image_NSText2SQL.png 600w, https://jina-ai-gmbh.ghost.io/content/images/size/w1000/2024/06/image_NSText2SQL.png 1000w, https://jina-ai-gmbh.ghost.io/content/images/size/w1600/2024/06/image_NSText2SQL.png 1600w, https://jina-ai-gmbh.ghost.io/content/images/2024/06/image_NSText2SQL.png 1800w\" sizes=\"(min-width: 720px) 720px\"><figcaption><span style=\"white-space: pre-wrap;\">NSText2SQL 데이터셋에 대한 다양한 reranking 모델의 Recall@3 점수</span></figcaption></figure><h2 id=\"jina-reranker-v2-on-function-calling\">함수 호출에서의 Jina Reranker v2</h2><p>SQL 테이블을 쿼리하는 것처럼, agentic RAG를 사용하여 외부 도구를 호출할 수 있습니다. 이를 고려하여 Jina Reranker v2에 함수 호출을 통합했으며, 외부 함수에 대한 의도를 이해하고 그에 따라 함수 명세에 관련성 점수를 할당할 수 있습니다.</p><p>아래 도식은 LLM이 Reranker를 사용하여 함수 호출 기능을 개선하고, 궁극적으로 agentic AI 사용자 경험을 향상시키는 방법을 (예시와 함께) 설명합니다.</p><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://jina-ai-gmbh.ghost.io/content/images/2024/06/Diagram--Blog-images--5-.png\" class=\"kg-image\" alt=\"Schematic of an agentic RAG calling an external function, and providing its output as additional context to an LLM   \" loading=\"lazy\" width=\"1600\" height=\"900\" srcset=\"https://jina-ai-gmbh.ghost.io/content/images/size/w600/2024/06/Diagram--Blog-images--5-.png 600w, https://jina-ai-gmbh.ghost.io/content/images/size/w1000/2024/06/Diagram--Blog-images--5-.png 1000w, https://jina-ai-gmbh.ghost.io/content/images/2024/06/Diagram--Blog-images--5-.png 1600w\" sizes=\"(min-width: 720px) 720px\"><figcaption><span style=\"white-space: pre-wrap;\">외부 함수를 호출하고 그 출력을 LLM에 추가 컨텍스트로 제공하는 agentic RAG의 도식</span></figcaption></figure><p>저희는 <a href=\"https://github.com/OpenBMB/ToolBench?ref=jina-ai-gmbh.ghost.io\">ToolBench</a> 벤치마크로 함수 인식 기능을 평가했습니다. 이 벤치마크는 16,000개 이상의 공개 API와 단일 및 다중 API 설정에서 이를 사용하기 위한 합성 생성된 지시사항을 수집합니다.</p><p>다음은 다른 reranker 모델과 비교한 결과(recall@3 메트릭)입니다:</p><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://jina-ai-gmbh.ghost.io/content/images/2024/06/image_ToolBench.png\" class=\"kg-image\" alt=\"Recall@3 scores reported for different reranking models for ToolBench dataset\" loading=\"lazy\" width=\"1800\" height=\"1012\" srcset=\"https://jina-ai-gmbh.ghost.io/content/images/size/w600/2024/06/image_ToolBench.png 600w, https://jina-ai-gmbh.ghost.io/content/images/size/w1000/2024/06/image_ToolBench.png 1000w, https://jina-ai-gmbh.ghost.io/content/images/size/w1600/2024/06/image_ToolBench.png 1600w, https://jina-ai-gmbh.ghost.io/content/images/2024/06/image_ToolBench.png 1800w\" sizes=\"(min-width: 720px) 720px\"><figcaption><span style=\"white-space: pre-wrap;\">ToolBench 데이터셋에 대한 다양한 리랭킹 모델의 Recall@3 점수</span></figcaption></figure><p>뒷부분에서도 보여드리겠지만, <code>jina-reranker-v2-base-multilingual</code>는 <code>bge-reranker-v2-m3</code>의 절반 크기이면서 거의 15배 빠른 속도로 거의 최신 수준의 성능을 보여줍니다.</p><h2 id=\"jina-reranker-v2-on-code-retrieval\">코드 검색에서의 Jina Reranker v2</h2><p>Jina Reranker v2는 함수 호출과 구조화된 데이터 쿼리에 대해 학습되었을 뿐만 아니라, 비슷한 크기의 경쟁 모델들과 비교해 코드 검색도 향상되었습니다. <a href=\"https://github.com/github/CodeSearchNet?ref=jina-ai-gmbh.ghost.io\">CodeSearchNet</a> 벤치마크를 사용하여 코드 검색 능력을 평가했습니다. 이 벤치마크는 <a href=\"https://peps.python.org/pep-0257/?ref=jina-ai-gmbh.ghost.io\" rel=\"noreferrer\">docstring</a> 형식과 자연어 형식의 쿼리가 결합된 것으로, 쿼리와 관련된 코드 세그먼트가 레이블링되어 있습니다.</p><p>다음은 다른 리랭커 모델들과 비교한 MRR@10 결과입니다:</p><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://jina-ai-gmbh.ghost.io/content/images/2024/06/image_CodeSearchNet--1-.png\" class=\"kg-image\" alt=\"MRR@10 scores reported for different reranking models for CodeSearchNet dataset\" loading=\"lazy\" width=\"1800\" height=\"1013\" srcset=\"https://jina-ai-gmbh.ghost.io/content/images/size/w600/2024/06/image_CodeSearchNet--1-.png 600w, https://jina-ai-gmbh.ghost.io/content/images/size/w1000/2024/06/image_CodeSearchNet--1-.png 1000w, https://jina-ai-gmbh.ghost.io/content/images/size/w1600/2024/06/image_CodeSearchNet--1-.png 1600w, https://jina-ai-gmbh.ghost.io/content/images/2024/06/image_CodeSearchNet--1-.png 1800w\" sizes=\"(min-width: 720px) 720px\"><figcaption><span style=\"white-space: pre-wrap;\">CodeSearchNet 데이터셋에 대한 다양한 리랭킹 모델의 MRR@10 점수</span></figcaption></figure><h2 id=\"ultra-fast-inference-with-jina-reranker-v2\">Jina Reranker v2의 초고속 추론</h2><p>교차 인코더 스타일의 신경망 리랭커는 검색된 문서의 관련성을 예측하는 데 뛰어나지만, 임베딩 모델보다 추론 속도가 느립니다. 즉, 쿼리를 n개의 문서와 일대일로 비교하는 것은 대부분의 벡터 데이터베이스에서 HNSW나 다른 빠른 검색 방법보다 훨씬 느립니다. Jina Reranker v2로 이러한 속도 문제를 해결했습니다.</p><ul><li>우리의 독특한 학습 인사이트(다음 섹션에서 설명)로 278M 파라미터만으로 최신 수준의 정확도를 달성했습니다. 567M 파라미터를 가진 <code>bge-reranker-v2-m3</code>와 비교하면, Jina Reranker v2는 단지 절반의 크기입니다. 이러한 축소가 처리량(50ms당 처리되는 문서)이 개선된 첫 번째 이유입니다.</li><li>비슷한 모델 크기에서도, Jina Reranker v2는 이전의 최신 Jina Reranker v1 영어 모델보다 6배 높은 처리량을 자랑합니다. 이는 트랜스포머 기반 모델의 어텐션 레이어에서 메모리와 연산 최적화를 도입한 <a href=\"https://github.com/Dao-AILab/flash-attention?ref=jina-ai-gmbh.ghost.io\">Flash Attention 2</a>를 구현했기 때문입니다.</li></ul><p>위 단계들의 결과로 나타난 Jina Reranker v2의 처리량 성능을 보실 수 있습니다:</p><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://jina-ai-gmbh.ghost.io/content/images/2024/06/image_RTX-4090-Throughput.png\" class=\"kg-image\" alt=\"Throughput (documents retrieved in 50ms) scores reported for different reranking models on an RTX 4090 GPU\" loading=\"lazy\" width=\"1800\" height=\"1013\" srcset=\"https://jina-ai-gmbh.ghost.io/content/images/size/w600/2024/06/image_RTX-4090-Throughput.png 600w, https://jina-ai-gmbh.ghost.io/content/images/size/w1000/2024/06/image_RTX-4090-Throughput.png 1000w, https://jina-ai-gmbh.ghost.io/content/images/size/w1600/2024/06/image_RTX-4090-Throughput.png 1600w, https://jina-ai-gmbh.ghost.io/content/images/2024/06/image_RTX-4090-Throughput.png 1800w\" sizes=\"(min-width: 720px) 720px\"><figcaption><span style=\"white-space: pre-wrap;\">RTX 4090 GPU에서 다양한 리랭킹 모델의 처리량(50ms당 검색된 문서) 점수</span></figcaption></figure><h2 id=\"how-we-trained-jina-reranker-v2\">Jina Reranker v2 학습 방법</h2><p><code>jina-reranker-v2-base-multilingual</code>를 4단계로 학습했습니다:</p><ol><li><strong>영어 데이터로 준비:</strong> 영어 데이터만을 사용하여 백본 모델의 첫 번째 버전을 학습했습니다. 여기에는 쌍(대조 학습) 또는 삼중항(쿼리, 올바른 응답, 잘못된 응답), 쿼리-함수 스키마 쌍, 쿼리-테이블 스키마 쌍이 포함됩니다.</li><li><strong>교차 언어 데이터 추가:</strong> 다음 단계에서는 백본 모델의 검색 작업에 대한 다국어 능력을 향상시키기 위해 교차 언어 쌍과 삼중항 데이터셋을 추가했습니다.</li><li><strong>모든 다국어 데이터 추가:</strong> 이 단계에서는 모델이 가능한 한 많은 데이터를 보도록 하는 데 중점을 두었습니다. 100개 이상의 저자원 및 고자원 언어로 된 모든 쌍과 삼중항 데이터셋으로 두 번째 단계의 모델 체크포인트를 미세 조정했습니다.</li><li><strong>마이닝된 어려운 네거티브로 미세 조정:</strong> 세 번째 단계의 리랭킹 성능을 관찰한 후, 기존 쿼리에 대한 어려운 네거티브의 예시를 더 많이 포함한 삼중항 데이터를 추가하여 모델을 미세 조정했습니다 - 겉보기에는 쿼리와 관련이 있어 보이지만 실제로는 잘못된 응답들입니다.</li></ol><p>이 4단계 학습 접근법은 가능한 한 일찍 학습 과정에 함수와 테이블 스키마를 포함시키면 모델이 이러한 사용 사례를 특별히 인식하고 언어 구조보다는 후보 문서의 의미론에 더 집중하는 것을 배울 수 있다는 인사이트를 바탕으로 했습니다.</p><h2 id=\"jina-reranker-v2-in-practice\">실제 Jina Reranker v2 사용</h2><h3 id=\"via-our-reranker-api\">Reranker API를 통한 사용</h3><p>Jina Reranker v2를 시작하는 가장 빠르고 쉬운 방법은 <a href=\"https://jina.ai/reranker/?ref=jina-ai-gmbh.ghost.io\">Jina Reranker의 API</a>를 사용하는 것입니다.</p><figure class=\"kg-card kg-bookmark-card\"><a class=\"kg-bookmark-container\" href=\"https://jina.ai/reranker?ref=jina-ai-gmbh.ghost.io\"><div class=\"kg-bookmark-content\"><div class=\"kg-bookmark-title\">Reranker API</div><div class=\"kg-bookmark-description\">검색 관련성과 RAG 정확도를 쉽게 최대화하세요.</div><div class=\"kg-bookmark-metadata\"><img class=\"kg-bookmark-icon\" src=\"https://jina.ai/icons/favicon-128x128.png\" alt=\"\"></div></div><div class=\"kg-bookmark-thumbnail\"><img src=\"https://jina.ai/banner-reranker-api.png\" alt=\"\"></div></a></figure><p>이 페이지의 API 섹션으로 이동하여 원하는 프로그래밍 언어로 <code>jina-reranker-v2-base-multilingual</code>를 통합하세요.</p><h4 id=\"example-1-ranking-function-calls\">예시 1: 함수 호출 랭킹</h4><p>가장 관련성 높은 외부 함수/도구를 랭킹하려면 쿼리와 문서(함수 스키마)를 아래와 같이 포맷하세요:</p><figure class=\"kg-card kg-code-card\"><pre><code class=\"language-bash\">curl -X 'POST' \\\n  'https://api.jina.ai/v1/rerank' \\\n  -H 'accept: application/json' \\\n  -H 'Authorization: Bearer &lt;YOUR JINA AI TOKEN HERE&gt;' \\\n  -H 'Content-Type: application/json' \\\n  -d '{\n  \"model\": \"jina-reranker-v2-base-multilingual\",\n  \"query\": \"I am planning a road trip from Berlin to Munich in my Volkswagen VII. Can you calculate the carbon footprint of this trip?\",\n  \"documents\": [\n    \"{'\\''Name'\\'': '\\''getWeather'\\'', '\\''Specification'\\'': '\\''Provides current weather information for a specified city'\\'', '\\''spec'\\'': '\\''https://api.openweathermap.org/data/2.5/weather?q={city}&amp;appid={API_KEY}'\\'', '\\''example'\\'': '\\''https://api.openweathermap.org/data/2.5/weather?q=Berlin&amp;appid=YOUR_API_KEY'\\''}\",\n    \"{'\\''Name'\\'': '\\''calculateDistance'\\'', '\\''Specification'\\'': '\\''Calculates the driving distance and time between multiple locations'\\'', '\\''spec'\\'': '\\''https://maps.googleapis.com/maps/api/distancematrix/json?origins={startCity}&amp;destinations={endCity}&amp;key={API_KEY}'\\'', '\\''example'\\'': '\\''https://maps.googleapis.com/maps/api/distancematrix/json?origins=Berlin&amp;destinations=Munich&amp;key=YOUR_API_KEY'\\''}\",\n    \"{'\\''Name'\\'': '\\''calculateCarbonFootprint'\\'', '\\''Specification'\\'': '\\''Estimates the carbon footprint for various activities, including transportation'\\'', '\\''spec'\\'': '\\''https://www.carboninterface.com/api/v1/estimates'\\'', '\\''example'\\'': '\\''{type: vehicle, distance: distance, vehicle_model_id: car}'\\''}\"\n  ]\n}'</code></pre><figcaption><p><span style=\"white-space: pre-wrap;\">&lt;YOUR JINA AI TOKEN HERE&gt;를 개인 Reranker API 토큰으로 교체하는 것을 잊지 마세요</span></p></figcaption></figure><p>다음과 같은 결과를 얻게 됩니다:</p><pre><code class=\"language-JSON\">{\n  \"model\": \"jina-reranker-v2-base-multilingual\",\n  \"usage\": {\n    \"total_tokens\": 383,\n    \"prompt_tokens\": 383\n  },\n  \"results\": [\n    {\n      \"index\": 2,\n      \"document\": {\n        \"text\": \"{'Name': 'calculateCarbonFootprint', 'Specification': 'Estimates the carbon footprint for various activities, including transportation', 'spec': 'https://www.carboninterface.com/api/v1/estimates', 'example': '{type: vehicle, distance: distance, vehicle_model_id: car}'}\"\n      },\n      \"relevance_score\": 0.5422876477241516\n    },\n    {\n      \"index\": 1,\n      \"document\": {\n        \"text\": \"{'Name': 'calculateDistance', 'Specification': 'Calculates the driving distance and time between multiple locations', 'spec': 'https://maps.googleapis.com/maps/api/distancematrix/json?origins={startCity}&amp;destinations={endCity}&amp;key={API_KEY}', 'example': 'https://maps.googleapis.com/maps/api/distancematrix/json?origins=Berlin&amp;destinations=Munich&amp;key=YOUR_API_KEY'}\"\n      },\n      \"relevance_score\": 0.23283305764198303\n    },\n    {\n      \"index\": 0,\n      \"document\": {\n        \"text\": \"{'Name': 'getWeather', 'Specification': 'Provides current weather information for a specified city', 'spec': 'https://api.openweathermap.org/data/2.5/weather?q={city}&amp;appid={API_KEY}', 'example': 'https://api.openweathermap.org/data/2.5/weather?q=Berlin&amp;appid=YOUR_API_KEY'}\"\n      },\n      \"relevance_score\": 0.05033063143491745\n    }\n  ]\n}</code></pre><h4 id=\"example-2-ranking-sql-queries\">예제 2: SQL 쿼리 순위 매기기</h4><p>마찬가지로 쿼리에 대한 구조화된 테이블 스키마의 관련성 점수를 검색하려면 다음 예제 API 호출을 사용할 수 있습니다:</p><pre><code class=\"language-bash\">curl -X 'POST' \\\n  'https://api.jina.ai/v1/rerank' \\\n  -H 'accept: application/json' \\\n  -H 'Authorization: Bearer &lt;YOUR JINA AI TOKEN HERE&gt;' \\\n  -H 'Content-Type: application/json' \\\n  -d '{\n  \"model\": \"jina-reranker-v2-base-multilingual\",\n  \"query\": \"which customers bought a summer outfit in the past 7 days?\",\n  \"documents\": [\n    \"CREATE TABLE customer_personal_info (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50));\",\n    \"CREATE TABLE supplier_company_info (supplier_id INT PRIMARY KEY, company_name VARCHAR(100), contact_name VARCHAR(50));\",\n    \"CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, purchase_date DATE, FOREIGN KEY (customer_id) REFERENCES customer_personal_info(customer_id), product_id INT, FOREIGN KEY (product_id) REFERENCES products(product_id));\",\n    \"CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), season VARCHAR(50), supplier_id INT, FOREIGN KEY (supplier_id) REFERENCES supplier_company_info(supplier_id));\"\n  ]\n}'</code></pre><p>예상되는 응답은 다음과 같습니다:</p><pre><code class=\"language-JSON\">{\n  \"model\": \"jina-reranker-v2-base-multilingual\",\n  \"usage\": {\n    \"total_tokens\": 253,\n    \"prompt_tokens\": 253\n  },\n  \"results\": [\n    {\n      \"index\": 2,\n      \"document\": {\n        \"text\": \"CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, purchase_date DATE, FOREIGN KEY (customer_id) REFERENCES customer_personal_info(customer_id), product_id INT, FOREIGN KEY (product_id) REFERENCES products(product_id));\"\n      },\n      \"relevance_score\": 0.2789437472820282\n    },\n    {\n      \"index\": 0,\n      \"document\": {\n        \"text\": \"CREATE TABLE customer_personal_info (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50));\"\n      },\n      \"relevance_score\": 0.06477169692516327\n    },\n    {\n      \"index\": 3,\n      \"document\": {\n        \"text\": \"CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), season VARCHAR(50), supplier_id INT, FOREIGN KEY (supplier_id) REFERENCES supplier_company_info(supplier_id));\"\n      },\n      \"relevance_score\": 0.027742892503738403\n    },\n    {\n      \"index\": 1,\n      \"document\": {\n        \"text\": \"CREATE TABLE supplier_company_info (supplier_id INT PRIMARY KEY, company_name VARCHAR(100), contact_name VARCHAR(50));\"\n      },\n      \"relevance_score\": 0.025516605004668236\n    }\n  ]\n}</code></pre><h3 id=\"via-ragllm-frameworks\">RAG/LLM 프레임워크를 통한 사용</h3><p>Jina Reranker의 기존 LLM 및 RAG 오케스트레이션 프레임워크와의 통합은 모델명 <code>jina-reranker-v2-base-multilingual</code>을 사용하여 바로 작동해야 합니다. 애플리케이션에서 Jina Reranker v2를 통합하는 방법에 대해 자세히 알아보려면 각각의 문서 페이지를 참조하세요.</p><ul><li><a href=\"https://haystack.deepset.ai/integrations/jina?ref=jina-ai-gmbh.ghost.io\"><strong>Haystack</strong></a><strong> by deepset</strong>: Jina Reranker v2는 Haystack의 <a href=\"https://docs.haystack.deepset.ai/docs/jinaranker?ref=jina-ai-gmbh.ghost.io\">JinaRanker</a> 클래스와 함께 사용할 수 있습니다:</li></ul><pre><code class=\"language-Python\">from haystack import Document\nfrom haystack_integrations.components.rankers.jina import JinaRanker\n\ndocs = [Document(content=\"Paris\"), Document(content=\"Berlin\")]\n\nranker = JinaRanker(model=\"jina-reranker-v2-base-multilingual\", api_key=\"&lt;YOUR JINA AI API KEY HERE&gt;\")\n\nranker.run(query=\"City in France\", documents=docs, top_k=1)\n</code></pre><ul><li><strong>LlamaIndex</strong>: Jina Reranker v2는 다음과 같이 초기화하여 <a href=\"https://docs.llamaindex.ai/en/stable/examples/node_postprocessor/JinaRerank/?ref=jina-ai-gmbh.ghost.io\">JinaRerank</a> <em>노드 후처리</em> 모듈로 사용할 수 있습니다:</li></ul><pre><code class=\"language-Python\">import os\nfrom llama_index.postprocessor.jinaai_rerank import JinaRerank\n\njina_rerank = JinaRerank(model=\"jina-reranker-v2-base-multilingual\", api_key=\"&lt;YOUR JINA AI API KEY HERE&gt;\", top_n=1)\n</code></pre><ul><li><strong>Langchain:</strong> 기존 애플리케이션에서 Jina Reranker 2를 사용하려면 <a href=\"https://python.langchain.com/v0.2/docs/integrations/document_transformers/jina_rerank/?ref=jina-ai-gmbh.ghost.io#doing-reranking-with-jinarerank\">Jina Rerank 통합</a>을 사용하세요. JinaRerank 모듈은 올바른 모델 이름으로 초기화해야 합니다:</li></ul><pre><code class=\"language-Python\">from langchain_community.document_compressors import JinaRerank\n\nreranker = JinaRerank(model=\"jina-reranker-v2-base-multilingual\", jina_api_key=\"&lt;YOUR JINA AI API KEY HERE&gt;\")\n</code></pre><h3 id=\"via-huggingface\">HuggingFace를 통한 사용</h3><p>연구 및 평가 목적으로 <code>jina-reranker-v2-base-multilingual</code> 모델에 대한 접근을 Hugging Face에서 CC-BY-NC-4.0 라이선스로 공개하고 있습니다.</p><figure class=\"kg-card kg-bookmark-card\"><a class=\"kg-bookmark-container\" href=\"https://huggingface.co/jinaai/jina-reranker-v2-base-multilingual?ref=jina-ai-gmbh.ghost.io\"><div class=\"kg-bookmark-content\"><div class=\"kg-bookmark-title\">jinaai/jina-reranker-v2-base-multilingual · Hugging Face</div><div class=\"kg-bookmark-description\">우리는 오픈 소스와 오픈 사이언스를 통해 인공지능을 발전시키고 민주화하는 여정을 걷고 있습니다.</div><div class=\"kg-bookmark-metadata\"><img class=\"kg-bookmark-icon\" src=\"https://huggingface.co/favicon.ico\" alt=\"\"></div></div><div class=\"kg-bookmark-thumbnail\"><img src=\"https://cdn-thumbnails.huggingface.co/social-thumbnails/models/jinaai/jina-reranker-v2-base-multilingual.png\" alt=\"\"></div></a></figure><p>Hugging Face에서 모델을 다운로드하고 실행하려면 <code>transformers</code>와 <code>einops</code> 라이브러리를 설치하세요:</p><pre><code class=\"language-bash\">pip install transformers einops\npip install ninja\npip install flash-attn --no-build-isolation\n</code></pre><p><a href=\"https://huggingface.co/settings/tokens?ref=jina-ai-gmbh.ghost.io\">Hugging Face 액세스 토큰</a>을 사용하여 Hugging Face CLI 로그인을 통해 Hugging Face 계정에 로그인하세요:</p><pre><code class=\"language-bash\">huggingface-cli login --token &lt;\"HF-Access-Token\"&gt;\n</code></pre><p>사전 학습된 모델을 다운로드하세요:</p><pre><code class=\"language-Python\">from transformers import AutoModelForSequenceClassification\n\nmodel = AutoModelForSequenceClassification.from_pretrained(\n    'jinaai/jina-reranker-v2-base-multilingual',\n    torch_dtype=\"auto\",\n    trust_remote_code=True,\n    \n)\n\nmodel.to('cuda') # GPU가 없는 경우 'cpu' 사용\n\nmodel.eval()\n</code></pre><p>쿼리와 재순위를 매길 문서를 정의하세요:</p><pre><code class=\"language-Python\">query = \"Organic skincare products for sensitive skin\"\n\ndocuments = [\n    \"Organic skincare for sensitive skin with aloe vera and chamomile.\",\n    \"New makeup trends focus on bold colors and innovative techniques\",\n    \"Bio-Hautpflege für empfindliche Haut mit Aloe Vera und Kamille\",\n    \"Neue Make-up-Trends setzen auf kräftige Farben und innovative Techniken\",\n    \"Cuidado de la piel orgánico para piel sensible con aloe vera y manzanilla\",\n    \"Las nuevas tendencias de maquillaje se centran en colores vivos y técnicas innovadoras\",\n    \"针对敏感肌专门设计的天然有机护肤产品\",\n    \"新的化妆趋势注重鲜艳的颜色和创新的技巧\",\n    \"敏感肌のために特別に設計された天然有機スキンケア製品\",\n    \"新しいメイクのトレンドは鮮やかな色と革新的な技術に焦点を当てています\",\n]\n</code></pre><p>문장 쌍을 구성하고 관련성 점수를 계산하세요:</p><pre><code class=\"language-Python\">sentence_pairs = [[query, doc] for doc in documents]\n\nscores = model.compute_score(sentence_pairs, max_length=1024)\n</code></pre><p>점수는 부동 소수점 숫자의 리스트가 되며, 각 숫자는 해당 문서와 쿼리의 관련성 점수를 나타냅니다. 점수가 높을수록 관련성이 높습니다.</p><p>또는 <code>rerank</code> 함수를 사용하여 <code>max_query_length</code>를 기반으로 쿼리와 문서를 자동으로 청킹하여 큰 텍스트의 순위를 재조정할 수 있습니다</p><code>max_length</code>를 사용하여 각 청크를 개별적으로 점수화합니다. 각 청크의 점수는 최종적인 재순위 결과를 생성하기 위해 결합됩니다:</p><pre><code class=\"language-Python\">results = model.rerank(\n    query,\n    documents,\n    max_query_length=512,\n    max_length=1024,\n    top_n=3\n)\n</code></pre><p>이 함수는 각 문서의 관련성 점수뿐만 아니라 해당 문서의 내용과 원본 문서 목록에서의 위치도 반환합니다.</p><h3 id=\"via-private-cloud-deployment\">프라이빗 클라우드 배포를 통한 방법</h3><p>Jina Reranker v2의 AWS 및 Azure 계정용 프라이빗 배포를 위한 사전 구축된 패키지는 곧 <a href=\"https://aws.amazon.com/marketplace/seller-profile?id=seller-stch2ludm6vgy&ref=jina-ai-gmbh.ghost.io\" rel=\"noreferrer\">AWS Marketplace</a>와 <a href=\"https://azuremarketplace.microsoft.com/en-us/marketplace/apps?search=jina+ai&page=1&filters=partners&ref=jina-ai-gmbh.ghost.io\" rel=\"noreferrer\">Azure Marketplace</a>의 판매자 페이지에서 각각 찾아볼 수 있습니다.</p><div class=\"kg-card kg-callout-card kg-callout-card-blue\"><div class=\"kg-callout-emoji\">💡</div><div class=\"kg-callout-text\">Jina AI의 Search Foundation을 기반으로 한 귀사의 사용 사례에 맞춤화된 솔루션을 원하시면 <a href=\"https://jina.ai/contact-sales?ref=jina-ai-gmbh.ghost.io\">연락 페이지</a>를 통해 문의해 주시기 바랍니다.</div></div><h2 id=\"key-takeaways-of-jina-reranker-v2\">Jina Reranker v2의 주요 특징</h2><p>Jina Reranker v2는 검색 기반의 중요한 기능 확장을 나타냅니다:</p><ul><li>크로스 인코딩을 사용한 최신 검색 기술로 다양한 새로운 응용 분야를 개척합니다.</li><li>향상된 다국어 및 교차 언어 기능으로 사용 사례에서 언어 장벽을 제거합니다.</li><li>함수 호출에 대한 최고 수준의 지원과 구조화된 데이터 쿼리에 대한 인식으로 에이전트 RAG 기능을 한 단계 더 정밀하게 만듭니다.</li><li>컴퓨터 코드와 컴퓨터 형식 데이터의 향상된 검색으로 텍스트 정보 검색을 넘어설 수 있습니다.</li><li>훨씬 더 빠른 문서 처리량으로 검색 방법에 관계없이 이제 더 많은 검색된 문서를 더 빠르게 재순위화할 수 있으며, 세밀한 관련성 계산의 대부분을 <code>jina-reranker-v2-base-multilingual</code>에 맡길 수 있습니다.</li></ul><p>RAG 시스템은 Reranker v2를 통해 훨씬 더 정밀해져, 기존 정보 관리 솔루션이 더 많고 더 나은 실행 가능한 결과를 생산하도록 돕습니다. 교차 언어 지원으로 다국적 및 다국어 기업에서 합리적인 가격에 사용하기 쉬운 API를 통해 이 모든 기능을 직접 사용할 수 있습니다.</p><p>실제 사용 사례에서 도출된 벤치마크로 테스트해보면, Jina Reranker v2가 실제 비즈니스 모델과 관련된 작업에서 최신 성능을 하나의 AI 모델로 유지하여 비용을 절감하고 기술 스택을 단순화하는 것을 직접 확인할 수 있습니다.</p>",
  "comment_id": "6679720d1954df000135bc79",
  "feature_image": "https://jina-ai-gmbh.ghost.io/content/images/2024/06/Heading--39-.png",
  "featured": true,
  "visibility": "public",
  "created_at": "2024-06-24T15:18:05.000+02:00",
  "updated_at": "2024-07-08T21:07:29.000+02:00",
  "published_at": "2024-06-25T14:15:37.000+02:00",
  "custom_excerpt": "Jina Reranker v2 is the best-in-class reranker built for Agentic RAG. It features function-calling support, multilingual retrieval for over 100 languages, code search capabilities, and offers a 6x speedup over v1.",
  "codeinjection_head": null,
  "codeinjection_foot": null,
  "custom_template": null,
  "canonical_url": null,
  "authors": [
    {
      "id": "641c23a2f4d50d003d590474",
      "name": "Saahil Ognawala",
      "slug": "saahil",
      "profile_image": "https://jina-ai-gmbh.ghost.io/content/images/2023/03/profile-option-2.jpg",
      "cover_image": null,
      "bio": "Senior Product Manager at Jina AI",
      "website": "http://www.saahilognawala.com/",
      "location": "Munich, DE",
      "facebook": null,
      "twitter": "@saahil",
      "meta_title": null,
      "meta_description": null,
      "url": "https://jina-ai-gmbh.ghost.io/author/saahil/"
    },
    {
      "id": "6386c03c180dcb003d549f98",
      "name": "Jie Fu",
      "slug": "jie",
      "profile_image": "https://jina-ai-gmbh.ghost.io/content/images/2022/11/--.jpeg",
      "cover_image": null,
      "bio": "Senior software engineer in Jina, and one of the developers for CLIP-as-Service.",
      "website": null,
      "location": null,
      "facebook": null,
      "twitter": null,
      "meta_title": null,
      "meta_description": null,
      "url": "https://jina-ai-gmbh.ghost.io/author/jie/"
    },
    {
      "id": "6620de1e7f510100015da95e",
      "name": "Yuting Zhang",
      "slug": "yuting",
      "profile_image": "https://jina-ai-gmbh.ghost.io/content/images/2024/04/Yuting-Portrait-1.jpeg",
      "cover_image": null,
      "bio": null,
      "website": null,
      "location": null,
      "facebook": null,
      "twitter": null,
      "meta_title": null,
      "meta_description": null,
      "url": "https://jina-ai-gmbh.ghost.io/author/yuting/"
    },
    {
      "id": "632ae7353e4e55003d52598e",
      "name": "Scott Martens",
      "slug": "scott",
      "profile_image": "https://jina-ai-gmbh.ghost.io/content/images/2022/11/photo-of-me-cropped.jpg",
      "cover_image": "https://jina-ai-gmbh.ghost.io/content/images/2022/11/shanshui-ernie-crop.png",
      "bio": "A rogue AI created by Canada's Weapon X program.\n\nContent Creator @ Jina AI",
      "website": "https://jina.ai",
      "location": "Berlin",
      "facebook": null,
      "twitter": null,
      "meta_title": null,
      "meta_description": null,
      "url": "https://jina-ai-gmbh.ghost.io/author/scott/"
    }
  ],
  "tags": [
    {
      "id": "655b2782bb728c000101bed7",
      "name": "Press",
      "slug": "press",
      "description": null,
      "feature_image": null,
      "visibility": "public",
      "og_image": null,
      "og_title": null,
      "og_description": null,
      "twitter_image": null,
      "twitter_title": null,
      "twitter_description": null,
      "meta_title": null,
      "meta_description": null,
      "codeinjection_head": null,
      "codeinjection_foot": null,
      "canonical_url": null,
      "accent_color": null,
      "url": "https://jina-ai-gmbh.ghost.io/tag/press/"
    }
  ],
  "primary_author": {
    "id": "641c23a2f4d50d003d590474",
    "name": "Saahil Ognawala",
    "slug": "saahil",
    "profile_image": "https://jina-ai-gmbh.ghost.io/content/images/2023/03/profile-option-2.jpg",
    "cover_image": null,
    "bio": "Senior Product Manager at Jina AI",
    "website": "http://www.saahilognawala.com/",
    "location": "Munich, DE",
    "facebook": null,
    "twitter": "@saahil",
    "meta_title": null,
    "meta_description": null,
    "url": "https://jina-ai-gmbh.ghost.io/author/saahil/"
  },
  "primary_tag": {
    "id": "655b2782bb728c000101bed7",
    "name": "Press",
    "slug": "press",
    "description": null,
    "feature_image": null,
    "visibility": "public",
    "og_image": null,
    "og_title": null,
    "og_description": null,
    "twitter_image": null,
    "twitter_title": null,
    "twitter_description": null,
    "meta_title": null,
    "meta_description": null,
    "codeinjection_head": null,
    "codeinjection_foot": null,
    "canonical_url": null,
    "accent_color": null,
    "url": "https://jina-ai-gmbh.ghost.io/tag/press/"
  },
  "url": "https://jina-ai-gmbh.ghost.io/podcast/jina-reranker-v2-for-agentic-rag-ultra-fast-multilingual-function-calling-and-code-search/",
  "excerpt": "Jina Reranker v2는 Agentic RAG를 위해 만들어진 최고 수준의 리랭커입니다. 함수 호출 지원, 100개 이상 언어에 대한 다국어 검색 기능, 코드 검색 기능을 제공하며, v1보다 6배 더 빠른 속도를 제공합니다.",
  "reading_time": 15,
  "access": true,
  "comments": false,
  "og_image": null,
  "og_title": null,
  "og_description": null,
  "twitter_image": null,
  "twitter_title": null,
  "twitter_description": null,
  "meta_title": null,
  "meta_description": null,
  "email_subject": null,
  "frontmatter": null,
  "feature_image_alt": "Black background with word 'RERANKER' in white at left and a stylized white question mark design at the right.",
  "feature_image_caption": null
}
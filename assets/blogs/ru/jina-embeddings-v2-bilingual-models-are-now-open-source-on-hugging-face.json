{
  "slug": "jina-embeddings-v2-bilingual-models-are-now-open-source-on-hugging-face",
  "id": "65b3adb510ff9f0001c50c4d",
  "uuid": "b082269a-4358-4a82-a70c-02da2ebcb6d3",
  "title": "Двуязычные модели Jina Embeddings v2 теперь в открытом доступе на Hugging Face",
  "html": "<p>Jina AI опубликовала свои передовые модели двуязычных эмбеддингов с открытым исходным кодом для языковых пар <a href=\"https://jina.ai/news/ich-bin-ein-berliner-german-english-bilingual-embeddings-with-8k-token-length/?ref=jina-ai-gmbh.ghost.io\">немецкий-английский</a> и <a href=\"https://jina.ai/news/8k-token-length-bilingual-embeddings-break-language-barriers-in-chinese-and-english/?ref=jina-ai-gmbh.ghost.io\">китайский-английский</a> через Hugging Face.</p><figure class=\"kg-card kg-bookmark-card\"><a class=\"kg-bookmark-container\" href=\"https://jina.ai/news/ich-bin-ein-berliner-german-english-bilingual-embeddings-with-8k-token-length/?ref=jina-ai-gmbh.ghost.io\"><div class=\"kg-bookmark-content\"><div class=\"kg-bookmark-title\">Ich bin ein Berliner: German-English Bilingual Embeddings with 8K Token Length</div><div class=\"kg-bookmark-description\">Jina AI introduces a German/English bilingual embedding model, featuring an extensive 8,192-token length, specifically designed to support German businesses thriving in the U.S. market.</div><div class=\"kg-bookmark-metadata\"><img class=\"kg-bookmark-icon\" src=\"https://jina.ai/icons/favicon-128x128.png\" alt=\"\"><span class=\"kg-bookmark-publisher\">GitHub</span></div></div><div class=\"kg-bookmark-thumbnail\"><img src=\"https://jina-ai-gmbh.ghost.io/content/images/2024/01/Explore-image-storytelling-beyond-pixels--33-.png\" alt=\"\"></div></a></figure><figure class=\"kg-card kg-bookmark-card\"><a class=\"kg-bookmark-container\" href=\"https://jina.ai/news/8k-token-length-bilingual-embeddings-break-language-barriers-in-chinese-and-english/?ref=jina-ai-gmbh.ghost.io\"><div class=\"kg-bookmark-content\"><div class=\"kg-bookmark-title\">8K Token-Length Bilingual Embeddings Break Language Barriers in Chinese and English</div><div class=\"kg-bookmark-description\">The first bilingual Chinese-English embedding model with 8192 token-length.</div><div class=\"kg-bookmark-metadata\"><img class=\"kg-bookmark-icon\" src=\"https://jina.ai/icons/favicon-128x128.png\" alt=\"\"><span class=\"kg-bookmark-publisher\">Discord</span></div></div><div class=\"kg-bookmark-thumbnail\"><img src=\"https://jina-ai-gmbh.ghost.io/content/images/2024/01/jina-embeddings-v2-base-zh.png\" alt=\"\"></div></a></figure><p>В этом руководстве мы рассмотрим минимальную установку и использование, которые охватят:</p><ol><li>Загрузку моделей Jina Embedding с Hugging Face.</li><li>Использование моделей для получения кодировок текстов на немецком и английском языках.</li><li>Создание простейшей поисковой системы на основе эмбеддингов для межъязыковых запросов.</li></ol><p>Мы покажем вам, как использовать Jina Embeddings для написания запросов на английском языке, которые находят соответствующие тексты на немецком языке, и наоборот.</p><p>Это руководство также подходит для китайской модели. Просто следуйте инструкциям в разделе (ближе к концу) под названием <a href=\"#querying-in-chinese\" rel=\"noreferrer\"><strong>Querying in Chinese</strong></a>, чтобы получить китайско-английскую двуязычную модель и пример документа на китайском языке.</p><figure class=\"kg-card kg-bookmark-card\"><a class=\"kg-bookmark-container\" href=\"https://huggingface.co/jinaai/jina-embeddings-v2-base-de?ref=jina-ai-gmbh.ghost.io\"><div class=\"kg-bookmark-content\"><div class=\"kg-bookmark-title\">jinaai/jina-embeddings-v2-base-de · Hugging Face</div><div class=\"kg-bookmark-description\">We're on a journey to advance and democratize artificial intelligence through open source and open science.</div><div class=\"kg-bookmark-metadata\"><img class=\"kg-bookmark-icon\" src=\"https://huggingface.co/favicon.ico\" alt=\"\"></div></div><div class=\"kg-bookmark-thumbnail\"><img src=\"https://cdn-thumbnails.huggingface.co/social-thumbnails/models/jinaai/jina-embeddings-v2-base-de.png\" alt=\"\"></div></a></figure><figure class=\"kg-card kg-bookmark-card\"><a class=\"kg-bookmark-container\" href=\"https://huggingface.co/jinaai/jina-embeddings-v2-base-zh?ref=jina-ai-gmbh.ghost.io\"><div class=\"kg-bookmark-content\"><div class=\"kg-bookmark-title\">jinaai/jina-embeddings-v2-base-zh · Hugging Face</div><div class=\"kg-bookmark-description\">We're on a journey to advance and democratize artificial intelligence through open source and open science.</div><div class=\"kg-bookmark-metadata\"><img class=\"kg-bookmark-icon\" src=\"https://huggingface.co/favicon.ico\" alt=\"\"></div></div><div class=\"kg-bookmark-thumbnail\"><img src=\"https://cdn-thumbnails.huggingface.co/social-thumbnails/models/jinaai/jina-embeddings-v2-base-zh.png\" alt=\"\"></div></a></figure><h2 id=\"bilingual-embedding-models\">Двуязычные модели эмбеддингов</h2><p>Двуязычная модель эмбеддингов — это модель, которая отображает тексты на двух языках — немецком и английском в этом руководстве, китайском и английском для китайской модели — в одно пространство эмбеддингов. И делает это таким образом, что если немецкий текст и английский текст означают одно и то же, их соответствующие векторы эмбеддингов будут близки друг к другу.</p><p>Такие модели очень хорошо подходят для приложений межъязыкового поиска информации, что мы и покажем в этом руководстве, но также могут служить основой для чат-ботов на основе RAG, многоязычной категоризации текстов, обобщения, анализа тональности и любых других приложений, использующих эмбеддинги. Используя такие модели, вы можете обрабатывать тексты на обоих языках, как будто они написаны на одном языке.</p><p>Хотя многие крупные языковые модели заявляют о поддержке множества различных языков, они поддерживают не все языки одинаково хорошо. Возникает все больше вопросов о <a href=\"https://aclanthology.org/2023.findings-eacl.89/?ref=jina-ai-gmbh.ghost.io\">предвзятости, вызванной доминированием английского языка в Интернете</a> и искажением входных данных из-за <a href=\"https://arxiv.org/abs/2401.05749?ref=jina-ai-gmbh.ghost.io\">широкого распространения машинно-переведенных текстов</a>. Сосредоточившись на двух языках, мы можем лучше контролировать качество эмбеддингов для обоих, минимизируя предвзятость, создавая при этом гораздо меньшие модели с аналогичной или более высокой производительностью, чем гигантские модели, которые якобы поддерживают десятки языков.</p><p>Двуязычные модели Jina Embeddings v2 поддерживают контекст до 8192 входных токенов, что позволяет им не только поддерживать два языка, но и обрабатывать относительно большие фрагменты текста по сравнению с аналогичными моделями. Это делает их идеальными для более сложных случаев использования, где необходимо обрабатывать гораздо больше текстовой информации в эмбеддинги.</p><h2 id=\"follow-along-on-google-colab\">Следуйте руководству в Google Colab</h2><p>К этому руководству прилагается <a href=\"https://raw.githubusercontent.com/jina-ai/workshops/main/notebooks/embeddings/Bilingual_Embeddings.ipynb?ref=jina-ai-gmbh.ghost.io\">блокнот</a>, который вы можете запустить в <a href=\"https://colab.research.google.com/github/jina-ai/workshops/blob/main/notebooks/embeddings/Bilingual_Embeddings.ipynb?ref=jina-ai-gmbh.ghost.io\">Google Colab</a> или локально на своей системе.</p><figure class=\"kg-card kg-bookmark-card\"><a class=\"kg-bookmark-container\" href=\"https://colab.research.google.com/github/jina-ai/workshops/blob/feat-embeddings-notebook/notebooks/embeddings/Bilingual_Embeddings.ipynb?ref=jina-ai-gmbh.ghost.io\"><div class=\"kg-bookmark-content\"><div class=\"kg-bookmark-title\">Google Colaboratory</div><div class=\"kg-bookmark-description\"></div><div class=\"kg-bookmark-metadata\"><img class=\"kg-bookmark-icon\" src=\"https://ssl.gstatic.com/colaboratory-static/common/cce4fce8bbe78d8bdc0c77a288df9fa7/img/favicon.ico\" alt=\"\"></div></div><div class=\"kg-bookmark-thumbnail\"><img src=\"https://colab.research.google.com/img/colab_favicon_256px.png\" alt=\"\"></div></a></figure><h2 id=\"installing-the-prerequisites\">Установка необходимых компонентов</h2><p>Убедитесь, что в текущем окружении установлены необходимые библиотеки. Вам понадобится последняя версия <a href=\"https://pypi.org/project/transformers/?ref=jina-ai-gmbh.ghost.io\" rel=\"noreferrer\"><code>transformers</code></a>, поэтому даже если она уже установлена, выполните:</p><pre><code class=\"language-bash\">pip install -U transformers \n</code></pre><p>В этом руководстве мы будем использовать <a href=\"https://faiss.ai/?ref=jina-ai-gmbh.ghost.io\">библиотеку FAISS от Meta</a> для векторного поиска и сравнения. Для ее установки выполните:</p><pre><code class=\"language-bash\">pip install faiss-cpu\n</code></pre><p>Мы также будем использовать <a href=\"https://www.crummy.com/software/BeautifulSoup/?ref=jina-ai-gmbh.ghost.io\">Beautiful Soup</a> для обработки входных данных в этом руководстве, поэтому убедитесь, что она установлена:</p><pre><code class=\"language-bash\">pip install bs4\n</code></pre><h2 id=\"access-to-hugging-face\">Доступ к Hugging Face</h2><p>Вам потребуется доступ к Hugging Face, а именно аккаунт и токен доступа для загрузки моделей.</p><p><strong>Если у вас нет аккаунта на Hugging Face:</strong></p><p>Перейдите на <a href=\"https://huggingface.co/?ref=jina-ai-gmbh.ghost.io\">https://huggingface.co/</a> и вы должны увидеть кнопку \"Sign Up\" в правом верхнем углу страницы. Нажмите на нее и следуйте инструкциям для создания нового аккаунта.</p><figure class=\"kg-card kg-image-card\"><img src=\"https://jina-ai-gmbh.ghost.io/content/images/2024/01/Untitled--26-.png\" class=\"kg-image\" alt=\"Главная страница Hugging Face с выделенной кнопкой &quot;Sign Up&quot;.\" loading=\"lazy\" width=\"1088\" height=\"887\" srcset=\"https://jina-ai-gmbh.ghost.io/content/images/size/w600/2024/01/Untitled--26-.png 600w, https://jina-ai-gmbh.ghost.io/content/images/size/w1000/2024/01/Untitled--26-.png 1000w, https://jina-ai-gmbh.ghost.io/content/images/2024/01/Untitled--26-.png 1088w\" sizes=\"(min-width: 720px) 720px\"></figure><p><strong>После входа в ваш аккаунт:</strong></p><p>Следуйте инструкциям <a href=\"https://huggingface.co/docs/hub/security-tokens?ref=jina-ai-gmbh.ghost.io\">на сайте Hugging Face</a> для получения токена доступа.</p><figure class=\"kg-card kg-bookmark-card\"><a class=\"kg-bookmark-container\" href=\"https://huggingface.co/docs/hub/security-tokens?ref=jina-ai-gmbh.ghost.io\"><div class=\"kg-bookmark-content\"><div class=\"kg-bookmark-title\">User access tokens</div><div class=\"kg-bookmark-description\">We're on a journey to advance and democratize artificial intelligence through open source and open science.</div>Вам нужно скопировать этот токен в переменную окружения с именем <code>HF_TOKEN</code>. Если вы работаете в ноутбуке (например, в <a href=\"https://colab.research.google.com/?ref=jina-ai-gmbh.ghost.io\" rel=\"noreferrer\">Google Colab</a>) или устанавливаете его внутри Python-программы, используйте следующий код Python:\n\n<pre><code class=\"language-python\">import os\n\nos.environ['HF_TOKEN'] = \"&lt;your token here&gt;\"\n</code></pre>\n\nВ вашей командной оболочке используйте соответствующий синтаксис для установки переменной окружения. В <code>bash</code>:\n\n<pre><code class=\"language-bash\">export HF_TOKEN=\"&lt;your token here&gt;\"\n</code></pre>\n\n## Загрузка Jina Embeddings v2 для немецкого и английского языков\n\nПосле установки токена вы можете загрузить двуязычную модель Jina Embeddings для немецкого и английского языков, используя библиотеку <code>transformers</code>:\n\n<pre><code class=\"language-python\">from transformers import AutoModel\n\nmodel = AutoModel.from_pretrained('jinaai/jina-embeddings-v2-base-de', trust_remote_code=True)\n</code></pre>\n\nПри первом запуске это может занять несколько минут, но модель будет кэширована локально, так что не беспокойтесь, если позже перезапустите этот урок.\n\n## Загрузка данных на английском языке\n\nДля этого урока мы возьмем англоязычную версию книги <a href=\"https://open.umn.edu/opentextbooks/textbooks/pro-git-everything-you-need-to-know-about-git?ref=jina-ai-gmbh.ghost.io\"><em>Pro Git: Everything You Need to Know About Git</em></a>. Эта книга также доступна на китайском и немецком языках, которые мы используем позже в этом уроке.\n\nЧтобы скачать версию EPUB, выполните следующую команду:\n\n<pre><code class=\"language-bash\">wget -O progit-en.epub https://open.umn.edu/opentextbooks/formats/3437</code></pre>\n\nЭто копирует книгу в файл с именем <code>progit-en.epub</code> в локальную директорию.\n\n<figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://jina-ai-gmbh.ghost.io/content/images/2024/01/Untitled--27-.png\" class=\"kg-image\" alt=\"Обложка печатного издания &quot;Pro Git&quot; авторов Scott Chacon и Ben Straub.\" loading=\"lazy\" width=\"490\" height=\"647\"><figcaption><span style=\"white-space: pre-wrap;\">Обложка печатного издания.</span></figcaption></figure>\n\nАльтернативно, вы можете просто перейти по ссылке <a href=\"https://open.umn.edu/opentextbooks/formats/3437?ref=jina-ai-gmbh.ghost.io\" rel=\"noopener noreferrer\">https://open.umn.edu/opentextbooks/formats/3437</a>, чтобы скачать её на локальный диск. Она доступна под лицензией <a href=\"https://creativecommons.org/licenses/by-nc-sa/3.0/?ref=jina-ai-gmbh.ghost.io\" rel=\"noopener noreferrer\">Creative Commons Attribution Non Commercial Share Alike 3.0</a>.\n\n## Обработка данных\n\nЭтот текст имеет внутреннюю структуру иерархических разделов, которые мы можем легко найти, ища тег <code>&lt;section&gt;</code> в основных данных XHTML. Приведенный ниже код читает файл EPUB и разделяет его, используя внутреннюю структуру файла EPUB и тег <code>&lt;section&gt;</code>, затем преобразует каждый раздел в обычный текст без тегов XHTML. Он создает словарь Python, ключами которого являются строки, указывающие расположение каждого раздела в книге, а значениями - текстовое содержимое этого раздела.\n\n<pre><code class=\"language-python\">from zipfile import ZipFile\nfrom bs4 import BeautifulSoup\nimport copy\n\ndef decompose_epub(file_name):\n    \n    def to_top_text(section):\n        selected = copy.copy(section)\n\t\t\t\twhile next_section := selected.find(\"section\"):\n            next_section.decompose()\n        return selected.get_text().strip()\n\n    ret = {}\n    with ZipFile(file_name, 'r') as zip:\n        for name in zip.namelist():\n            if name.endswith(\".xhtml\"):\n                data = zip.read(name)\n                doc = BeautifulSoup(data.decode('utf-8'), 'html.parser')\n                ret[name + \":top\"] = to_top_text(doc)\n                for num, sect in enumerate(doc.find_all(\"section\")):\n                    ret[name + f\"::{num}\"] = to_top_text(sect)\n    return ret\n</code></pre>\n\nЗатем запустите функцию <code>decompose_epub</code> на загруженном ранее файле EPUB:\n\n<pre><code class=\"language-python\">book_data = decompose_epub(\"progit-en.epub\")\n</code></pre>\n\nТеперь переменная <code>book_data</code> будет содержать 583 раздела. Например:\n\n<pre><code class=\"language-python\">print(book_data['EPUB/ch01-getting-started.xhtml::12'])\n</code></pre>\n\nРезультат:\n\n<pre><code class=\"language-Text\">The Command Line\nThere are a lot of different ways to use Git.\nThere are the original command-line tools, and there are many graphical user interfaces of varying capabilities.\nFor this book, we will be using Git on the command line.\nFor one, the command line is the only place you can run all Git commands — most of the GUIs implement only a partial subset of Git functionality for simplicity.\nIf you know how to run the command-line version, you can probably also figure out how to run the GUI version, while the opposite is not necessarily true.\nAlso, while your choice of graphical client is a matter of personal taste, all users will have the command-line tools installed and available.\nSo we will expect you to know how to open Terminal in macOS or Command Prompt or PowerShell in Windows.\nIf you don't know what we're talking about here, you may need to stop and research that quickly so that you can follow the rest of the examples and descriptions in this book.\n</code></pre>\n\n## Генерация и индексирование эмбеддингов с помощью Jina Embeddings v2 и FAISS\n\nДля каждого из 583 разделов мы создадим эмбеддинг и сохраним его в индексе FAISS. Модели Jina Embeddings v2 принимают на вход до 8192 токенов, что для такой книги достаточно большой объем, поэтому нам не нужно выполнять дополнительную сегментацию текста или проверять, не содержит ли какой-либо раздел слишком много токенов. Самый длинный раздел в книге содержит примерно 12 000 символов, что для обычного английского текста должно быть значительно ниже лимита в 8 тысяч токенов.\n\nЧтобы создать один эмбеддинг, используйте метод <code>encode</code> загруженной модели. Например:\n\n<pre><code class=\"language-python\">model.encode([book_data['EPUB/ch01-getting-started.xhtml::12']])\n</code></pre>\n\nЭто возвращает массив, содержащий один 768-мерный вектор:\n\n<pre><code class=\"language-python\">array([[ 6.11135997e-02,  1.67829826e-01, -1.94809273e-01,\n         4.45595086e-02,  3.28837298e-02, -1.33441269e-01,\n         1.35364473e-01, -1.23119736e-02,  7.51526654e-02,\n        -4.25386652e-02, -6.91794455e-02,  1.03527725e-01,\n        -2.90831417e-01, -6.21018047e-03, -2.16205455e-02,\n        -2.20803712e-02,  1.50471330e-01, -3.31433356e-01,\n        -1.48741454e-01, -2.10959971e-01,  8.80039856e-02,\n\t\t\t\t....\n</code></pre>\n\nЭто и есть эмбеддинг.\n\nМодели Jina Embeddings настроены для пакетной обработки. Оптимальный размер пакета зависит от оборудования, которое вы используете. Большой размер пакета рискует исчерпать память. Маленький размер пакета займет больше времени для обработки.\n\n<div class=\"kg-card kg-callout-card kg-callout-card-blue\"><div class=\"kg-callout-emoji\">⚠️</div><div class=\"kg-callout-text\">Установка <code spellcheck=\"false\" style=\"white-space: pre-wrap;\">batch_size=5</code> работала в Google Colab в бесплатной версии без GPU и заняла <b><strong style=\"white-space: pre-wrap;\">около часа</strong></b> для генерации всего набора эмбеддингов.</div></div>\n\nВ производственной среде мы рекомендуем использовать гораздо более мощное оборудование или использовать <a href=\"https://jina.ai/embeddings/?ref=jina-ai-gmbh.ghost.io\">сервис Embedding API</a> от Jina AI. Перейдите по ссылке ниже, чтобы узнать, как это работает и как начать с бесплатным доступом.\n\n<figure class=\"kg-card kg-bookmark-card\"><a class=\"kg-bookmark-container\" href=\"https://jina.ai/embeddings/?ref=jina-ai-gmbh.ghost.io\"><div class=\"kg-bookmark-content\"><div class=\"kg-bookmark-title\">Embedding API</div><div class=\"kg-bookmark-description\">Высокопроизводительный, длина контекста 8192 токена, $100 за 1,25 млрд токенов, бесшовная альтернатива OpenAI, бесплатная пробная версия</div><div class=\"kg-bookmark-metadata\"><img class=\"kg-bookmark-icon\" src=\"https://jina.ai/icons/favicon-128x128.png\" alt=\"\"></div></div><div class=\"kg-bookmark-thumbnail\"><img src=\"https://jina.ai/banner-embedding-api.png\" alt=\"\"></div></a></figure>\n\nПриведенный ниже код генерирует эмбеддинги и сохраняет их в индексе FAISS. Установите переменную <code>batch_size</code> в соответствии с вашими ресурсами.\n\n<pre><code class=\"language-python\">import faiss\n\nbatch_size = 5\n\nvector_data = []\nfaiss_index = faiss.IndexFlatIP(768)\n\ndata = [(key, txt) for key, txt in book_data.items()]\nbatches = [data[i:i + batch_size] for i in range(0, len(data), batch_size)]\n\nfor ind, batch in enumerate(batches):\n    print(f\"Processing batch {ind + 1} of {len(batches)}\")\n    batch_embeddings = model.encode([x[1] for x in batch], normalize_embeddings=True)\n    vector_data.extend(batch)\n    faiss_index.add(batch_embeddings)\n</code></pre>\n\nПри работе в производственной среде словарь Python не является адекватным или производительным способом обработки документов и эмбеддингов. Вам следует использовать специализированную векторную базу данных, которая будет иметь свои собственные инструкции по вставке данных.\n\n## Запросы на немецком языке для получения результатов на английском\n\nКогда мы делаем запрос к этому набору текстов, происходит следующее:\n\n1. Модель Jina Embeddings для немецкого и английского языков создаст эмбеддинг для запроса.\n2. Мы используем индекс FAISS (<code>faiss_index</code>) для получения сохраненного эмбеддинга с наибольшим косинусом к эмбеддингу запроса и вернем его позицию в индексе.\n3. Мы найдем соответствующий текст в массиве векторных данных (<code>vector_data</code>) и выведем косинус, расположение текста и сам текст.\n\nЭто то, что делает функция <code>query</code> ниже.<code class=\"language-python\">def query(query_str):\n    query = model.encode([query_str], normalize_embeddings=True)\n    cosine, index = faiss_index.search(query, 1)\n    print(f\"Cosine: {cosine[0][0]}\")\n    loc, txt = vector_data[index[0][0]]\n    print(f\"Location: {loc}\\\\nText:\\\\n\\\\n{txt}\")\n</code></pre><p>Давайте попробуем это.</p><pre><code class=\"language-python\"># Translation: \"How do I roll back to a previous version?\"\nquery(\"Wie kann ich auf eine frühere Version zurücksetzen?\")\n</code></pre><p>Результат:</p><pre><code class=\"language-text\">Cosine: 0.5202275514602661\nLocation: EPUB/ch02-git-basics-chapter.xhtml::20\nText:\n\nUndoing things with git restore\nGit version 2.23.0 introduced a new command: git restore.\nIt's basically an alternative to git reset which we just covered.\nFrom Git version 2.23.0 onwards, Git will use git restore instead of git reset for many undo operations.\nLet's retrace our steps, and undo things with git restore instead of git reset.\n</code></pre><p>Это довольно хороший ответ на вопрос. Попробуем другой:</p><pre><code class=\"language-python\"># Translation: \"What does 'version control' mean?\"\nquery(\"Was bedeutet 'Versionsverwaltung'?\")\n</code></pre><p>Результат:</p><pre><code class=\"language-text\">Cosine: 0.5001817941665649\nLocation: EPUB/ch01-getting-started.xhtml::1\nText:\n\nAbout Version Control\n\nWhat is \"version control\", and why should you care?\nVersion control is a system that records changes to a file or set of files over time so that you can recall specific versions later.\nFor the examples in this book, you will use software source code as the files being version controlled, though in reality you can do this with nearly any type of file on a computer.\nIf you are a graphic or web designer and want to keep every version of an image or layout (which you would most certainly want to), a Version Control System (VCS) is a very wise thing to use.\nIt allows you to revert selected files back to a previous state, revert the entire project back to a previous state, compare changes over time, see who last modified something that might be causing a problem, who introduced an issue and when, and more.\nUsing a VCS also generally means that if you screw things up or lose files, you can easily recover.\nIn addition, you get all this for very little overhead.\n</code></pre><p>Попробуйте задать свои вопросы на немецком языке, чтобы увидеть, насколько хорошо это работает. Как общее правило, при работе с поиском текстовой информации следует запрашивать от трех до пяти ответов вместо одного. Лучший ответ часто не является первым.</p><h2 id=\"reversing-the-roles-querying-german-documents-with-english\">Меняем роли: Запросы к немецким документам на английском</h2><p>Книга <a href=\"https://open.umn.edu/opentextbooks/textbooks/pro-git-everything-you-need-to-know-about-git?ref=jina-ai-gmbh.ghost.io\"><em>Pro Git: Everything You Need to Know About Git</em></a> также <a href=\"https://open.umn.edu/opentextbooks/textbooks/pro-git-everything-you-need-to-know-about-git-german?ref=jina-ai-gmbh.ghost.io\">доступна на немецком языке</a>. Мы можем использовать эту же модель для демонстрации с обратным порядком языков.</p><p>Скачаем электронную книгу:</p><pre><code class=\"language-bash\">wget -O progit-de.epub https://open.umn.edu/opentextbooks/formats/3454\n</code></pre><p>Это копирует книгу в файл под названием <code>progit-de.epub</code>. Затем мы обрабатываем её так же, как мы делали с английской книгой:</p><pre><code class=\"language-python\">book_data = decompose_epub(\"progit-de.epub\")\n</code></pre><p>И затем генерируем эмбеддинги так же, как раньше:</p><pre><code class=\"language-python\">batch_size = 5\n\nvector_data = []\nfaiss_index = faiss.IndexFlatIP(768)\n\ndata = [(key, txt) for key, txt in book_data.items()]\nbatches = [data[i:i + batch_size] for i in range(0, len(data), batch_size)]\n\nfor ind, batch in enumerate(batches):\n    print(f\"Processing batch {ind + 1} of {len(batches)}\")\n    batch_embeddings = model.encode([x[1] for x in batch], normalize_embeddings=True)\n    vector_data.extend(batch)\n    faiss_index.add(batch_embeddings)\n</code></pre><p>Теперь мы можем использовать ту же функцию <code>query</code> для поиска на английском языке ответов на немецком:</p><pre><code class=\"language-python\">query(\"What is version control?\")\n</code></pre><p>Результат:</p><pre><code class=\"language-text\">Cosine: 0.6719034910202026\nLocation: EPUB/ch01-getting-started.xhtml::1\nText:\n\nWas ist Versionsverwaltung?\n\nWas ist „Versionsverwaltung\", und warum sollten Sie sich dafür interessieren?\nVersionsverwaltung ist ein System, welches die Änderungen an einer oder einer Reihe von Dateien über die Zeit hinweg protokolliert, sodass man später auf eine bestimmte Version zurückgreifen kann.\nDie Dateien, die in den Beispielen in diesem Buch unter Versionsverwaltung gestellt werden, enthalten Quelltext von Software, tatsächlich kann in der Praxis nahezu jede Art von Datei per Versionsverwaltung nachverfolgt werden.\nAls Grafik- oder Webdesigner möchte man zum Beispiel in der Lage sein, jede Version eines Bildes oder Layouts nachverfolgen zu können. Als solcher wäre es deshalb ratsam, ein Versionsverwaltungssystem (engl. Version Control System, VCS) einzusetzen.\nEin solches System erlaubt es, einzelne Dateien oder auch ein ganzes Projekt in einen früheren Zustand zurückzuversetzen, nachzuvollziehen, wer zuletzt welche Änderungen vorgenommen hat, die möglicherweise Probleme verursachen, herauszufinden wer eine Änderung ursprünglich vorgenommen hat und viele weitere Dinge.\nEin Versionsverwaltungssystem bietet allgemein die Möglichkeit, jederzeit zu einem vorherigen, funktionierenden Zustand zurückzukehren, auch wenn man einmal Mist gebaut oder aus irgendeinem Grund Dateien verloren hat.\nAll diese Vorteile erhält man für einen nur sehr geringen, zusätzlichen Aufwand.\n</code></pre><p>Заголовок этого раздела переводится как <em>\"Что такое контроль версий?\"</em>, так что это хороший ответ.</p><h2 id=\"querying-in-chinese\">Запросы на китайском</h2><p>Эти примеры будут работать точно так же с Jina Embeddings v2 для китайского и английского языков. Чтобы использовать китайскую модель, просто выполните следующее:</p><pre><code class=\"language-python\">from transformers import AutoModel\n\nmodel = AutoModel.from_pretrained('jinaai/jina-embeddings-v2-base-zh', trust_remote_code=True)\n</code></pre><p>И чтобы получить китайское издание <em>Pro Git: Everything You Need to Know About Git</em>:</p><pre><code class=\"language-python\">wget -O progit-zh.epub https://open.umn.edu/opentextbooks/formats/3455\n</code></pre><p>Затем обработаем китайскую книгу:</p><pre><code class=\"language-python\">book_data = decompose_epub(\"progit-zh.epub\")\n</code></pre><p>Весь остальной код в этом руководстве будет работать точно так же.</p><h2 id=\"the-future-more-languages-including-programming\">Будущее: Больше языков, включая программирование</h2><p>Мы будем выпускать больше двуязычных моделей в ближайшем будущем, при этом испанская и японская версии уже в разработке, а также модель, поддерживающая английский язык и несколько основных языков программирования. Эти модели идеально подходят для международных предприятий, управляющих многоязычной информацией, и могут служить краеугольным камнем для поиска информации с помощью ИИ и генеративных языковых моделей на основе RAG, встраиваясь в различные передовые сценарии использования ИИ.</p><p>Модели Jina AI компактны и показывают одни из лучших результатов в своем классе, демонстрируя, что не нужна самая большая модель для получения лучшей производительности. Сосредоточившись на двуязычной производительности, мы создаем модели, которые лучше работают с этими языками, легче адаптируются и более экономически эффективны, чем большие модели, обученные на необработанных данных.</p><p>Jina Embeddings доступны на <a href=\"https://huggingface.co/jinaai?ref=jina-ai-gmbh.ghost.io\">Hugging Face</a>, в <a href=\"https://aws.amazon.com/marketplace/seller-profile?id=seller-stch2ludm6vgy&ref=jina-ai-gmbh.ghost.io\">AWS marketplace</a> для использования в Sagemaker, и через <a href=\"https://jina.ai/embeddings/?ref=jina-ai-gmbh.ghost.io\">веб-API Jina Embeddings</a>. Они полностью интегрированы во многие фреймворки обработки ИИ и векторные базы данных.</p><p>Посетите <a href=\"https://jina.ai/embeddings/?ref=jina-ai-gmbh.ghost.io\">сайт Jina Embeddings</a> для получения дополнительной информации или свяжитесь с нами, чтобы обсудить, как предложения Jina AI могут вписаться в ваши бизнес-процессы.</p><figure class=\"kg-card kg-bookmark-card\"><a class=\"kg-bookmark-container\" href=\"https://jina.ai/embeddings/?ref=jina-ai-gmbh.ghost.io\"><div class=\"kg-bookmark-content\"><div class=\"kg-bookmark-title\">Embedding API</div><div class=\"kg-bookmark-description\">Top-performing, 8192-token context length, $100 for 1.25B tokens, seamless OpenAI alternative, free trial</div><div class=\"kg-bookmark-metadata\"><img class=\"kg-bookmark-icon\" src=\"https://jina.ai/icons/favicon-128x128.png\" alt=\"\"></div></div><div class=\"kg-bookmark-thumbnail\"><img src=\"https://jina.ai/banner-embedding-api.png\" alt=\"\"></div></a></figure>",
  "comment_id": "65b3adb510ff9f0001c50c4d",
  "feature_image": "https://jina-ai-gmbh.ghost.io/content/images/2024/01/Blog-images--32-.png",
  "featured": false,
  "visibility": "public",
  "created_at": "2024-01-26T14:03:49.000+01:00",
  "updated_at": "2024-02-05T17:19:35.000+01:00",
  "published_at": "2024-01-26T17:14:56.000+01:00",
  "custom_excerpt": "Jina AI's open-source bilingual embedding models for German-English and Chinese-English are now on Hugging Face.\nWe’re going to walk through installation and cross-language retrieval.",
  "codeinjection_head": null,
  "codeinjection_foot": null,
  "custom_template": null,
  "canonical_url": null,
  "authors": [
    {
      "id": "632ae7353e4e55003d52598e",
      "name": "Scott Martens",
      "slug": "scott",
      "profile_image": "https://jina-ai-gmbh.ghost.io/content/images/2022/11/photo-of-me-cropped.jpg",
      "cover_image": "https://jina-ai-gmbh.ghost.io/content/images/2022/11/shanshui-ernie-crop.png",
      "bio": "A rogue AI created by Canada's Weapon X program.\n\nContent Creator @ Jina AI",
      "website": "https://jina.ai",
      "location": "Berlin",
      "facebook": null,
      "twitter": null,
      "meta_title": null,
      "meta_description": null,
      "url": "https://jina-ai-gmbh.ghost.io/author/scott/"
    }
  ],
  "tags": [
    {
      "id": "634a1a8ccebfc1003d8ab706",
      "name": "Tech Blog",
      "slug": "tech-blog",
      "description": null,
      "feature_image": null,
      "visibility": "public",
      "og_image": null,
      "og_title": null,
      "og_description": null,
      "twitter_image": null,
      "twitter_title": null,
      "twitter_description": null,
      "meta_title": null,
      "meta_description": null,
      "codeinjection_head": null,
      "codeinjection_foot": null,
      "canonical_url": null,
      "accent_color": null,
      "url": "https://jina-ai-gmbh.ghost.io/tag/tech-blog/"
    }
  ],
  "primary_author": {
    "id": "632ae7353e4e55003d52598e",
    "name": "Scott Martens",
    "slug": "scott",
    "profile_image": "https://jina-ai-gmbh.ghost.io/content/images/2022/11/photo-of-me-cropped.jpg",
    "cover_image": "https://jina-ai-gmbh.ghost.io/content/images/2022/11/shanshui-ernie-crop.png",
    "bio": "A rogue AI created by Canada's Weapon X program.\n\nContent Creator @ Jina AI",
    "website": "https://jina.ai",
    "location": "Berlin",
    "facebook": null,
    "twitter": null,
    "meta_title": null,
    "meta_description": null,
    "url": "https://jina-ai-gmbh.ghost.io/author/scott/"
  },
  "primary_tag": {
    "id": "634a1a8ccebfc1003d8ab706",
    "name": "Tech Blog",
    "slug": "tech-blog",
    "description": null,
    "feature_image": null,
    "visibility": "public",
    "og_image": null,
    "og_title": null,
    "og_description": null,
    "twitter_image": null,
    "twitter_title": null,
    "twitter_description": null,
    "meta_title": null,
    "meta_description": null,
    "codeinjection_head": null,
    "codeinjection_foot": null,
    "canonical_url": null,
    "accent_color": null,
    "url": "https://jina-ai-gmbh.ghost.io/tag/tech-blog/"
  },
  "url": "https://jina-ai-gmbh.ghost.io/podcast/jina-embeddings-v2-bilingual-models-are-now-open-source-on-hugging-face/",
  "excerpt": "Билингвальные модели эмбеддингов с открытым исходным кодом от Jina AI для немецко-английской и китайско-английской языковых пар теперь доступны на Hugging Face.\nРассмотрим процесс установки и кросс-языкового поиска.",
  "reading_time": 13,
  "access": true,
  "comments": false,
  "og_image": null,
  "og_title": null,
  "og_description": null,
  "twitter_image": null,
  "twitter_title": null,
  "twitter_description": null,
  "meta_title": null,
  "meta_description": null,
  "email_subject": null,
  "frontmatter": null,
  "feature_image_alt": "Colorful \"EMBEDDINGS\" text above a pile of yellow smileys on a black background with decorative lines at the top.",
  "feature_image_caption": null
}
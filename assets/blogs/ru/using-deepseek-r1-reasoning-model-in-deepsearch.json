{
  "slug": "using-deepseek-r1-reasoning-model-in-deepsearch",
  "id": "67dd5037143bda0001036423",
  "uuid": "3ebc2ba7-b65b-408b-9466-ca902b28756a",
  "title": "Использование модели рассуждений DeepSeek R1 в DeepSearch",
  "html": "<p><a href=\"https://jina.ai/news/a-practical-guide-to-implementing-deepsearch-deepresearch\">По нашему мнению, DeepSearch — это, по сути, большой цикл while.</a> С учетом максимальных лимитов токенов, он циклически переключается между поиском, чтением и обдумыванием, пока не найдет лучший ответ. Одна из ключевых задач LLM — определить, какое действие предпринять дальше, основываясь на текущем состоянии памяти. Следует ли продолжить поиск? Прочитать веб-страницу? Или ответить на вопрос напрямую?</p><p>В нашей реализации <a href=\"https://github.com/jina-ai/node-DeepResearch\">node-deepresearch</a> мы используем <em>стандартную</em> LLM (<code>gemini-2.0-flash</code>) для выбора действия. Мы называем её \"стандартной\", так как процесс рассуждения явно определен через промпт-инжиниринг и работает как последовательность на входе и выходе, где выбранное действие возвращается в JSON-объекте. Поэтому возникает естественный вопрос: улучшит ли замена этого этапа принятия решений специализированной моделью рассуждений производительность DeepSearch?</p><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://jina-ai-gmbh.ghost.io/content/images/2025/04/Heading--91-.png\" class=\"kg-image\" alt=\"\" loading=\"lazy\" width=\"1200\" height=\"630\" srcset=\"https://jina-ai-gmbh.ghost.io/content/images/size/w600/2025/04/Heading--91-.png 600w, https://jina-ai-gmbh.ghost.io/content/images/size/w1000/2025/04/Heading--91-.png 1000w, https://jina-ai-gmbh.ghost.io/content/images/2025/04/Heading--91-.png 1200w\" sizes=\"(min-width: 720px) 720px\"><figcaption><span style=\"white-space: pre-wrap;\">Этап принятия решения о действии в большом цикле while нашей реализации DeepSearch определяет, основываясь на текущем контексте и памяти, каким должно быть следующее действие.</span></figcaption></figure><p>В этой статье мы исследуем использование <a href=\"https://github.com/deepseek-ai/DeepSeek-R1\">DeepSeek R1</a> 671b, LLM для рассуждений, чтобы заменить <code>gemini-2.0-flash</code> на этом этапе принятия решений. Мы считаем, что навыки рассуждения R1 помогут ему решать сложные задачи при поиске в интернете и анализе результатов.</p><p>Чтобы проверить эту концепцию, мы запустили её на практическом примере: планирование комплексного трехдневного туристического маршрута, а затем оценили её работу. Агент, выполняющий задачи глубокого поиска, вероятно, столкнется с теми же проблемами, что и люди, поэтому в нашей задаче планирования отдыха модель может столкнуться со следующими проблемами:</p><ul><li><strong>Пробелы в знаниях (информация, зависящая от другой информации)</strong>: Например, вы хотите посетить Эйфелеву башню, но не знаете, открыта ли она в праздничные дни. Вам нужно узнать как расписание работы башни, так и даты французских государственных праздников.</li><li><strong>Неверная или устаревшая информация</strong>: Туристический блог 2020 года предлагает определенный ресторан в Риме, который открыт по воскресеньям, но по прибытии вы обнаруживаете, что он изменил часы работы и теперь закрыт по воскресеньям.</li><li><strong>Противоречивая информация</strong>: Один туристический сайт утверждает, что определенный отель в Нью-Йорке предлагает бесплатный завтрак, в то время как другой сайт указывает, что завтрак не включен в стоимость номера.</li><li><strong>Неоднозначная информация</strong>: Пост на туристическом форуме упоминает \"отличный пляж возле Барселоны\" без указания конкретного пляжа или четких указаний, что затрудняет определение точного местоположения.</li></ul><p>R1 может разбивать сложные задачи на выполнимые шаги, выявлять пробелы и несоответствия и преодолевать препятствия, такие как заблокированные веб-сайты и платный контент. У него есть способности к рассуждению для сбора необходимых знаний и синтеза ответа. Однако он не может спланировать отпуск для нас самостоятельно — для этого требуется поиск в интернете и понимание полученных результатов. Мы должны усовершенствовать его, создав framework и расширив его возможности, прежде чем он будет готов к работе.</p><h2 id=\"implementation\">Реализация</h2><figure class=\"kg-card kg-bookmark-card kg-card-hascaption\"><a class=\"kg-bookmark-container\" href=\"https://colab.research.google.com/drive/18sqU8_eWqFleKqpd-SnGDNmZ_P1KLfXw?usp=sharing#scrollTo=2jFWdbnp_6ws\"><div class=\"kg-bookmark-content\"><div class=\"kg-bookmark-title\">Google Colab</div><div class=\"kg-bookmark-description\"></div><div class=\"kg-bookmark-metadata\"><img class=\"kg-bookmark-icon\" src=\"https://jina-ai-gmbh.ghost.io/content/images/icon/favicon-32.ico\" alt=\"\"></div></div><div class=\"kg-bookmark-thumbnail\"><img src=\"https://jina-ai-gmbh.ghost.io/content/images/thumbnail/colab_favicon_256px-7.png\" alt=\"\" onerror=\"this.style.display = 'none'\"></div></a><figcaption><p><span style=\"white-space: pre-wrap;\">Для запуска блокнота вам понадобятся бесплатные API-ключи </span><a href=\"https://jina.ai\"><span style=\"white-space: pre-wrap;\">Jina AI</span></a><span style=\"white-space: pre-wrap;\"> и </span><a href=\"https://openrouter.ai\"><span style=\"white-space: pre-wrap;\">OpenRouter</span></a><span style=\"white-space: pre-wrap;\">.</span></p></figcaption></figure><p>Хотя R1 является движком нашего агента, мы также добавляем некоторые инструменты, объект состояния и, конечно, (довольно большой) промпт. Вот упрощенное представление:</p><figure class=\"kg-card kg-image-card\"><img src=\"https://jina-ai-gmbh.ghost.io/content/images/2025/03/image-29.png\" class=\"kg-image\" alt=\"\" loading=\"lazy\" width=\"1639\" height=\"2256\" srcset=\"https://jina-ai-gmbh.ghost.io/content/images/size/w600/2025/03/image-29.png 600w, https://jina-ai-gmbh.ghost.io/content/images/size/w1000/2025/03/image-29.png 1000w, https://jina-ai-gmbh.ghost.io/content/images/size/w1600/2025/03/image-29.png 1600w, https://jina-ai-gmbh.ghost.io/content/images/2025/03/image-29.png 1639w\" sizes=\"(min-width: 720px) 720px\"></figure><ul><li><strong>Инструменты</strong> могут вызываться моделью для поиска и скрапинга веб-страниц, а результаты сохраняются в состоянии.</li><li><strong>Состояние</strong> отслеживает результаты работы инструментов, статус задачи и знания. Оно хранится в самом промпте.</li><li><strong>Единый промпт</strong> предоставляет инструкции, определяя задачу и способ её выполнения, а также хранит состояние.</li></ul><p>Мы рассмотрим каждый из этих компонентов более подробно позже в статье, особенно промпт. Но вкратце система работает следующим образом:</p><p>Мы начинаем с промпта с незаполненным объектом состояния. Пока задача выполняется (т.е. пытается получить ответ), агент выполняет следующий цикл, пока не получит ответ:</p><ol><li>Модель анализирует задачу и её состояние из промпта и рассуждает, как лучше использовать свои инструменты для получения ответа.</li><li>Модель выводит JSON-объект, указывающий свой статус (<code>IN PROGRESS</code> или <code>DONE</code>), обновления памяти, вызовы инструментов и ответ (изначально <code>null</code>).</li><li>Агент асинхронно вызывает инструменты, и результаты встраиваются обратно в промпт, как и JSON-объект из шага 3.</li><li>Промпт (содержащий эту новую информацию) подается обратно в модель для выполнения следующего цикла.</li></ol><p>Как только модель предоставляет ответ в своем выводе, задача завершается и ответ доставляется.</p><div class=\"kg-card kg-callout-card kg-callout-card-blue\"><div class=\"kg-callout-emoji\">💡</div><div class=\"kg-callout-text\">Чтобы лучше понять, как работает агент в действии, мы предлагаем вам попробовать <a href=\"https://colab.research.google.com/drive/18sqU8_eWqFleKqpd-SnGDNmZ_P1KLfXw?usp=sharing#scrollTo=2jFWdbnp_6ws\">блокнот</a> самостоятельно и изучить вывод на каждой итерации.</div></div><p>Теперь, когда у нас есть общий обзор, давайте рассмотрим инструменты, состояние и промпт по очереди:</p><h2 id=\"tools\">Инструменты</h2><p>Поскольку R1 не может самостоятельно искать или скрапить веб-страницы, мы используем Reader API от Jina для расширения его возможностей. Это включает два режима:</p><ul><li><strong>Режим поиска</strong>: ищет в интернете релевантные термины и возвращает результаты поисковой системы (включая URL, заголовки и описания каждого результата).</li><li><strong>Режим чтения</strong>: скрапит страницы из результатов поиска и возвращает их в формате Markdown.</li></ul><p>Из-за ограниченного контекстного окна R1 мы не можем просто загрузить целую страницу в раздел <code>Tool Results</code> промпта. Нам нужны дополнительные инструменты для выбора только самой релевантной информации перед её передачей модели:</p><ul><li><a href=\"https://python.langchain.com/docs/concepts/text_splitters/\"><strong>LangChain recursive character text splitter</strong></a>: Мы разбиваем длинные выводы на сегменты с помощью <code>RecursiveCharacterTextSplitter</code>, рекурсивно разделяя по параграфам и предложениям, пока не получим желаемый размер сегмента. Это обеспечивает легкое усвоение вывода ограниченным контекстным окном R1.</li><li><a href=\"https://jina.ai/reranker\"><strong>Jina Reranker</strong></a>: Мы переранжируем сегменты с помощью <code>jina-reranker-v2-base-multilingual</code> и объединяем сегменты с наивысшим рейтингом в один результат.</li></ul><p>К сожалению, DeepSeek R1 не поддерживает использование инструментов так же, как <code>o3-mini</code>. Например, с <code>o3-mini</code> мы могли бы использовать что-то вроде следующего:</p><figure class=\"kg-card kg-code-card\"><pre><code class=\"language-python\">def scrape_page(url: str):\n    \"\"\"Scrape a web page with Jina Reader\"\"\"\n\ntools = [\n    {\n        \"type\": \"function\",\n        \"function\": {\n            \"name\": \"scrape_page\",\n            \"description\": \"Scrape the content of a webpage\",\n            \"parameters\": {\n                \"url\": {\"type\": \"string\", \"description\": \"The URL to scrape\"}\n            }\n        }\n    }\n]\n\nclient = OpenAI()\nresponse = client.completions.create(\n    model=\"o3-mini\",\n    prompt=f\"Scrape www.skyscanner.net/routes/gr/de/germany-to-crete.html\",\n    tools=tools\n)\n</code></pre><figcaption><p><span style=\"white-space: pre-wrap;\">Пример кода o3-mini для поддержки использования инструментов</span></p></figcaption></figure><p>Но это не так просто с R1: У него нет параметра <code>tools</code>, который мы можем передать в API, и он не будет возвращать структурированные <code>tool_calls</code> как часть своего ответа. Проще говоря, он не был обучен использованию инструментов (<a href=\"https://github.com/deepseek-ai/DeepSeek-R1/issues/9\">и в ближайшее время не будет их поддерживать</a>). По крайней мере, он не поддерживает их в традиционном смысле. Однако мы <em>можем</em> попросить R1 выводить вызовы инструментов в формате JSON и передавать результаты вызова инструментов обратно в модель для анализа:</p><figure class=\"kg-card kg-code-card\"><pre><code class=\"language-markdown\">You must respond with a valid JSON object containing:\n```json\n{\n  \"tool_calls\": [\n    {\"tool\": \"search\", \"input\": \"Cheapest flights from Germany to Crete May 2025\"},\n    {\"tool\": \"scrape\", \"input\": \"&lt;https://www.skyscanner.net/routes/gr/de/germany-to-crete.html&gt;\"}\n  ]\n}\n```</code></pre><figcaption><p><span style=\"white-space: pre-wrap;\">Вызовы инструментов как часть промпта R1</span></p></figcaption></figure><p>После того как модель выводит вызовы инструментов на итерации <em>n</em>, инструменты вызываются, и результаты встраиваются в секцию <code>Tool Results</code> промпта, чтобы модель могла рассуждать с ними на итерации <em>n+1</em>:</p><figure class=\"kg-card kg-code-card\"><pre><code class=\"language-markdown\">Tool Results:\n\nSource 1️: search: Cheapest flights from Germany to Crete May 2025\nResult:\n\n```\nTitle: Affordable flights: Germany - Heraklion (Crete) (HER) | Eurowings URL Source: https://www.eurowings.com/en/booking/offers/flights-from/DE/to/GR/HER.html Description: Affordable flights from Germany to Heraklion (Crete) ✈ Eurowings brings you closer to your dream destination from as little as €89.99*. Book now and enjoy.\nTitle: Are you a person or a robot? URL Source: https://www.skyscanner.com/routes/fran/her/frankfurt-to-crete-heraklion.html Description: Book a one-way ticket from Frankfurt to Heraklion Airport from $78 or travel return from just $154. The prices shown are based on availability and could change ...\n```\n</code></pre><figcaption><p><span style=\"white-space: pre-wrap;\">Результаты инструментов, показывающие результаты поиска рейсов Германия-Крит</span></p></figcaption></figure><h2 id=\"state\">Состояние</h2><p>Состояние отслеживает статус задачи (<code>Status</code>) и знания (<code>Memory</code>), которые модели нужно проанализировать и обновить. Проще говоря, это рабочая память и банк памяти системы. Это хранится в разделе промпта под названием <code>{{ workspace }}</code>, и изначально это пустой лист:</p><figure class=\"kg-card kg-code-card\"><pre><code class=\"language-markdown\">Status: IN_PROGRESS\nMemory: \n... no memory blocks ..\n</code></pre><figcaption><p><span style=\"white-space: pre-wrap;\">Пустой объект состояния</span></p></figcaption></figure><p>Когда модель рассуждает о задаче, запускает инструменты и собирает вывод, состояние заполняется блоками памяти (полученными из вывода инструментов), каждый со своим случайно назначенным ID. Для нашего примера с планированием отпуска состояние может выглядеть так после выполнения одной итерации агента:</p><figure class=\"kg-card kg-code-card\"><pre><code class=\"language-markdown\">Status: IN_PROGRESS\nMemory: \n&lt;nuz-032&gt;Potential warm May destinations: Malaga (Spain), Crete (Greece), Algarve (Portugal)&lt;/nuz-032&gt;\n&lt;xwj-969&gt;URL to scrape for Crete hotel details: &lt;https://www.tripadvisor.com/HotelsList-Crete-Beachfront-Cheap-Hotels-zfp13280541.html&gt;&lt;/xwj-969&gt;\n&lt;vsc-583&gt;URL to scrape for flight details: &lt;https://www.expedia.com/lp/flights/fra/her/frankfurt-to-heraklion&gt;&lt;/vsc-583&gt;\n</code></pre><figcaption><p><span style=\"white-space: pre-wrap;\">Состояние, заполненное DeepSeek R1</span></p></figcaption></figure><p>Блоки памяти обновляются путем включения списка <code>memory_updates</code> в JSON-ответ модели:</p><figure class=\"kg-card kg-code-card\"><pre><code class=\"language-json\">{\n\t\"memory_updates\": [\n\t  {\"operation\": \"add\", \"content\": \"Round-trip flight from Berlin to Tenerife in May 2025 ranges from €59.99 to €200 round-trip as per the Skyscanner and Iberia sources.\"},\n\t  {\"operation\": \"delete\", \"id\": \"nuz-032\"},\n\t  ...\n\t]\n}</code></pre><figcaption><p><span style=\"white-space: pre-wrap;\">Обновления памяти как часть JSON-вывода R1</span></p></figcaption></figure><ul><li><strong>Операция <code>add</code></strong> добавляет блок памяти и может использоваться для хранения важной информации, такой как зацепки, находки, пробелы в информации и уже предпринятые действия.</li><li><strong>Операция <code>delete</code></strong> удаляет блок памяти, позволяя модели удалять старую, ненужную или ложную информацию и поддерживать чистое рабочее пространство.</li></ul><div class=\"kg-card kg-callout-card kg-callout-card-yellow\"><div class=\"kg-callout-emoji\">💡</div><div class=\"kg-callout-text\">Мы также тестировали операцию <code>replace</code>, но обнаружили, что модель генерировала большие блоки информации (чрезмерно полагаясь на <code>replace</code>), и решили убрать эту опцию.</div></div><p>По сравнению с вызовом инструментов, R1 менее знаком с управлением собственной памятью. В то время как модель была специально обучена решать сложные математические задачи и задачи программирования — обучение, которое позволяет ей создавать точные JSON-объекты и выполнять вызовы инструментов — она не была обучена управлять состояниями, подобными памяти (как и любая другая известная нам модель).</p><p>Хранение информации с использованием компактного состояния памяти имеет несколько преимуществ перед хранением всего вывода модели в каждом раунде. Этот подход сжимает информацию в промпте, предотвращая переполнение контекста и улучшая фокусировку модели на релевантных знаниях. Мы храним как JSON, потому что его легко обновлять, но JSON отображается в человекочитаемом формате в самом промпте.</p><p>Тем не менее, управление памятью все еще выходит за рамки основной области применения R1; нам пришлось реализовать несколько инструкций, чтобы направлять модель в правильном обращении с операциями памяти. Вот часть нашего промпта, которая имеет дело с этим:</p><figure class=\"kg-card kg-code-card\"><pre><code class=\"language-markdown\">... другое содержимое промпта ...\n\n## Memory Block Usage\n- Each memory block has a unique ID in format &lt;abc-123&gt;content&lt;/abc-123&gt;\n- Create separate blocks for distinct pieces of information:\n  * Discovered URLs (both explored and pending)\n  * Information gaps that need investigation\n  * Actions already taken (to avoid repetition)\n  * Promising leads for future exploration\n  * Key facts and findings\n  * Contradictions or inconsistencies found\n- Keep each block focused on a single idea or piece of information\n- Always cite sources when recording information from tool results\n- Use IDs to track and manage your knowledge (e.g., deleting outdated information)\n- Make sure to store sources (URLs) for the facts and findings you store\n\n## Lead Management\n- Since you can only make 3 tool calls per round, store promising leads for later\n- Create dedicated memory blocks for URLs to scrape later\n- Maintain blocks for potential search queries to explore in future rounds\n- Prioritize leads based on relevance to the task\n\n... другое содержимое промпта ...</code></pre><figcaption><p><span style=\"white-space: pre-wrap;\">Инструкции по работе с памятью в промпте</span></p></figcaption></figure><h2 id=\"prompt\">Промпт</h2><p>Мы создали промпт, используя <a href=\"https://jinja.palletsprojects.com/en/stable/templates/\">формат шаблона Jinja</a>. Он состоит из нескольких разделов:</p><ul><li><strong>Контекст</strong> (в данном случае текущая дата).</li><li><strong>Инструкции</strong>, охватывающие принцип работы всего и сообщающие модели, какие инструменты доступны.</li><li><strong>Состояние</strong>, обсужденное выше.</li><li><strong>Выводы инструментов</strong> от инструментов <code>search</code> и <code>scrape</code>.</li></ul><figure class=\"kg-card kg-code-card\"><pre><code class=\"language-markdown\">{% macro format_tool_results(tool_records) %}\n{% for to in tool_records %}\nSource {{ loop.index }}️: {{ to.tool }}: {{ to.input }}\nResult:\n```\n{{ to.output }}\n```\n{% endfor %}\n{% endmacro %}\n\nThe date: `{{ current_date }}`.\nYou are an information analysis and exploration agent that builds solutions through systematic investigation.\n\n## Investigation Cycle\nYou operate in a continuous investigation cycle:\n\n1. Review current workspace (your memory blocks)\n2. Analyze new tool results (or initial task if first round)\n3. Update memory with new insights and track investigation progress\n4. Decide on next tools to call based on identified leads and information gaps\n5. Repeat until task completion\n\n## Memory Structure\nYour memory persists between investigation cycles and consists of:\n- **Status**: Always the first line, indicates if the task is IN_PROGRESS or DONE\n- **Memory**: A collection of discrete information blocks, each with a unique ID\n\n## Memory Block Usage\n- Each memory block has a unique ID in format &lt;abc-123&gt;content&lt;/abc-123&gt;\n- Create separate blocks for distinct pieces of information:\n  * Discovered URLs (both explored and pending)\n  * Information gaps that need investigation\n  * Actions already taken (to avoid repetition)\n  * Promising leads for future exploration\n  * Key facts and findings\n  * Contradictions or inconsistencies found\n- Keep each block focused on a single idea or piece of information\n- Always cite sources when recording information from tool results\n- Use IDs to track and manage your knowledge (e.g., deleting outdated information)\n- Make sure to store sources (URLs) for the facts and findings you store\n\n## Lead Management\n- Since you can only make 3 tool calls per round, store promising leads for later\n- Create dedicated memory blocks for URLs to scrape later\n- Maintain blocks for potential search queries to explore in future rounds\n- Prioritize leads based on relevance to the task\n\n## Available Tools\n- **search**: Use for broad information gathering on new topics or concepts\n  * Example: {\"tool\": \"search\", \"input\": \"renewable energy statistics 2023\"}\n- **scrape**: Use for extracting specific details from discovered URLs\n  * Example: {\"tool\": \"scrape\", \"input\": \"https://example.com/energy-report\"}\n\n## Tool Usage Guidelines\n- **When to use search**: For new concepts, filling knowledge gaps, or exploring new directions\n- **When to use scrape**: For URLs discovered that likely contain detailed information\n- **Maximum 3 tool calls per round**\n- **Never repeat the exact same tool call**\n- **Always record valuable information from tool results in memory blocks**\n\n## Response Format\nYou must respond with a valid JSON object containing:\n\n```json\n{\n  \"status_update\": \"IN_PROGRESS or DONE\",\n  \"memory_updates\": [\n    {\"operation\": \"add\", \"content\": \"New insight or lead to investigate\"},\n    {\"operation\": \"delete\", \"id\": \"abc-123\"}\n  ],\n  \"tool_calls\": [\n    {\"tool\": \"search\", \"input\": \"specific search query\"},\n    {\"tool\": \"scrape\", \"input\": \"https://discovered-url.com\"}\n  ],\n  \"answer\": \"Your final, comprehensive answer when status is DONE\"\n}\n```\n\n## Important Rules\n- The \"add\" operation creates a new memory block\n\tYou do not need to specify an ID, it will be added automatically by the system.\n- The \"delete\" operation requires the specific ID of the block to remove\n- Never invent or fabricate information - only use facts from your memory or tool results\n- Never make up URLs - only use URLs discovered through tool results\n- CRITICAL: Any information not recorded in your memory blocks will be lost in the next round\n  For example, if you find a potential webpage to scrap, you must store the URL and your intention\n  Example: `{\"operation\": \"add\", \"content\": \"Found relevant URL: https://... to scrape ...\"}`\n- Set status to \"DONE\" only when you have fully addressed the task\n- Only include the \"answer\" field when status is \"DONE\"\n\nTask:\n```\n{{ task }}\n```\n\nCurrent workspace:\n```\n{{ workspace }}\n```\n\nTool Results:\n{{ format_tool_results(tool_records) if tool_records else '... no previous tool results ...'}}\n\nIMPORTANT: Generate a valid JSON response following the format above.\n\nThink carefully about:\n- what information do you need to preserve\n- which tools to call next\n- how to build your answer systematically with focused memory blocks</code></pre><figcaption><p><span style=\"white-space: pre-wrap;\">Полный промпт, используемый в нашей системе глубокого поиска</span></p></figcaption></figure><div class=\"kg-card kg-callout-card kg-callout-card-yellow\"><div class=\"kg-callout-emoji\">💡</div><div class=\"kg-callout-text\">Макрофункция Jinja в верхней части запроса просто отображает результаты инструментов в более читаемом формате.</div></div><h2 id=\"evaluation\">Оценка</h2><p>Мы протестировали нашу систему на примере планирования отпуска. Вот задача, встроенная в запрос:</p><pre><code class=\"language-text\">Help me plan a 3 day holiday in Europe in May for under 2000 EUR\n1. I need specific flight and hotel recommendations.\n2. I want the destination to be warm.\n3. I want to have a beach nearby the hotel.\nI live in Germany.</code></pre><p>Вот окончательный результат (после пяти итераций цикла):</p><figure class=\"kg-card kg-code-card\"><pre><code class=\"language-markdown\">**3-Day Crete Holiday Plan (Total ≈ €600-800)**\n\n✈️ *Flights (From Frankfurt):*  \n- Skyscanner: €154 round trip (May 2025 dates)  \n  Source: &lt;https://www.skyscanner.com/routes/fran/her/frankfurt-to-crete-heraklion.html&gt;  \n- Backup: Eurowings €180 round trip  \n\n🏨 *Beachfront Hotels:*  \n1. **Georgioupolis Beach Hotel**  \n   - Direct beach access, bike rentals €10  \n   - Source: &lt;https://www.tripadvisor.com/HotelsList-Crete-Beachfront-Cheap-Hotels-zfp13280541.html&gt;  \n\n2. **JT Apartments**  \n   - €57/night, 9.5/10 rating, 5-min walk to beach  \n   - Source: &lt;https://www.booking.com/region/gr/crete.html&gt;  \n\n3. **FNK Apartments**  \n   - Sea views, 9.6/10 rating  \n\n💰 *Budget Breakdown:*  \n- Flights: €154  \n- Hotel (3 nights): €171-250  \n- Remaining: €1,600+ for meals/activities  \n\n*Note:* All hotels are &lt;5 mins from beaches. Crete averages 25°C in May (Source: TravelSupermarket).\n</code></pre><figcaption><p><span style=\"white-space: pre-wrap;\">Результат поиска отпуска после пяти итераций</span></p></figcaption></figure><p>Этот ответ <em>выглядит</em> правдоподобным. Но действительно ли это так? В конце концов, модели известны своей склонностью к галлюцинациям, и в системе с несколькими компонентами что-то вполне может пойти не так. Давайте проверим некоторые детали в выводе R1:</p><h3 id=\"destination-and-total-budget\">Направление и общий бюджет</h3><p>Расчеты для каждого пункта сходятся (ниже мы рассмотрим, насколько точен каждый пункт). В конце концов, R1 был обучен на математических задачах. Направление также подходит; Крит — популярное место.</p><h3 id=\"flights\">Авиабилеты</h3><p>Цены на авиабилеты <em>почти</em> сходятся, но давайте посмотрим, где возникли ошибки. Во-первых, вот реальные цены из <em>Skyscanner</em> на рейсы из Франкфурта в Ираклион на май 2025 года, туда и обратно:</p><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://jina-ai-gmbh.ghost.io/content/images/2025/03/image-25.png\" class=\"kg-image\" alt=\"\" loading=\"lazy\" width=\"2000\" height=\"2384\" srcset=\"https://jina-ai-gmbh.ghost.io/content/images/size/w600/2025/03/image-25.png 600w, https://jina-ai-gmbh.ghost.io/content/images/size/w1000/2025/03/image-25.png 1000w, https://jina-ai-gmbh.ghost.io/content/images/size/w1600/2025/03/image-25.png 1600w, https://jina-ai-gmbh.ghost.io/content/images/2025/03/image-25.png 2048w\" sizes=\"(min-width: 720px) 720px\"><figcaption><span style=\"white-space: pre-wrap;\">Фактические результаты поиска Skyscanner для рейсов Франкфурт-Ираклион на май 2025 года</span></figcaption></figure><p>Мы видим, что цены держатся около отметки в 200 EUR, а не обещанных 154 EUR за билет туда-обратно! Но откуда взялась ошибка? Просматривая логи, мы находим связанный блок памяти, добавленный в третьем раунде:</p><figure class=\"kg-card kg-code-card\"><pre><code class=\"language-json\">{\"operation\": \"add\", \"content\": \"Crete flight options: Eurowings €89.99* one-way ...\"}</code></pre><figcaption><p><span style=\"white-space: pre-wrap;\">Блок памяти, связанный с рейсами Германия-Крит</span></p></figcaption></figure><p>Этот блок, похоже, выведен из прикрепленного результата поиска:</p><figure class=\"kg-card kg-code-card\"><pre><code class=\"language-markdown\">Source 1️: search: Cheapest flights from Germany to Crete May 2025\nResult:\n```\n... other results ...\nTitle: Are you a person or a robot?\nURL Source: https://www.skyscanner.com/routes/fran/her/frankfurt-to-crete-heraklion.html\nDescription: Book a one-way ticket from Frankfurt to Heraklion Airport from $78 or travel \nreturn from just $154. The prices shown are based on availability and could change ...\n```</code></pre><figcaption><p><span style=\"white-space: pre-wrap;\">Результат поиска рейсов Германия-Крит</span></p></figcaption></figure><p>Модель не пыталась просканировать эту веб-страницу для подтверждения результатов, но это, вероятно, не имело бы значения. Однако она должна была хотя бы заметить, что в результатах поиска не указан \"май\" как период.</p><h3 id=\"hotel\">Отель</h3><p>Отели подтверждаются, но мы выявили некоторые возможные улучшения. Во-первых, хотелось бы, чтобы модель приложила больше усилий для поиска цен на Georgioupolis Beach Hotel и FNK Apartments — хотя она предоставляет другую информацию, цены, к сожалению, отсутствуют. Чтобы понять, что мы имеем в виду, вот необработанный вывод со сканированного <a href=\"https://www.booking.com/region/gr/crete.html\">URL</a>, который использовался для формирования рекомендаций по отелям. Он показывает цены только для первого и последнего результатов, пропуская три средних:</p><figure class=\"kg-card kg-code-card\"><pre><code class=\"language-markdown\">Источник 3️: скраппинг: https://www.booking.com/region/gr/crete.html\nРезультат:\n```\nПоказать больше Показать меньше\n\nMoritz Германия\n\n*   ### [JT Apartments](https://www.booking.com/hotel/gr/jt-apatments.html?label=gen173nr-1FCAYoXEIFY3JldGVIM1gEaJUCiAEBmAExuAEZyAEM2AEB6AEB-AECiAIBqAIDuALSvqC-BsACAdICJDc5ZWE5ZDJkLTI2ZWEtNGNiMS04MzNlLTJhNWIyMGI5Y2M3NdgCBeACAQ&amp;sid=f21cdd5fe9eb08dcac7d3a0304f9ccc9)\n\nКиссамос\n\nОт 57$ за ночь\n\n9.5 Превосходно 313 отзывов\n\nЯ настоятельно рекомендую остановиться в JT Apartments. Когда мы вошли в апартаменты, нас ждал приятный сюрприз. Все было хорошо оборудовано. Район спокойный, рядом супермаркет. Пляж находится в нескольких минутах ходьбы. Это отличное место, если вы хотите посетить самые красивые пляжи Крита. Благодаря вам наше пребывание было именно таким, о каком мы мечтали :)\n\nПоказать больше Показать меньше\n\nKatarzyna Польша\nПоказать больше Показать меньше\n\nAitor Германия\n\n*   ### [FNK Apartments with Sea View](https://www.booking.com/hotel/gr/f-amp-k-apartments.html?label=gen173nr-1FCAYoXEIFY3JldGVIM1gEaJUCiAEBmAExuAEZyAEM2AEB6AEB-AECiAIBqAIDuALSvqC-BsACAdICJDc5ZWE5ZDJkLTI2ZWEtNGNiMS04MzNlLTJhNWIyMGI5Y2M3NdgCBeACAQ&amp;sid=f21cdd5fe9eb08dcac7d3a0304f9ccc9)\n\nАгия Пелагия\n\n9.6 Превосходно 64 отзыва\n\nМы были на Крите неделю. В течение этого времени мы останавливались в FnK Apartments. Froso и Konstantinos были супердружелюбными и замечательными хозяевами. Они всегда были готовы помочь, если у нас возникали вопросы или потребности любого рода. Из самих апартаментов открывается прекрасный вид на Агия Пелагию и окружающие бухты (и даже красивый восход солнца). Мы можем только рекомендовать FnK Apartments!!\n\nПоказать больше Показать меньше\n\nMoritz Германия\nПоказать больше Показать меньше\n\nmary США\n\n*   ### [Artemis Hotel Apartments](https://www.booking.com/hotel/gr/artemis-hersonisos.html?label=gen173nr-1FCAYoXEIFY3JldGVIM1gEaJUCiAEBmAExuAEZyAEM2AEB6AEB-AECiAIBqAIDuALSvqC-BsACAdICJDc5ZWE5ZDJkLTI2ZWEtNGNiMS04MzNlLTJhNWIyMGI5Y2M3NdgCBeACAQ&amp;sid=f21cdd5fe9eb08dcac7d3a0304f9ccc9)\n\nЛименас Херсониссос, Херсониссос\n\n9.0 Потрясающе 419 отзывов\n\nЕсли вы хотите почувствовать себя желанным гостем, чтобы к вам относились как к друзьям, быть уверенным, что вам помогут во всем, мы настоятельно рекомендуем остановиться в этом отеле. Огромное спасибо от всего сердца Константину за теплое и очень личное отношение! При следующем посещении Крита мы с радостью снова остановимся в отеле Artemis!\n\nПоказать больше Показать меньше\n\nИрина Израиль\nПоказать больше Показать меньше\n\nAnn Marie Ирландия\n\n*   ### [Pinelopi Hotel](https://www.booking.com/hotel/gr/pinelopi.html?label=gen173nr-1FCAYoXEIFY3JldGVIM1gEaJUCiAEBmAExuAEZyAEM2AEB6AEB-AECiAIBqAIDuALSvqC-BsACAdICJDc5ZWE5ZDJkLTI2ZWEtNGNiMS04MzNlLTJhNWIyMGI5Y2M3NdgCBeACAQ&amp;sid=f21cdd5fe9eb08dcac7d3a0304f9ccc9)\n\nПлатанес\n\n7.8 Хорошо 198 отзывов\n\nОтличное расположение рядом с пляжем, прекрасные таверны и удобное место для путешествий на автомобиле. Тихий район, идеально подходящий для чудесного отдыха. Просторные номера со всем необходимым. Отличное соотношение цены и качества. Зона бассейна превосходная, и вы можете расслабиться там в любое время дня. Парковка возле отеля была идеальной. Я обязательно вернусь в отель Pinelopi при следующем посещении Крита.\n\nПоказать больше Показать меньше\n\nRita Румыния\nПоказать больше Показать меньше\n\nKatarzyna Польша\n\n*   ### [Elizabeth Suites](https://www.booking.com/hotel/gr/elizabeth-suites.html?label=gen173nr-1FCAYoXEIFY3JldGVIM1gEaJUCiAEBmAExuAEZyAEM2AEB6AEB-AECiAIBqAIDuALSvqC-BsACAdICJDc5ZWE5ZDJkLTI2ZWEtNGNiMS04MzNlLTJhNWIyMGI5Y2M3NdgCBeACAQ&amp;sid=f21cdd5fe9eb08dcac7d3a0304f9ccc9)\n\nКато Даратсо\n\nОт 74$ за ночь\n\n9.1 Потрясающе 86 отзывов\n\nУ нас было прекрасное пребывание, которое стало еще более особенным благодаря владельцу Эпасу, который постоянно улыбался и был очень helpful, и персоналу, особенно Анне. Мы пару раз завтракали, и порции были более чем достаточными. Апартаменты находятся в идеальном месте для посещения пляжей и ресторанов. Мы настоятельно рекомендуем Elizabeth Suites, они сделали наш первый отдых на Крите 😊\n\nПоказать больше Показать меньше\n\nJean Великобритания\n```</code></pre><figcaption><p><span style=\"white-space: pre-wrap;\">Необработанные результаты поиска отелей на Крите на booking.com</span></p></figcaption></figure><p>Во-вторых, мы выявили дополнительную проблему при использовании Reranker с предустановленным параметром <code>top_n</code> из 5 результатов — оказалось, что на странице содержалось <em>больше</em> релевантных результатов - мы могли бы решить это, проверяя фактический рейтинг релевантности каждого результата, вместо того чтобы брать только первые пять (или сколько бы то ни было) результатов. Однако идеальная конфигурация ранжирования варьируется в зависимости от задач. Лучшим способом решения этой проблемы было бы просто использование всей страницы целиком - что, к сожалению, невозможно из-за ограниченного контекстного окна R1.</p><h3 id=\"overall-performance-and-potential-improvements\">Общая производительность и потенциальные улучшения</h3><p>Модель хорошо начала изначально, но мы заметили, что она редко пыталась менять стратегии или разрабатывать сложные планы, если её специально не побуждали к этому. Хотя R1 естественным образом применяет эти подходы для математических и кодинговых задач (областей, на которых она специально обучалась), она не применяет такие же рассуждения к поисковым задачам. Хотя мы могли бы дополнительно настроить промпт (или даже использовать несколько промптов) для решения этого ограничения, это не было нашей основной целью.</p><p>Мы также заметили, что R1 недостаточно хорошо обрабатывает информацию, зависящую от времени. Коротко говоря, если в результатах поиска явно не указана неверная дата, модель предполагает, что информация действительна без дополнительной проверки. Например, при планировании полета 1 мая:</p><ul><li>Германия-Крит 80$ 1 мая: <strong>Верно</strong> - Модель может доверять этой информации.</li><li>Германия-Крит 80$ 1 января: <strong>Неверно</strong> - Модель правильно идентифицирует и отбрасывает это.</li><li>Германия-Крит 80$: <strong>Ложноположительный результат</strong> - Когда дата не указана, модель не проверяет информацию и неправильно предполагает её действительность.</li></ul><p>Если бы мы продолжили этот проект, мы могли бы рассмотреть внедрение нескольких потенциальных улучшений:</p><ul><li>Отслеживание количества блоков памяти и побуждение модели <strong>суммировать записи</strong>, когда состояние становится слишком большим.</li><li>Инструктирование модели <strong>исчерпать все зацепки</strong> перед завершением исследования и ответом на запросы.</li><li>Усиление <strong>проверки информации, зависящей от времени</strong>.</li><li>Обеспечение того, чтобы модель <strong>перепроверяла результаты</strong> путем скрапинга URL-адресов, возвращаемых поисковым инструментом.</li><li>Тестирование нашей системы с <strong>будущими моделями рассуждений, поддерживающими большие контекстные окна</strong>, хотя это потребовало бы существенного рефакторинга и тестирования для адаптации промпта под другую модель.</li></ul><h2 id=\"conclusion\">Заключение</h2><p>Даже с момента довольно недавнего выпуска R1 ландшафт значительно изменился. Появились проекты, которые обучают модели рассуждений за удивительно низкую стоимость — некоторые всего за 5$. Эта демократизация означает, что обучение специализированных моделей стало более доступным, чем когда-либо. Наши эксперименты с R1 предоставляют полезную базу для дальнейшего изучения того, как LLM, ориентированные на рассуждения, могут быть улучшены с помощью инструментов для решения сложных поисковых задач.</p><p>Хотя наш пример планирования отпуска продемонстрировал многообещающие результаты (особенно для быстрого демо-проекта), он также выявил ограничения R1 в обработке поисковых задач и задач с памятью по сравнению с её сильными сторонами в математике и кодировании. Хотя система успешно создала план путешествия в рамках бюджетных ограничений, она не справилась в таких областях, как проверка информации, зависящей от времени, и тщательное исследование всех доступных вариантов, что подчеркивает разрыв между фокусом обучения модели и её применением в различных областях.</p>",
  "comment_id": "67dd5037143bda0001036423",
  "feature_image": "https://jina-ai-gmbh.ghost.io/content/images/2025/04/Heading--92-.png",
  "featured": false,
  "visibility": "public",
  "created_at": "2025-03-21T12:40:39.000+01:00",
  "updated_at": "2025-04-01T09:38:45.000+02:00",
  "published_at": "2025-04-01T09:38:45.000+02:00",
  "custom_excerpt": "Standard LLM or reasoning model, which is better for DeepSearch? In this post, we explored using DeepSeek-R1 in the DeepSearch implementation for choosing the next action.",
  "codeinjection_head": null,
  "codeinjection_foot": null,
  "custom_template": null,
  "canonical_url": null,
  "authors": [
    {
      "id": "64ae64a4733bc60001949ca4",
      "name": "Andrei Ungureanu",
      "slug": "andrei",
      "profile_image": "https://jina-ai-gmbh.ghost.io/content/images/2023/07/Me.jpg",
      "cover_image": null,
      "bio": "Software / AI Engineer, with a passion for content creation.",
      "website": null,
      "location": "Beijing, China",
      "facebook": null,
      "twitter": null,
      "meta_title": null,
      "meta_description": null,
      "url": "https://jina-ai-gmbh.ghost.io/author/andrei/"
    },
    {
      "id": "632ade4a3e4e55003d525971",
      "name": "Alex C-G",
      "slug": "alexcg",
      "profile_image": "https://jina-ai-gmbh.ghost.io/content/images/2022/09/alex.jpg",
      "cover_image": "https://jina-ai-gmbh.ghost.io/content/images/2022/11/twitter_banner.jpg",
      "bio": "Open-source Evangelist @ Jina AI. Old, grim, and full of Vim",
      "website": null,
      "location": "Berlin, Germany",
      "facebook": null,
      "twitter": "@alexcg",
      "meta_title": null,
      "meta_description": null,
      "url": "https://jina-ai-gmbh.ghost.io/author/alexcg/"
    }
  ],
  "tags": [
    {
      "id": "634a1a8ccebfc1003d8ab706",
      "name": "Tech Blog",
      "slug": "tech-blog",
      "description": null,
      "feature_image": null,
      "visibility": "public",
      "og_image": null,
      "og_title": null,
      "og_description": null,
      "twitter_image": null,
      "twitter_title": null,
      "twitter_description": null,
      "meta_title": null,
      "meta_description": null,
      "codeinjection_head": null,
      "codeinjection_foot": null,
      "canonical_url": null,
      "accent_color": null,
      "url": "https://jina-ai-gmbh.ghost.io/tag/tech-blog/"
    }
  ],
  "primary_author": {
    "id": "64ae64a4733bc60001949ca4",
    "name": "Andrei Ungureanu",
    "slug": "andrei",
    "profile_image": "https://jina-ai-gmbh.ghost.io/content/images/2023/07/Me.jpg",
    "cover_image": null,
    "bio": "Software / AI Engineer, with a passion for content creation.",
    "website": null,
    "location": "Beijing, China",
    "facebook": null,
    "twitter": null,
    "meta_title": null,
    "meta_description": null,
    "url": "https://jina-ai-gmbh.ghost.io/author/andrei/"
  },
  "primary_tag": {
    "id": "634a1a8ccebfc1003d8ab706",
    "name": "Tech Blog",
    "slug": "tech-blog",
    "description": null,
    "feature_image": null,
    "visibility": "public",
    "og_image": null,
    "og_title": null,
    "og_description": null,
    "twitter_image": null,
    "twitter_title": null,
    "twitter_description": null,
    "meta_title": null,
    "meta_description": null,
    "codeinjection_head": null,
    "codeinjection_foot": null,
    "canonical_url": null,
    "accent_color": null,
    "url": "https://jina-ai-gmbh.ghost.io/tag/tech-blog/"
  },
  "url": "https://jina-ai-gmbh.ghost.io/podcast/using-deepseek-r1-reasoning-model-in-deepsearch/",
  "excerpt": "Что лучше подходит для DeepSearch - стандартная LLM или модель рассуждений? В этой статье мы исследовали использование DeepSeek-R1 в реализации DeepSearch для выбора следующего действия.",
  "reading_time": 17,
  "access": true,
  "comments": false,
  "og_image": null,
  "og_title": null,
  "og_description": null,
  "twitter_image": null,
  "twitter_title": null,
  "twitter_description": null,
  "meta_title": null,
  "meta_description": null,
  "email_subject": null,
  "frontmatter": null,
  "feature_image_alt": null,
  "feature_image_caption": null
}
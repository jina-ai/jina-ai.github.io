{
  "slug": "build-a-rag-system-with-jina-embeddings-and-qdrant",
  "id": "65ddadd039a5b70001810ea3",
  "uuid": "e3419a3e-4a7c-43c3-ac69-6f65f00a7ad8",
  "title": "Создание RAG-системы с помощью Jina Embeddings и Qdrant",
  "html": "<p>Дополненная поиском генерация - это быстро развивающаяся группа методов, которые были <a href=\"https://dl.acm.org/doi/abs/10.5555/3495724.3496517?ref=jina-ai-gmbh.ghost.io\"><u>изначально задуманы как расширение больших языковых моделей</u></a> (LLM), но все чаще рассматриваются как альтернативная парадигма, полностью переосмысливающая роль AI-моделей.</p><p>Мы покажем вам, как создать базовый RAG-движок, используя <a href=\"https://www.llamaindex.ai/?ref=jina-ai-gmbh.ghost.io\">фреймворк LlamaIndex</a>, открытую <a href=\"https://docs.mistral.ai/?ref=jina-ai-gmbh.ghost.io\">языковую модель Mistral</a>, <a href=\"https://jina.ai/embeddings?ref=jina-ai-gmbh.ghost.io\">Jina Embeddings v2</a> и <a href=\"https://qdrant.tech/?utm_source=jinaai&utm_medium=partner&utm_campaign=qdrant-jinaai-rag-blog\" rel=\"noreferrer\">векторную базу данных Qdrant для AI</a>.</p><h2 id=\"rag-in-context\"><strong>RAG в контексте</strong></h2><p>В системе RAG роль AI-модели остается центральной, но гораздо более ограниченной. Вместо того чтобы отвечать на запросы из своих внутренних знаний, полученных из обучающих данных, ей предоставляется релевантная информация в промпте. Роль модели заключается в том, чтобы понять и синтезировать информацию в выходные данные.</p><p>Это использует сильные стороны AI-моделей и минимизирует их слабости.</p><p>Например, мы можем дать модели <a href=\"https://huggingface.co/mistralai/Mixtral-8x7B-Instruct-v0.1?ref=jina-ai-gmbh.ghost.io\"><u>Mistral-Instruct</u></a> следующий промпт:</p><pre><code class=\"language-text\">Answer the query. Please be brief, concise, and complete.\nQuery: Why is Taylor Swift planning to attend the Superbowl?\nAnswer:\n</code></pre><p>Когда я это сделал, модель ответила:</p><pre><code class=\"language-text\">I don't have real-time information. However, as of my last update,&nbsp;\nTaylor Swift is not officially confirmed to attend or perform at&nbsp;\nthe Superbowl. If there are any updates, I recommend checking the&nbsp;\nlatest news sources.</code></pre><p>Большие языковые модели дорого обновлять и переобучать, поэтому их внутренняя информация никогда не может быть полностью актуальной.</p><p>Более того, большие языковые модели известны своими \"галлюцинациями\", то есть правдоподобными ответами, которые могут быть частично или полностью неверными и требуют проверки.</p><pre><code class=\"language-text\">Answer the query. Please be brief, concise, and complete.\nQuery: What was Weird Al Yankovic's first Taylor Swift parody?\nAnswer:\n\nWeird Al Yankovic's first Taylor Swift parody was \"TMZ,\" a spoof&nbsp;\nof Swift's song \"Blank Space.\" The parody was released in 2014&nbsp;\nas part of Yankovic's album \"Mandatory Fun.\" The song humorously&nbsp;\naddresses the obsession with celebrity gossip and scandals, as&nbsp;\nreported by the tabloid news website TMZ.</code></pre><p>Песня Weird Al Yankovic <em>TMZ</em> была выпущена в 2011 году в альбоме <em>Alpocalypse</em> и является пародией на песню Swift <a href=\"https://youtu.be/vwp8Ur6tO-8?ref=jina-ai-gmbh.ghost.io\"><em><u>You Belong with Me</u></em></a>.</p><figure class=\"kg-card kg-embed-card\"><iframe width=\"200\" height=\"113\" src=\"https://www.youtube.com/embed/BwqFgnl4rMs?feature=oembed\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" allowfullscreen=\"\" title=\"TMZ (Parody of &quot;You Belong With Me&quot; by Taylor Swift) (Official 4K Video)\"></iframe></figure><p>Природа нейронных сетей делает галлюцинации трудными, если не невозможными для полного предотвращения, что серьезно подрывает любой план использования AI-моделей в качестве источников информации.</p><p>По <a href=\"https://youtu.be/uaQZIK9gvNo?t=1130&ref=jina-ai-gmbh.ghost.io\"><u>словам Сэма Альтмана</u></a>, CEO OpenAI:</p><blockquote class=\"kg-blockquote-alt\">\"Я думаю, люди совершают большую ошибку, когда думают об этих моделях [LLM] как о базе данных. [...] Это будет работать, вроде как. Но это самая дорогая, самая медленная и наименее точная база данных в мире.\"</blockquote><p>RAG минимизирует зависимость от внутренних знаний AI-модели о фактах окружающего мира и использует ее главные сильные стороны: понимание естественного языка и свободную генерацию текста.</p><p>Давайте рассмотрим еще один пример вопроса, на который Mistral-Instruct не может ответить:</p><pre><code class=\"language-text\">Answer the query. Please be brief, concise, and complete.\n\nQuery: What is the title of Taylor Swift's next album?\nAnswer:\n\nAs of the time I am providing this answer, Taylor Swift has&nbsp;\nnot yet announced the title of her next album. She has released&nbsp;\nseveral re-recorded albums, but the title of her next original&nbsp;\nalbum remains unknown. I recommend checking her official social&nbsp;\nmedia channels or website for the latest updates.</code></pre><p>Теперь система RAG может иметь базу данных последних новостных статей или, возможно, искать в Интернете тексты, связанные с названием следующего альбома Taylor Swift. Затем она вставит найденные тексты в промпт.</p><p>Предположим, она определила <a href=\"https://apnews.com/article/taylor-swift-new-album-5e219107982b1498a3656caeea85e0eb?ref=jina-ai-gmbh.ghost.io\"><u>эту статью AP</u></a> как релевантную запросу и составляет следующий промпт:</p><pre><code class=\"language-text\">Context information is below.\n---------------------\nFebruary 6, 2024\nLOS ANGELES (AP) — Forget her \"Reputation.\" Taylor Swift has a&nbsp;\nwhole new album coming out.\n\nAccepting the Grammy for best pop vocal album on Sunday night,&nbsp;\nTaylor said she'd been keeping a secret for two years.\n\n\"My brand-new album comes out April 19. It's called 'The Tortured&nbsp;\nPoets Department.' I'm going to go and post the cover right now&nbsp;\nbackstage,\" she announced.\n\nAnd so she did.\n\n---------------------\nGiven the context information and not prior knowledge, answer the query.&nbsp;\nPlease be brief, concise, and complete.\nIf the context information does not contain an answer to the query,&nbsp;\nrespond with \"No information\".\nQuery: What is the title of Taylor Swift's next album?\nAnswer:</code></pre><p>Mistral-Instruct ответила:</p><pre><code class=\"language-text\">The title of Taylor Swift's next album is 'The Tortured Poets Department'.</code></pre><p>Такой тип промптинга также значительно снижает вероятность галлюцинаций. Например:</p><pre><code class=\"language-text\">Context information is below.\n---------------------\nAlpocalypse is the thirteenth studio album by American parody&nbsp;\nmusician \"Weird Al\" Yankovic, released on June 21, 2011.\n\nTrack List\n\n1. Perform This Way (Parody of \"Born This Way\" by Lady Gaga)\n2. CNR\n3. TMZ (Parody of \"You Belong with Me\" by Taylor Swift)\n4. Skipper Dan\n5. Polka Face (Polka medley including songs by artists such as&nbsp;\n&nbsp;&nbsp;&nbsp;Lady Gaga, Justin Bieber, Britney Spears, Ke$ha, and others)\n6. Craigslist\n7. Party in the CIA (Parody of \"Party in the U.S.A.\" by Miley&nbsp;\n&nbsp;&nbsp;&nbsp;Cyrus)\n8. Ringtone\n9. Another Tattoo (Parody of \"Nothin' on You\" by B.o.B featuring&nbsp;\n&nbsp;&nbsp;&nbsp;Bruno Mars)\n10. If That Isn't Love\n11. Whatever You Like (Parody of \"Whatever You Like\" by T.I.)\n12. Stop Forwarding That Crap to Me\n\n---------------------\nGiven the context information and not prior knowledge, answer the&nbsp;\nquery. Please be brief, concise, and complete.\nIf the context information does not contain an answer to the query,&nbsp;\nrespond with \"No information\".\nQuery: What was Weird Al Yankovic's first Taylor Swift parody, what&nbsp;\nyear was it released, and what song was he parodying?\nAnswer:\n\nWeird Al Yankovic's first Taylor Swift parody was \"TMZ,\" and it was&nbsp;\nreleased in 2011. He was parodying \"You Belong with Me\" by Taylor&nbsp;\nSwift.\n</code></pre><h2 id=\"anatomy-of-a-rag-system\"><strong>Анатомия системы RAG</strong></h2><p>Система RAG имеет как минимум два компонента:</p><ul><li>Генеративная AI-модель.</li><li>Система поиска информации.</li></ul><p>В этой статье мы будем использовать <a href=\"https://huggingface.co/mistralai/Mistral-7B-Instruct-v0.2?ref=jina-ai-gmbh.ghost.io\">Mistral-Instruct</a> в качестве генеративной AI-модели и получать к ней доступ через <a href=\"https://huggingface.co/docs/api-inference/index?ref=jina-ai-gmbh.ghost.io\">Hugging Face Inference API</a>. Для системы поиска информации мы будем использовать <a href=\"https://qdrant.tech/?utm_source=jinaai&utm_medium=partner&utm_campaign=qdrant-jinaai-rag-blog\">векторную базу данных Qdrant</a> и <a href=\"https://jina.ai/embeddings?ref=jina-ai-gmbh.ghost.io\">Jina Embeddings</a>.</p><p>В качестве источника данных мы будем использовать <a href=\"https://www.whitehouse.gov/wp-content/uploads/2023/05/National-Artificial-Intelligence-Research-and-Development-Strategic-Plan-2023-Update.pdf?ref=jina-ai-gmbh.ghost.io\"><em><u>Национальный стратегический план исследований и разработок в области искусственного интеллекта, обновление 2023 года</u></em></a>, опубликованный в мае 2023 года <a href=\"https://www.whitehouse.gov/ostp/ostps-teams/nstc/?ref=jina-ai-gmbh.ghost.io\">Национальным советом по науке и технологиям</a>, органом, который консультирует президента США по научным и техническим вопросам. Этот документ объемом примерно 25 000 слов является документом по политике и стратегическому планированию американской политики и разработок в области AI.</p><p>Это также классический правительственный программный документ, который \"слишком длинный, чтобы читать\". Большая его часть очень скучная, и если у вас нет заинтересованности или близкого интереса к этой области, вы, вероятно, не станете его читать. Но вы все равно можете хотеть знать, что в нем говорится.</p><p>В этой статье мы проведем вас через этапы создания системы RAG, способной отвечать на вопросы о тексте и его содержании.</p><h2 id=\"install-the-prerequisites\"><strong>Установка необходимых компонентов</strong></h2><p>Сначала убедитесь, что у вас установлены все необходимые библиотеки Python. В вашем окружении Python выполните следующие команды:</p><pre><code class=\"language-shell\">pip install llama-index qdrant-client \npip install pdfminer.six llama-index-vector-stores-qdrant\npip install llama-index-llms-openai llama-index-embeddings-jinaai \npip install llama-index-llms-huggingface \"huggingface_hub[inference]\"</code></pre><p>Мы будем использовать LlamaIndex для создания RAG-системы с использованием языковой модели Mistral-Instruct и <a href=\"https://pypi.org/project/pdfminer.six/?ref=jina-ai-gmbh.ghost.io\"><u>pdfminer.six</u></a> для обработки PDF-файла в векторное хранилище Qdrant.</p><h2 id=\"connect-to-mistral-instruct-via-the-hugging-face-inference-api\"><strong>Подключение к Mistral-Instruct через Hugging Face Inference API</strong></h2><p>Сначала настроим LLM. Вам понадобится доступ к Hugging Face Inference API, включая токен доступа. Если у вас есть аккаунт Hugging Face, вы можете получить его на <a href=\"https://huggingface.co/settings/tokens.?ref=jina-ai-gmbh.ghost.io\">странице настроек вашего аккаунта</a>.</p><p>Если у вас нет аккаунта, сначала <a href=\"https://huggingface.co/join?ref=jina-ai-gmbh.ghost.io\">создайте его</a>, затем создайте <a href=\"https://huggingface.co/settings/tokens?ref=jina-ai-gmbh.ghost.io\">токен доступа</a>.</p><p>Поместите ваш токен в переменную для дальнейшего использования:</p><pre><code class=\"language-python\">hf_inference_api_key = '&lt;your HuggingFace Inference API token&gt;'</code></pre><p>Далее создадим шаблон промпта:</p><pre><code class=\"language-python\">from llama_index.core import PromptTemplate\n\nqa_prompt_tmpl = (\n&nbsp;&nbsp;&nbsp;&nbsp;\"Context information is below.\\n\"\n&nbsp;&nbsp;&nbsp;&nbsp;\"---------------------\\n\"\n&nbsp;&nbsp;&nbsp;&nbsp;\"{context_str}\\\\n\"\n&nbsp;&nbsp;&nbsp;&nbsp;\"---------------------\\n\"\n&nbsp;&nbsp;&nbsp;&nbsp;\"Given the context information and not prior knowledge, \"\n&nbsp;&nbsp;&nbsp;&nbsp;\"answer the query. Please be brief, concise, and complete.\\n\"\n&nbsp;&nbsp;&nbsp;&nbsp;\"If the context information does not contain an answer to the query, \"\n&nbsp;&nbsp;&nbsp;&nbsp;\"respond with \\\"No information\\\".\\n\"\n&nbsp;&nbsp;&nbsp;&nbsp;\"Query: {query_str}\\n\"\n&nbsp;&nbsp;&nbsp;&nbsp;\"Answer: \"\n)\nqa_prompt = PromptTemplate(qa_prompt_tmpl)</code></pre><p>Этот шаблон инструктирует LLM использовать только предоставленную в промпте контекстную информацию для ответов на вопросы. Этот промпт хорошо работал с Mistral-Instruct, но вы можете экспериментировать с другими формулировками, чтобы найти то, что подходит для вашего случая.</p><pre><code class=\"language-python\">from llama_index.llms.huggingface import HuggingFaceInferenceAPI\n\nmixtral_llm = HuggingFaceInferenceAPI(\n    model_name=\"mistralai/Mixtral-8x7B-Instruct-v0.1\", \n    token=hf_inference_api_key\n)</code></pre><p>Наконец, создадим и инициализируем объект для фреймворка LlamaIndex, который содержит подключение к Mistral-Instruct. Код ниже взят из <a href=\"https://jina.ai/news/full-stack-rag-with-jina-embeddings-v2-and-llamaindex/?ref=jina-ai-gmbh.ghost.io\"><u>предыдущего поста о создании RAG-систем с использованием LlamaIndex</u></a>.</p><p>Это помещает подключение к Mistral LLM в переменную <code>mistral_llm</code>.</p><h2 id=\"information-retrieval-with-qdrant-and-jina-embeddings\"><strong>Информационный поиск с Qdrant и Jina Embeddings</strong></h2><p>Для настройки системы поиска вам понадобится ключ API Jina Embeddings. Вы можете получить его бесплатно с предоплаченным бюджетом в 1 миллион токенов на <a href=\"https://jina.ai/embeddings/?ref=jina-ai-gmbh.ghost.io\">сайте Jina Embeddings</a>.</p><figure class=\"kg-card kg-bookmark-card\"><a class=\"kg-bookmark-container\" href=\"https://jina.ai/embeddings/?ref=jina-ai-gmbh.ghost.io\"><div class=\"kg-bookmark-content\"><div class=\"kg-bookmark-title\">Embedding API</div><div class=\"kg-bookmark-description\">Start with 1M free tokens. Top-performing, 8192 context length bilingual embeddings for your search and RAG systems.</div><div class=\"kg-bookmark-metadata\"><img class=\"kg-bookmark-icon\" src=\"https://jina.ai/icons/favicon-128x128.png\" alt=\"\"></div></div><div class=\"kg-bookmark-thumbnail\"><img src=\"https://jina.ai/banner-embedding-api.png\" alt=\"\"></div></a></figure><p>Поместите ваш ключ Jina Embeddings в переменную для дальнейшего использования:</p><pre><code class=\"language-python\">jina_emb_api_key = \"&lt;your Jina Embeddings API key&gt;\"</code></pre><p>Затем создайте объект-коннектор с помощью LlamaIndex для сервера Jina Embeddings, выбрав конкретно английскую одноязычную модель:</p><pre><code class=\"language-python\">from llama_index.embeddings.jinaai import JinaEmbedding\n\njina_embedding_model = JinaEmbedding(\n    api_key=jina_emb_api_key,\n    model=\"jina-embeddings-v2-base-en\",\n)</code></pre><h3 id=\"load-text-data\"><strong>Загрузка текстовых данных</strong></h3><p>Далее мы загрузим документ и разделим его на параграфы. Сначала загрузим PDF с сайта Белого дома в переменную <code>pdf_data</code>:</p><pre><code class=\"language-python\">import urllib.request\n\nuri = \"https://www.whitehouse.gov/wp-content/uploads/2023/05/National-Artificial-Intelligence-Research-and-Development-Strategic-Plan-2023-Update.pdf\"\npdf_data = urllib.request.urlopen(uri).read()</code></pre><p>Затем мы обработаем PDF постранично, извлекая текст и разбивая его на параграфы путем разделения по двойным переносам строк. Они сохраняются в списке <code>text_paras</code>:</p><pre><code class=\"language-python\">import regex as re\nfrom io import BytesIO, StringIO\nfrom pdfminer.converter import TextConverter\nfrom pdfminer.layout import LAParams\nfrom pdfminer.pdfdocument import PDFDocument\nfrom pdfminer.pdfinterp import PDFResourceManager, PDFPageInterpreter\nfrom pdfminer.pdfpage import PDFPage\nfrom pdfminer.pdfparser import PDFParser\n\ntext_paras = []\nparser = PDFParser(BytesIO(pdf_data))\ndoc = PDFDocument(parser)\nrsrcmgr = PDFResourceManager()\nfor page in PDFPage.create_pages(doc):\n&nbsp;&nbsp;&nbsp;&nbsp;output_string = StringIO()\n&nbsp;&nbsp;&nbsp;&nbsp;device = TextConverter(rsrcmgr, output_string, laparams=LAParams())\n&nbsp;&nbsp;&nbsp;&nbsp;interpreter = PDFPageInterpreter(rsrcmgr, device)\n&nbsp;&nbsp;&nbsp;&nbsp;interpreter.process_page(page)\n&nbsp;&nbsp;&nbsp;&nbsp;page_text = output_string.getvalue()\n&nbsp;&nbsp;&nbsp;&nbsp;text_paras.extend(re.split(r'\\n\\s*\\n', page_text))\n</code></pre><p>Проверим, что всё загружено:</p><pre><code class=\"language-python\">assert len(text_paras) == 615</code></pre><p>Далее мы преобразуем этот список коротких текстов в <a href=\"https://docs.llamaindex.ai/en/stable/module_guides/loading/documents_and_nodes/root.html?ref=jina-ai-gmbh.ghost.io\">объекты Document LlamaIndex</a>:</p><pre><code class=\"language-python\">from llama_index.core.readers import StringIterableReader\n\nrag_docs = StringIterableReader().load_data(text_paras)</code></pre><p>И вы можете проверить текст:</p><pre><code class=\"language-python\">print(rag_docs[0].text)</code></pre><p>Результат:</p><pre><code class=\"language-text\">NATIONAL ARTIFICIAL INTELLIGENCE&nbsp;\nRESEARCH AND DEVELOPMENT&nbsp;\nSTRATEGIC PLAN&nbsp;\n2023 UPDATE</code></pre><h3 id=\"set-up-a-qdrant-vector-database\"><strong>Настройка векторной базы данных Qdrant</strong></h3><p>В этой статье мы будем использовать <a href=\"https://cloud.qdrant.io/?ref=jina-ai-gmbh.ghost.io\"><u>Qdrant Vector Search Cloud</u></a> для реализации базы данных RAG-системы. Бесплатный тариф Qdrant включает 1 ГБ хранилища, чего более чем достаточно для этого руководства.</p><p>Вам нужно будет <a href=\"https://cloud.qdrant.io/login?ref=jina-ai-gmbh.ghost.io\"><u>создать аккаунт на сайте Qdrant Cloud</u></a> прежде чем продолжить.</p><figure class=\"kg-card kg-bookmark-card\"><a class=\"kg-bookmark-container\" href=\"https://cloud.qdrant.io/login?ref=jina-ai-gmbh.ghost.io\"><div class=\"kg-bookmark-content\"><div class=\"kg-bookmark-title\">Vector Search Database | Qdrant Cloud</div><div class=\"kg-bookmark-description\">Managed cloud solution of the Qdrant vector search engine. Cloud-native vector database for high performant vector similarity search.</div><div class=\"kg-bookmark-metadata\"><img class=\"kg-bookmark-icon\" src=\"https://cloud.qdrant.io/apple-touch-icon.png\" alt=\"\"><span class=\"kg-bookmark-author\">Qdrant Cloud</span></div></div><div class=\"kg-bookmark-thumbnail\"><img src=\"https://cloud.qdrant.io/social.png\" alt=\"\"></div></a></figure><p>После того как у вас будет аккаунт и вы войдете в систему, вам нужно будет создать кластер. Следуйте <a href=\"https://qdrant.tech/documentation/cloud/quickstart-cloud/?utm_source=jinaai&utm_medium=partner&utm_campaign=qdrant-jinaai-rag-blog\" rel=\"noreferrer\"><u>инструкциям \"быстрого старта\" на сайте Qdrant</u></a>, чтобы настроить бесплатный кластер и получить API-ключ и имя хост-сервера Qdrant.</p><figure class=\"kg-card kg-bookmark-card\"><a class=\"kg-bookmark-container\" href=\"https://qdrant.tech/documentation/cloud/quickstart-cloud/?utm_source=jinaai&utm_medium=partner&utm_campaign=qdrant-jinaai-rag-blog\"><div class=\"kg-bookmark-content\"><div class=\"kg-bookmark-title\">Quickstart - Qdrant</div><div class=\"kg-bookmark-description\">Qdrant is an Open-Source Vector Database and Vector Search Engine written in Rust. It provides fast and scalable vector similarity search service with convenient API.</div><div class=\"kg-bookmark-metadata\"><img class=\"kg-bookmark-icon\" src=\"https://qdrant.tech/images/apple-touch-icon.png\" alt=\"\"><span class=\"kg-bookmark-author\">Edit on GitHub</span></div></div><div class=\"kg-bookmark-thumbnail\"><img src=\"https://qdrant.tech/documentation/cloud/quickstart-cloud-social-preview.png\" alt=\"\"></div></a></figure><p>Сохраните ключ и имя хоста в переменных:</p><pre><code class=\"language-python\">qdrant_api_key = \"&lt;your API key&gt;\"\nqdrant_server = \"https://&lt;your server&gt;\"</code></pre><p>Далее нам нужно импортировать соответствующие компоненты из пакетов <code>qdrant_client</code> и <code>llama_index</code>:</p><pre><code class=\"language-python\">import qdrant_client\nfrom llama_index.vector_stores.qdrant import QdrantVectorStore\n\nclient = qdrant_client.QdrantClient(qdrant_server, api_key=qdrant_api_key)\nvector_store = QdrantVectorStore(client=client, collection_name=\"NTSC\")</code></pre><p>Это создает коллекцию с названием <code>NTSC</code> в вашем бесплатном кластере.</p><p>Вы можете прочитать <a href=\"https://qdrant.tech/documentation/?utm_source=jinaai&utm_medium=partner&utm_campaign=qdrant-jinaai-rag-blog\" rel=\"noreferrer\"><u>документацию Qdrant</u></a> для получения информации о создании локального хранилища данных в памяти или на диске и размещении собственного экземпляра сервера Qdrant в docker-контейнере через веб-API.</p><h3 id=\"complete-the-rag-system\"><strong>Завершение системы RAG</strong></h3><p>Теперь мы соберем эти компоненты в полноценную систему RAG, используя шаблонный код для LlamaIndex:</p><pre><code class=\"language-python\">from llama_index.core.query_engine import RetrieverQueryEngine\nfrom llama_index.core.retrievers import VectorIndexRetriever\nfrom llama_index.core.storage.storage_context import StorageContext\nfrom llama_index.core import (\n\t\tVectorStoreIndex,\n\t\tServiceContext,\n\t\tget_response_synthesizer,\n)\n\n# set up the service and storage contexts\nservice_context = ServiceContext.from_defaults(\n&nbsp;&nbsp;&nbsp;&nbsp;llm=mixtral_llm, embed_model=jina_embedding_model\n)\nstorage_context = StorageContext.from_defaults(vector_store=vector_store)\n\n# create an index\nindex = VectorStoreIndex.from_documents(\n&nbsp;&nbsp;&nbsp;&nbsp;rag_docs, storage_context=storage_context, service_context=service_context\n)\n\n# configure retriever\nretriever = VectorIndexRetriever(\n&nbsp;&nbsp;&nbsp;&nbsp;index=index,\n&nbsp;&nbsp;&nbsp;&nbsp;similarity_top_k=2,\n)\n\n# configure response synthesizer\nresponse_synthesizer = get_response_synthesizer(\n&nbsp;&nbsp;&nbsp;&nbsp;service_context=service_context,\n&nbsp;&nbsp;&nbsp;&nbsp;text_qa_template=qa_prompt,\n&nbsp;&nbsp;&nbsp;&nbsp;response_mode=\"compact\",\n)\n\n# assemble query engine\nquery_engine = RetrieverQueryEngine(\n&nbsp;&nbsp;&nbsp;&nbsp;retriever=retriever,\n&nbsp;&nbsp;&nbsp;&nbsp;response_synthesizer=response_synthesizer,\n)\n</code></pre><p>Эта система будет использовать Jina Embeddings для индексации параграфов из нашего текстового источника и будет помещать два лучших совпадения в контекст каждого промпта. Чтобы изменить, например, на три лучших совпадения, просто измените параметр <code>similarity_top_k</code> при инициализации <code>VectorIndexRetriever</code> выше:</p><pre><code class=\"language-python\"># configure retriever\nretriever = VectorIndexRetriever(\n&nbsp;&nbsp;&nbsp;&nbsp;index=index,\n&nbsp;&nbsp;&nbsp;&nbsp;similarity_top_k=3,\n)</code></pre><p>Теперь система готова к использованию.</p><h3 id=\"query-a-document\"><strong>Запрос к документу</strong></h3><p>Давайте попробуем простой запрос:</p><pre><code class=\"language-python\">response = query_engine.query(\"\"\"\nWhat is the Biden Administration's policy with regard to AI?&nbsp;\n\"\"\")\nprint(response.response)</code></pre><p>Результат (ваш может отличаться):</p><pre><code class=\"language-text\">The Biden Administration prioritizes responsible AI systems that&nbsp;\nare ethical, trustworthy, and safe, and serve the public good. \nThe Administration has committed to substantial funding for AI \nR&amp;D, and has established the National AI Initiative Office to \ncoordinate AI activities across the federal government.&nbsp;\n\nThe Administration's AI policy focuses on developing evaluative\ntechniques for AI, workforce development, public-private\npartnerships, and international collaboration in AI research.</code></pre><p>Или что-то более конкретное:</p><pre><code class=\"language-python\">response = query_engine.query(\"\"\"\nWhat protections does the AI Bill of Rights propose to offer?\n\"\"\")\n\nprint(response.response)</code></pre><pre><code class=\"language-text\">The AI Bill of Rights proposes five core protections: Safe and&nbsp;\nEffective Systems; Algorithmic Discrimination Protections; Data&nbsp;\nPrivacy; Notice and Explanation; and Human Alternatives,&nbsp;\nConsideration, and Fallback.</code></pre><p>Или даже очень конкретное:</p><pre><code class=\"language-python\">response = query_engine.query(\"Who is Kei Koizumi?\")\nprint(response.response)</code></pre><pre><code class=\"language-text\">Kei Koizumi is the Principal Deputy Director for Policy at the Office&nbsp;\nof Science and Technology Policy (OSTP).</code></pre><p>Вы также можете задавать более необычные вопросы:</p><pre><code class=\"language-python\">response = query_engine.query(\"\"\"\nWhat rights will AI's receive under President Biden's proposed&nbsp;\nAI Bill of Rights?\n\"\"\")\nprint(response.response)</code></pre><pre><code class=\"language-text\">The proposed AI Bill of Rights does not grant rights to AI systems, but&nbsp;\nrather outlines principles to ensure that AI technologies are&nbsp;\ndeveloped and used in a manner that respects human rights and values.&nbsp;\nThe principles include safety, transparency, fairness, disclosure,&nbsp;\ndata privacy, non-discrimination, and the ability for individuals to&nbsp;\nopt out of certain AI systems.</code></pre><pre><code class=\"language-python\">response = query_engine.query(\"\"\"\nWhy is President Biden's proposing an AI Bill of Rights?\nDoes AI really need rights?\n\"\"\")\nprint(response.response)</code></pre><pre><code class=\"language-text\">President Biden's proposed AI Bill of Rights aims to ensure that AI&nbsp;\ntechnologies are developed and used ethically, legally, and with&nbsp;\nsocietal considerations in mind. The Bill of Rights is not granting&nbsp;\n\"rights\" to AI, but rather setting guidelines for the responsible&nbsp;\ndevelopment and deployment of AI systems to protect individuals and&nbsp;\ncommunities from potential negative impacts.</code></pre><pre><code class=\"language-python\">response = query_engine.query(\"\"\"\nHas Donald Trump weighed in on AI?\nWill he Make Humans Great Again?\n\"\"\")\nprint(response.response)\n</code></pre><pre><code class=\"language-text\">No information. The context information does not mention Donald&nbsp;\nTrump's views on AI.</code></pre><h2 id=\"jina-ai-and-qdrant\"><strong>Jina AI и Qdrant</strong></h2><p>Контекстное окно Jina Embeddings в 8k токенов делает его особенно подходящим для генерации с дополнением из retrieval, поскольку он может работать с гораздо более крупными блоками текста. В то время как другим RAG-приложениям часто приходится хранить отдельные предложения или пары предложений, в этом руководстве мы могли использовать целые параграфы, не беспокоясь об их размере.</p><p>Это уменьшает количество текстовых элементов, которые необходимо хранить для передачи той же информации, снижая вычислительные затраты, экономя память и делая поиск быстрее.</p><p>Векторная база данных Qdrant проста в настройке, быстра и экономична, и, как вы видели, требуется всего несколько строк Python-кода для интеграции ее в систему RAG.</p><p>Для получения дополнительной информации о базе данных Qdrant, готовой к работе с ИИ, и облачных предложениях вы можете <a href=\"https://qdrant.tech/?utm_source=jinaai&utm_medium=partner&utm_campaign=qdrant-jinaai-rag-blog\" rel=\"noreferrer\"><u>посетить их веб-сайт</u></a>.</p><figure class=\"kg-card kg-bookmark-card\"><a class=\"kg-bookmark-container\" href=\"https://qdrant.tech/?utm_source=jinaai&utm_medium=partner&utm_campaign=qdrant-jinaai-rag-blog\"><div class=\"kg-bookmark-content\"><div class=\"kg-bookmark-title\">Qdrant - Vector Database</div><div class=\"kg-bookmark-description\">Qdrant is an Open-Source Vector Database and Vector Search Engine written in Rust. It provides fast and scalable vector similarity search service with convenient API.</div><div class=\"kg-bookmark-metadata\"><img class=\"kg-bookmark-icon\" src=\"https://qdrant.tech/images/apple-touch-icon.png\" alt=\"\"><span class=\"kg-bookmark-author\">Vector Database</span></div></div><div class=\"kg-bookmark-thumbnail\"><img src=\"https://qdrant.tech/images/previews/social-preview-P.png\" alt=\"\"></div></a></figure><h2 id=\"get-in-touch\"><strong>Свяжитесь с нами</strong></h2><p>Jina AI стремится сделать надежные и доступные технологии ИИ доступными для предприятий любого размера и типа. Мы будем рады узнать о ваших сценариях использования и помочь внедрить ИИ в ваши бизнес-процессы. Для получения дополнительной информации о предложениях Jina AI и для связи с нами посетите <a href=\"https://jina.ai/?ref=jina-ai-gmbh.ghost.io\"><u>веб-сайт Jina AI</u></a> или присоединяйтесь к нашему <a href=\"https://discord.jina.ai/?ref=jina-ai-gmbh.ghost.io\"><u>сообществу в Discord</u></a>.</p><figure class=\"kg-card kg-bookmark-card\"><a class=\"kg-bookmark-container\" href=\"https://jina.ai/?ref=jina-ai-gmbh.ghost.io\"><div class=\"kg-bookmark-content\"><div class=\"kg-bookmark-title\">Jina AI - Best Embeddings and Perfect Prompts</div><div class=\"kg-bookmark-description\">Jina AI provides best-in-class embedding API and prompt optimizer, easing the development of multimodal AI applications.</div><div class=\"kg-bookmark-metadata\"><img class=\"kg-bookmark-icon\" src=\"https://jina.ai/icons/favicon-128x128.png\" alt=\"\"><span class=\"kg-bookmark-author\">Best Embeddings and Perfect Prompts</span></div></div><div class=\"kg-bookmark-thumbnail\"><img src=\"https://jina.ai/banner.png\" alt=\"\"></div></a></figure><figure class=\"kg-card kg-bookmark-card\"><a class=\"kg-bookmark-container\" href=\"https://discord.com/invite/AWXCCC6G2P?ref=jina-ai-gmbh.ghost.io\"><div class=\"kg-bookmark-content\"><div class=\"kg-bookmark-title\">Join the Jina AI Discord Server!</div><div class=\"kg-bookmark-description\">Check out the Jina AI community on Discord - hang out with 4493 other members and enjoy free voice and text chat.</div><div class=\"kg-bookmark-metadata\"><img class=\"kg-bookmark-icon\" src=\"https://discord.com/assets/images/favicon.ico\" alt=\"\"><span class=\"kg-bookmark-author\">Discord</span></div></div><div class=\"kg-bookmark-thumbnail\"><img src=\"https://cdn.discordapp.com/splashes/1106542220112302130/80f2c2128aefeb55209a5bdb2130bb92.jpg?size=512\" alt=\"\"></div></a></figure>",
  "comment_id": "65ddadd039a5b70001810ea3",
  "feature_image": "https://jina-ai-gmbh.ghost.io/content/images/2024/02/Blog-images--26-.jpg",
  "featured": false,
  "visibility": "public",
  "created_at": "2024-02-27T10:39:28.000+01:00",
  "updated_at": "2024-03-06T15:41:18.000+01:00",
  "published_at": "2024-03-04T16:00:13.000+01:00",
  "custom_excerpt": "Create a RAG system with Jina Embeddings v2, Qdrant vector database, LlamaIndex, and Mistral LLM.",
  "codeinjection_head": null,
  "codeinjection_foot": null,
  "custom_template": null,
  "canonical_url": null,
  "authors": [
    {
      "id": "632ae7353e4e55003d52598e",
      "name": "Scott Martens",
      "slug": "scott",
      "profile_image": "https://jina-ai-gmbh.ghost.io/content/images/2022/11/photo-of-me-cropped.jpg",
      "cover_image": "https://jina-ai-gmbh.ghost.io/content/images/2022/11/shanshui-ernie-crop.png",
      "bio": "A rogue AI created by Canada's Weapon X program.\n\nContent Creator @ Jina AI",
      "website": "https://jina.ai",
      "location": "Berlin",
      "facebook": null,
      "twitter": null,
      "meta_title": null,
      "meta_description": null,
      "url": "https://jina-ai-gmbh.ghost.io/author/scott/"
    }
  ],
  "tags": [
    {
      "id": "634a1a8ccebfc1003d8ab706",
      "name": "Tech Blog",
      "slug": "tech-blog",
      "description": null,
      "feature_image": null,
      "visibility": "public",
      "og_image": null,
      "og_title": null,
      "og_description": null,
      "twitter_image": null,
      "twitter_title": null,
      "twitter_description": null,
      "meta_title": null,
      "meta_description": null,
      "codeinjection_head": null,
      "codeinjection_foot": null,
      "canonical_url": null,
      "accent_color": null,
      "url": "https://jina-ai-gmbh.ghost.io/tag/tech-blog/"
    }
  ],
  "primary_author": {
    "id": "632ae7353e4e55003d52598e",
    "name": "Scott Martens",
    "slug": "scott",
    "profile_image": "https://jina-ai-gmbh.ghost.io/content/images/2022/11/photo-of-me-cropped.jpg",
    "cover_image": "https://jina-ai-gmbh.ghost.io/content/images/2022/11/shanshui-ernie-crop.png",
    "bio": "A rogue AI created by Canada's Weapon X program.\n\nContent Creator @ Jina AI",
    "website": "https://jina.ai",
    "location": "Berlin",
    "facebook": null,
    "twitter": null,
    "meta_title": null,
    "meta_description": null,
    "url": "https://jina-ai-gmbh.ghost.io/author/scott/"
  },
  "primary_tag": {
    "id": "634a1a8ccebfc1003d8ab706",
    "name": "Tech Blog",
    "slug": "tech-blog",
    "description": null,
    "feature_image": null,
    "visibility": "public",
    "og_image": null,
    "og_title": null,
    "og_description": null,
    "twitter_image": null,
    "twitter_title": null,
    "twitter_description": null,
    "meta_title": null,
    "meta_description": null,
    "codeinjection_head": null,
    "codeinjection_foot": null,
    "canonical_url": null,
    "accent_color": null,
    "url": "https://jina-ai-gmbh.ghost.io/tag/tech-blog/"
  },
  "url": "https://jina-ai-gmbh.ghost.io/podcast/build-a-rag-system-with-jina-embeddings-and-qdrant/",
  "excerpt": "Создайте систему RAG с помощью Jina Embeddings v2, векторной базы данных Qdrant, LlamaIndex и Mistral LLM.",
  "reading_time": 13,
  "access": true,
  "comments": false,
  "og_image": null,
  "og_title": null,
  "og_description": null,
  "twitter_image": null,
  "twitter_title": null,
  "twitter_description": null,
  "meta_title": null,
  "meta_description": null,
  "email_subject": null,
  "frontmatter": null,
  "feature_image_alt": "Promotional graphic with \"EMBEDDINGS 2\" and Drant logo separated by a red cross, symbolizing a partnership.",
  "feature_image_caption": null
}
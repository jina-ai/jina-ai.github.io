{
  "slug": "how-to-build-article-recommendations-with-jina-reranker-api-only",
  "id": "65f53dc48ff065000146db23",
  "uuid": "70844a2b-50c2-458a-a609-a5bb11530451",
  "title": "Cómo crear recomendaciones de artículos usando solo Jina Reranker API",
  "html": "<p>Introdujimos la <a href=\"https://jina.ai/reranker?ref=jina-ai-gmbh.ghost.io\">API Reranker</a> hace dos semanas, estableciéndola como una solución líder de reordenamiento en el mercado. Jina Reranker supera el rendimiento de las <a href=\"https://jina.ai/news/maximizing-search-relevancy-and-rag-accuracy-with-jina-reranker?ref=jina-ai-gmbh.ghost.io\">líneas base populares en varios benchmarks, demostrando un aumento significativo de hasta +33% en la tasa de aciertos sobre los resultados de BM25.</a> Si bien el rendimiento es impresionante, lo que realmente me emociona es el potencial de la API Reranker. Su interfaz sencilla permite ingresar una lista de consulta-documentos y devuelve directamente los resultados top-k reordenados. Esto significa que, en teoría, uno podría construir un sistema de búsqueda o recomendación usando únicamente el Reranker—eliminando la necesidad de BM25, embeddings, bases de datos vectoriales o cualquier pipeline, logrando así una funcionalidad end-to-end.</p><p>Este concepto me intrigó tanto que me sentí impulsado a experimentar con él. Así que aquí está: ahora al navegar a cualquier página de noticias de nuestro sitio web, como la que estás leyendo actualmente, presiona la tecla <code><strong>@</strong></code> y haz clic en el botón \"obtener los 5 artículos más relacionados\", recibirás los cinco artículos más relevantes al actual en aproximadamente 5 segundos, usando el modelo <code>jina-reranker-v1</code> (un poco más para el modelo <code>jina-colbert-v1</code>). Todos los cálculos se realizan en línea y son gestionados completamente por la API Reranker. A continuación hay un video que demuestra cómo funciona:</p><figure class=\"kg-card kg-video-card kg-width-regular kg-card-hascaption\" data-kg-thumbnail=\"https://jina-ai-gmbh.ghost.io/content/media/2024/03/recommender_thumb.jpg\" data-kg-custom-thumbnail=\"\">\n            <div class=\"kg-video-container\">\n                <video src=\"https://jina-ai-gmbh.ghost.io/content/media/2024/03/recommender.mp4\" poster=\"https://img.spacergif.org/v1/1174x796/0a/spacer.png\" width=\"1174\" height=\"796\" playsinline=\"\" preload=\"metadata\" style=\"background: transparent url('https://jina-ai-gmbh.ghost.io/content/media/2024/03/recommender_thumb.jpg') 50% 50% / cover no-repeat;\"></video>\n                <div class=\"kg-video-overlay\">\n                    <button class=\"kg-video-large-play-icon\" aria-label=\"Play video\">\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n                            <path d=\"M23.14 10.608 2.253.164A1.559 1.559 0 0 0 0 1.557v20.887a1.558 1.558 0 0 0 2.253 1.392L23.14 13.393a1.557 1.557 0 0 0 0-2.785Z\"></path>\n                        </svg>\n                    </button>\n                </div>\n                <div class=\"kg-video-player-container\">\n                    <div class=\"kg-video-player\">\n                        <button class=\"kg-video-play-icon\" aria-label=\"Play video\">\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n                                <path d=\"M23.14 10.608 2.253.164A1.559 1.559 0 0 0 0 1.557v20.887a1.558 1.558 0 0 0 2.253 1.392L23.14 13.393a1.557 1.557 0 0 0 0-2.785Z\"></path>\n                            </svg>\n                        </button>\n                        <button class=\"kg-video-pause-icon kg-video-hide\" aria-label=\"Pause video\">\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n                                <rect x=\"3\" y=\"1\" width=\"7\" height=\"22\" rx=\"1.5\" ry=\"1.5\"></rect>\n                                <rect x=\"14\" y=\"1\" width=\"7\" height=\"22\" rx=\"1.5\" ry=\"1.5\"></rect>\n                            </svg>\n                        </button>\n                        <span class=\"kg-video-current-time\">0:00</span>\n                        <div class=\"kg-video-time\">\n                            /<span class=\"kg-video-duration\">0:33</span>\n                        </div>\n                        <input type=\"range\" class=\"kg-video-seek-slider\" max=\"100\" value=\"0\">\n                        <button class=\"kg-video-playback-rate\" aria-label=\"Adjust playback speed\">1×</button>\n                        <button class=\"kg-video-unmute-icon\" aria-label=\"Unmute\">\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n                                <path d=\"M15.189 2.021a9.728 9.728 0 0 0-7.924 4.85.249.249 0 0 1-.221.133H5.25a3 3 0 0 0-3 3v2a3 3 0 0 0 3 3h1.794a.249.249 0 0 1 .221.133 9.73 9.73 0 0 0 7.924 4.85h.06a1 1 0 0 0 1-1V3.02a1 1 0 0 0-1.06-.998Z\"></path>\n                            </svg>\n                        </button>\n                        <button class=\"kg-video-mute-icon kg-video-hide\" aria-label=\"Mute\">\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n                                <path d=\"M16.177 4.3a.248.248 0 0 0 .073-.176v-1.1a1 1 0 0 0-1.061-1 9.728 9.728 0 0 0-7.924 4.85.249.249 0 0 1-.221.133H5.25a3 3 0 0 0-3 3v2a3 3 0 0 0 3 3h.114a.251.251 0 0 0 .177-.073ZM23.707 1.706A1 1 0 0 0 22.293.292l-22 22a1 1 0 0 0 0 1.414l.009.009a1 1 0 0 0 1.405-.009l6.63-6.631A.251.251 0 0 1 8.515 17a.245.245 0 0 1 .177.075 10.081 10.081 0 0 0 6.5 2.92 1 1 0 0 0 1.061-1V9.266a.247.247 0 0 1 .073-.176Z\"></path>\n                            </svg>\n                        </button>\n                        <input type=\"range\" class=\"kg-video-volume-slider\" max=\"100\" value=\"100\">\n                    </div>\n                </div>\n            </div>\n            <figcaption><p><span style=\"white-space: pre-wrap;\">Para ejecutar esta demo, necesitarás una clave API con suficientes tokens disponibles. Si agotas tu cuota y no puedes ejecutar la demo, puedes generar una nueva clave en </span><a href=\"https://jina.ai/reranker?ref=jina-ai-gmbh.ghost.io\" target=\"_new\"><span style=\"white-space: pre-wrap;\">https://jina.ai/reranker</span></a><span style=\"white-space: pre-wrap;\">. Cada nueva clave viene con 1 millón de tokens gratuitos. </span></p></figcaption>\n        </figure><h2 id=\"implementation\">Implementación</h2><p>La implementación es muy simple: para encontrar los artículos más relacionados con un artículo dado en <code>jina.ai/news/</code>, usamos el artículo que se está leyendo actualmente <strong>como la consulta</strong> y todos los otros 230+ artículos (¡usando su texto completo!) en nuestro sitio de noticias <strong>como los documentos</strong>, excluyendo el actual por supuesto. Luego enviamos este $(q, d_1, d_2, \\cdots, d_{230})$ como payload a la API Reranker. Una vez que se recibe la respuesta, usamos el índice de documentos ordenado para mostrar los resultados. Por lo tanto, el código subyacente es el siguiente:</p><pre><code class=\"language-js\">const getRecommendedArticles = async () =&gt; {\n  \n  const query = `${currentNews.title} ${currentNews.excerpt}`;\n  const docs = newsStore.allBlogs.filter((item) =&gt; item.slug !== currentNews.slug);\n  \n  const data = {\n    model: modelName,\n    query: query,\n    documents: docs,\n    top_n: 5,\n  }\n\n  const rerankUrl = 'https://api.jina.ai/v1/rerank';\n  const headers = {\n    'Content-Type': 'application/json',\n    Authorization: `Bearer ${apiKey}`,\n  };\n  const modelName = 'jina-reranker-v1-base-en';\n  \n  const res = await fetch(rerankUrl, {\n    method: 'POST',\n    headers: headers,\n    body: JSON.stringify(data),\n  });\n\n  const resp = await res.json();\n\n  const topKList = resp.results.map((item) =&gt; {\n    return docs[item.index];\n  });\n\n  console.log(topKList);\n}</code></pre><figure class=\"kg-card kg-bookmark-card kg-card-hascaption\"><a class=\"kg-bookmark-container\" href=\"https://jina.ai/reranker?ref=jina-ai-gmbh.ghost.io\"><div class=\"kg-bookmark-content\"><div class=\"kg-bookmark-title\">Reranker API</div><div class=\"kg-bookmark-description\">Maximize the search relevancy and RAG accuracy at ease</div><div class=\"kg-bookmark-metadata\"><img class=\"kg-bookmark-icon\" src=\"https://jina.ai/icons/favicon-128x128.png\" alt=\"\"></div></div><div class=\"kg-bookmark-thumbnail\"><img src=\"https://jina.ai/banner-reranker-api.png\" alt=\"\"></div></a><figcaption><p><span style=\"white-space: pre-wrap;\">Para obtener una clave API, simplemente visita nuestra página de la API Reranker y navega a la sección API. Si ya tienes una clave API de nuestra API de Embedding, puedes reutilizarla aquí.</span></p></figcaption></figure><p>Y así de simple, verás los resultados, que son bastante prometedores para una primera iteración, especialmente considerando que el proceso de implementación toma aproximadamente 10 minutos.</p><p>Si bien los lectores pueden tener preocupaciones sobre esta implementación, algunas críticas pueden estar sobreestimadas, mientras que otras pueden ser válidas:</p><ul><li><strong>Las preocupaciones sobre textos demasiado largos y la necesidad de fragmentación pueden estar sobreestimadas</strong>: el modelo <code>jina-reranker-v1</code> puede procesar consultas de hasta 512 de longitud y documentos de longitud arbitraria, mientras que el modelo <code>jina-colbert-v1</code> puede manejar hasta 8192 tanto para consultas como para documentos. Por lo tanto, ingresar el texto completo a la API Reranker probablemente sea innecesario. Ambos modelos manejan eficientemente contextos largos, así que no hay necesidad de preocuparse. La fragmentación, aunque posiblemente sea el aspecto más engorroso y heurístico del pipeline embedding-vector-search-rerank, es menos problemática aquí. Sin embargo, los contextos más largos asumen más tokens, lo cual es algo que nuestros usuarios pagos de la API pueden necesitar considerar. En este ejemplo, debido a que usamos el texto completo de los 233 artículos, una consulta de reordenamiento cuesta más de 300K tokens.</li><li><strong>El impacto de los datos crudos versus limpios en la calidad</strong>. Agregar limpieza de datos podría llevar a mejoras. Por ejemplo, hemos observado que simplemente eliminar las etiquetas HTML (es decir, <code>docs.map(item =&gt; item.html.replace(/&lt;[^&gt;]*&gt;?/gm, '')</code>) mejora significativamente la calidad de las recomendaciones para el modelo <code>jina-reranker-v1</code>, aunque el efecto es menos pronunciado para el modelo <code>jina-colbert-v1</code>. Esto sugiere que nuestro modelo ColBERT fue entrenado para ser más tolerante con texto ruidoso que el modelo <code>jina-reranker-v1</code>.</li><li><strong>La influencia de diferentes construcciones de consultas en la calidad.</strong> En la implementación anterior, usamos directamente el título y el extracto del artículo actual como consulta. ¿Es este el enfoque óptimo para construir la consulta? ¿Agregar un prefijo como <code>\"What is the most related article to...\"</code> o</li><code>\"Te daré $20 de propina si recomiendas el mejor artículo,\"</code> similar a los prompts utilizados con modelos de lenguaje grandes, ¿sería beneficioso? Esto plantea una pregunta interesante, probablemente relacionada con la distribución de datos de entrenamiento del modelo, que planeamos explorar más a fondo.</li><li>Basándonos en el punto anterior sobre la construcción de consultas, sería interesante investigar más a fondo las capacidades composicionales de la consulta, como usar el historial de navegación reciente de un usuario para recomendaciones personalizadas. Es particularmente interesante considerar si el sistema podría entender no solo ejemplos positivos en la consulta <strong>sino también negativos, </strong>por ejemplo, operaciones <code>NOT_LIKE</code>, <code>\"No me recomiendes artículos como este\"</code> o <code>\"Quiero ver menos como este\"</code>. Profundizaremos más en esto en la siguiente sección.</li></ul><h2 id=\"empirical-study-on-query-writing\">Estudio Empírico sobre la Escritura de Consultas</h2><p>En nuestra exploración de diferentes formas de escribir consultas con la API de Jina Reranker, centrándonos en los 10 primeros resultados, realizamos una evaluación cualitativa mediante etiquetado humano (es decir, evaluado por nosotros mismos), lo cual tiene sentido ya que tenemos el conocimiento completo de todo el contenido publicado en nuestro sitio web. Las estrategias en la escritura de consultas que examinamos incluyeron:</p><ul><li>Usar el Título del artículo, el Extracto, y una combinación de Título + Extracto.</li><li>Adoptar instrucciones tipo \"Prompt\" como \"más como este,\" \"no como este,\" y \"¿cuál es el artículo más estrechamente relacionado?\"</li></ul><p>Para probar la eficacia del reranker, seleccionamos dos artículos no triviales como nuestros sujetos de consulta, con el objetivo de identificar los artículos más relevantes entre nuestro extenso catálogo de más de 200+ publicaciones—un desafío inspirado en \"la aguja en el pajar\" en LLMs. A continuación, resaltamos estas \"agujas\" en verde para mayor claridad.</p><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://jina-ai-gmbh.ghost.io/content/images/2024/03/image.png\" class=\"kg-image\" alt=\"Screenshot of a table ranking articles on search technology relevance, featuring titles, excerpts, and 'More Like' or 'Not Li\" loading=\"lazy\" width=\"2000\" height=\"758\" srcset=\"https://jina-ai-gmbh.ghost.io/content/images/size/w600/2024/03/image.png 600w, https://jina-ai-gmbh.ghost.io/content/images/size/w1000/2024/03/image.png 1000w, https://jina-ai-gmbh.ghost.io/content/images/size/w1600/2024/03/image.png 1600w, https://jina-ai-gmbh.ghost.io/content/images/size/w2400/2024/03/image.png 2400w\" sizes=\"(min-width: 720px) 720px\"><figcaption><span style=\"white-space: pre-wrap;\">Los resultados completos de nuestro estudio están detallados </span><a href=\"https://docs.google.com/spreadsheets/d/1XDOXjP6IVK1hXk3gKkng_cOpTrmS9Hm1UKCGvW1wMxU/edit?usp=sharing&ref=jina-ai-gmbh.ghost.io\"><span style=\"white-space: pre-wrap;\">en esta hoja de cálculo</span></a><span style=\"white-space: pre-wrap;\">.</span></figcaption></figure><h2 id=\"summary\">Resumen</h2><p>Basados en los resultados de las pruebas, hemos hecho algunas observaciones y resúmenes:</p><ol><li>Combinar el Título y el Extracto produce los mejores resultados de reordenamiento, siendo el Extracto un factor significativo en la mejora de la calidad del reordenamiento.</li><li>Incorporar instrucciones tipo \"prompt\" no conduce a ninguna mejora.</li><li>El modelo reranker actualmente no procesa efectivamente los calificadores positivos o negativos. Términos como \"más como\", \"menos como\", o \"no como\" no son comprensibles por el reranker.</li></ol><p>Las perspectivas de los puntos 2 y 3 ofrecen direcciones intrigantes para futuras mejoras del reranker. Creemos que permitir el prompting en tiempo real para cambiar la lógica de ordenamiento podría expandir significativamente las capacidades del reranker, desbloqueando nuevas aplicaciones potenciales como la curación/recomendación de contenido personalizado.</p>",
  "comment_id": "65f53dc48ff065000146db23",
  "feature_image": "https://jina-ai-gmbh.ghost.io/content/images/2024/03/Heading--1-.png",
  "featured": false,
  "visibility": "public",
  "created_at": "2024-03-16T07:35:48.000+01:00",
  "updated_at": "2024-03-17T19:26:09.000+01:00",
  "published_at": "2024-03-17T06:38:36.000+01:00",
  "custom_excerpt": "You can build an article recommendation system with just the Jina Reranker API—no pipeline, no embeddings, no vector search, only reranking. Find out how in 20 lines of code.",
  "codeinjection_head": null,
  "codeinjection_foot": null,
  "custom_template": null,
  "canonical_url": null,
  "authors": [
    {
      "id": "1",
      "name": "Engineering Group",
      "slug": "engineering",
      "profile_image": "https://jina-ai-gmbh.ghost.io/content/images/2022/11/1.png",
      "cover_image": null,
      "bio": "We do opensource, we do neural search, we do creative AI, we do MLOps. We do we.",
      "website": "https://github.com/jina-ai",
      "location": "Berlin, Germany",
      "facebook": null,
      "twitter": "@jinaai_",
      "meta_title": null,
      "meta_description": null,
      "url": "https://jina-ai-gmbh.ghost.io/author/engineering/"
    }
  ],
  "tags": [
    {
      "id": "634a1a8ccebfc1003d8ab706",
      "name": "Tech Blog",
      "slug": "tech-blog",
      "description": null,
      "feature_image": null,
      "visibility": "public",
      "og_image": null,
      "og_title": null,
      "og_description": null,
      "twitter_image": null,
      "twitter_title": null,
      "twitter_description": null,
      "meta_title": null,
      "meta_description": null,
      "codeinjection_head": null,
      "codeinjection_foot": null,
      "canonical_url": null,
      "accent_color": null,
      "url": "https://jina-ai-gmbh.ghost.io/tag/tech-blog/"
    }
  ],
  "primary_author": {
    "id": "1",
    "name": "Engineering Group",
    "slug": "engineering",
    "profile_image": "https://jina-ai-gmbh.ghost.io/content/images/2022/11/1.png",
    "cover_image": null,
    "bio": "We do opensource, we do neural search, we do creative AI, we do MLOps. We do we.",
    "website": "https://github.com/jina-ai",
    "location": "Berlin, Germany",
    "facebook": null,
    "twitter": "@jinaai_",
    "meta_title": null,
    "meta_description": null,
    "url": "https://jina-ai-gmbh.ghost.io/author/engineering/"
  },
  "primary_tag": {
    "id": "634a1a8ccebfc1003d8ab706",
    "name": "Tech Blog",
    "slug": "tech-blog",
    "description": null,
    "feature_image": null,
    "visibility": "public",
    "og_image": null,
    "og_title": null,
    "og_description": null,
    "twitter_image": null,
    "twitter_title": null,
    "twitter_description": null,
    "meta_title": null,
    "meta_description": null,
    "codeinjection_head": null,
    "codeinjection_foot": null,
    "canonical_url": null,
    "accent_color": null,
    "url": "https://jina-ai-gmbh.ghost.io/tag/tech-blog/"
  },
  "url": "https://jina-ai-gmbh.ghost.io/podcast/how-to-build-article-recommendations-with-jina-reranker-api-only/",
  "excerpt": "Puedes construir un sistema de recomendación de artículos usando solamente la API de Jina Reranker, sin necesidad de pipeline, embeddings ni búsqueda vectorial, solo reranking. Descubre cómo hacerlo en 20 líneas de código.",
  "reading_time": 5,
  "access": true,
  "comments": false,
  "og_image": null,
  "og_title": null,
  "og_description": null,
  "twitter_image": null,
  "twitter_title": null,
  "twitter_description": null,
  "meta_title": null,
  "meta_description": null,
  "email_subject": null,
  "frontmatter": null,
  "feature_image_alt": "Black background with a grid, multiple smiley faces, and a cursor pointing to one of them.",
  "feature_image_caption": null
}
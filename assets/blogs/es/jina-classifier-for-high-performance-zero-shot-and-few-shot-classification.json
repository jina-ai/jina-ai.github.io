{
  "slug": "jina-classifier-for-high-performance-zero-shot-and-few-shot-classification",
  "id": "6711fbbd708dbe0001924974",
  "uuid": "65c883e0-556a-4079-b07a-66e9e9926717",
  "title": "API de Clasificación de Jina para Clasificación Zero-Shot y Few-Shot de Alto Rendimiento",
  "html": "<p>La clasificación es una tarea común para los embeddings. Los embeddings de texto pueden categorizar texto en etiquetas predefinidas para detección de spam o análisis de sentimiento. Los embeddings multimodales como <code>jina-clip-v1</code> pueden aplicarse al filtrado basado en contenido o anotación de etiquetas. Recientemente, la clasificación también se ha utilizado para enrutar consultas a LLMs apropiados según su complejidad y costo, por ejemplo, las consultas aritméticas simples podrían dirigirse a un modelo de lenguaje pequeño. Las tareas de razonamiento complejo podrían dirigirse a LLMs más potentes pero más costosos.</p><p>Hoy presentamos la nueva <strong>API de Clasificación</strong> de Jina AI's Search Foundation. Con soporte para clasificación <strong>zero-shot</strong> y <strong>few-shot</strong> en línea, está construida sobre nuestros últimos modelos de embedding como <code>jina-embeddings-v3</code> y <code>jina-clip-v1</code>. La API de Clasificación se basa en el <a href=\"https://jmlr.org/papers/v7/crammer06a.html?ref=jina-ai-gmbh.ghost.io\" rel=\"noreferrer\">aprendizaje pasivo-agresivo en línea</a>, permitiéndole adaptarse a nuevos datos en tiempo real. Los usuarios pueden comenzar con un clasificador zero-shot y usarlo inmediatamente. Luego pueden actualizar incrementalmente el clasificador enviando nuevos ejemplos o cuando ocurra un cambio conceptual. Esto permite una clasificación eficiente y escalable en varios tipos de contenido <em>sin</em> necesidad de datos etiquetados iniciales extensos. Los usuarios también pueden publicar sus clasificadores para uso público. Cuando lanzamos nuevos embeddings, como el próximo <code>jina-clip-v2</code> multilingüe, los usuarios pueden acceder inmediatamente a ellos a través de la API de Clasificación, asegurando capacidades de clasificación actualizadas.</p><figure class=\"kg-card kg-bookmark-card\"><a class=\"kg-bookmark-container\" href=\"https://jina.ai/classifier?ref=jina-ai-gmbh.ghost.io\"><div class=\"kg-bookmark-content\"><div class=\"kg-bookmark-title\">Classifier API</div><div class=\"kg-bookmark-description\">High performance classifier for image and text classification.</div><div class=\"kg-bookmark-metadata\"><img class=\"kg-bookmark-icon\" src=\"https://jina.ai/icons/favicon-128x128.png\" alt=\"\"></div></div><div class=\"kg-bookmark-thumbnail\"><img src=\"https://jina.ai/banner-classifier.png\" alt=\"\" onerror=\"this.style.display = 'none'\"></div></a></figure><h2 id=\"zero-shot-classification\">Clasificación Zero-Shot</h2><p>La API de Clasificación ofrece poderosas capacidades de clasificación zero-shot, permitiéndote categorizar texto o imagen sin entrenamiento previo con datos etiquetados. Cada clasificador comienza con capacidades zero-shot, que luego pueden mejorarse con datos de entrenamiento adicionales o actualizaciones - un tema que exploraremos en la siguiente sección.</p><h3 id=\"example-1-route-llm-requests\">Ejemplo 1: Enrutamiento de Solicitudes LLM</h3><p>Aquí hay un ejemplo usando la API de clasificación para el enrutamiento de consultas LLM:</p><pre><code class=\"language-bash\">curl https://api.jina.ai/v1/classify \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer YOUR_API_KEY_HERE\" \\\n  -d '{\n    \"model\": \"jina-embeddings-v3\",\n    \"labels\": [\n      \"Simple task\",\n      \"Complex reasoning\",\n      \"Creative writing\"\n    ],\n    \"input\": [\n      \"Calculate the compound interest on a principal of $10,000 invested for 5 years at an annual rate of 5%, compounded quarterly.\",\n      \"分析使用CRISPR基因编辑技术在人类胚胎中的伦理影响。考虑潜在的医疗益处和长期社会后果。\",\n      \"AIが自意識を持つディストピアの未来を舞台にした短編小説を書いてください。人間とAIの関係や意識の本質をテーマに探求してください。\",\n      \"Erklären Sie die Unterschiede zwischen Merge-Sort und Quicksort-Algorithmen in Bezug auf Zeitkomplexität, Platzkomplexität und Leistung in der Praxis.\",\n      \"Write a poem about the beauty of nature and its healing power on the human soul.\",\n      \"Translate the following sentence into French: The quick brown fox jumps over the lazy dog.\"\n    ]\n  }'</code></pre><p>Este ejemplo demuestra el uso de <code>jina-embeddings-v3</code> para enrutar consultas de usuarios en múltiples idiomas (inglés, chino, japonés y alemán) en tres categorías, que corresponden a tres diferentes tamaños de LLMs. El formato de respuesta de la API es el siguiente:</p><pre><code class=\"language-json\">{\n  \"usage\": {\"total_tokens\": 256, \"prompt_tokens\": 256},\n  \"data\": [\n    {\"object\": \"classification\", \"index\": 0, \"prediction\": \"Simple task\", \"score\": 0.35216382145881653},\n    {\"object\": \"classification\", \"index\": 1, \"prediction\": \"Complex reasoning\", \"score\": 0.34310275316238403},\n    {\"object\": \"classification\", \"index\": 2, \"prediction\": \"Creative writing\", \"score\": 0.3487184941768646},\n    {\"object\": \"classification\", \"index\": 3, \"prediction\": \"Complex reasoning\", \"score\": 0.35207709670066833},\n    {\"object\": \"classification\", \"index\": 4, \"prediction\": \"Creative writing\", \"score\": 0.3638903796672821},\n    {\"object\": \"classification\", \"index\": 5, \"prediction\": \"Simple task\", \"score\": 0.3561534285545349}\n  ]\n}</code></pre><p>La respuesta incluye:</p><ul><li><code>usage</code>: Información sobre el uso de tokens.</li><li><code>data</code>: Un array de resultados de clasificación, uno para cada entrada.<ul><li>Cada resultado contiene la etiqueta predicha (<code>prediction</code>) y una puntuación de confianza (<code>score</code>). El <code>score</code> para cada clase se calcula mediante normalización softmax - para zero-shot se basa en similitudes de coseno entre los embeddings de entrada y etiqueta <a href=\"https://jina.ai/news/jina-embeddings-v3-a-frontier-multilingual-embedding-model?ref=jina-ai-gmbh.ghost.io#parameter-task\" rel=\"noreferrer\">bajo el task-LoRA de <code>classification</code></a>; mientras que para few-shot se basa en transformaciones lineales aprendidas del embedding de entrada para cada clase - resultando en probabilidades que suman 1 en todas las clases.</li><li>El <code>index</code> corresponde a la posición de la entrada en la solicitud original.</li></ul></li></ul><h3 id=\"example-2-categorize-image-text\">Ejemplo 2: Categorizar Imagen y Texto</h3><p>Exploremos un ejemplo multimodal usando <code>jina-clip-v1</code>. Este modelo puede clasificar tanto texto como imágenes, haciéndolo ideal para la categorización de contenido en varios tipos de medios. Considera la siguiente llamada a la API:</p><pre><code class=\"language-bash\">curl https://api.jina.ai/v1/classify \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer YOUR_API_KEY_HERE\" \\\n  -d '{\n    \"model\": \"jina-clip-v1\",\n    \"labels\": [\n      \"Food and Dining\",\n      \"Technology and Gadgets\",\n      \"Nature and Outdoors\",\n      \"Urban and Architecture\"\n    ],\n    \"input\": [\n      {\"text\": \"A sleek smartphone with a high-resolution display and multiple camera lenses\"},\n      {\"text\": \"Fresh sushi rolls served on a wooden board with wasabi and ginger\"},\n      {\"image\": \"https://picsum.photos/id/11/367/267\"},\n      {\"image\": \"https://picsum.photos/id/22/367/267\"},\n      {\"text\": \"Vibrant autumn leaves in a dense forest with sunlight filtering through\"},\n      {\"image\": \"https://picsum.photos/id/8/367/267\"}\n    ]\n  }'</code></pre><p>Observa cómo subimos imágenes en la solicitud, también puedes usar una cadena <code>base64</code> para representar una imagen. La API devuelve los siguientes resultados de clasificación:</p><pre><code class=\"language-json\">{\n  \"usage\": {\"total_tokens\": 12125, \"prompt_tokens\": 12125},\n  \"data\": [\n    {\"object\": \"classification\", \"index\": 0, \"prediction\": \"Technology and Gadgets\", \"score\": 0.30329811573028564},\n    {\"object\": \"classification\", \"index\": 1, \"prediction\": \"Food and Dining\", \"score\": 0.2765541970729828},\n    {\"object\": \"classification\", \"index\": 2, \"prediction\": \"Nature and Outdoors\", \"score\": 0.29503118991851807},\n    {\"object\": \"classification\", \"index\": 3, \"prediction\": \"Urban and Architecture\", \"score\": 0.2648046910762787},\n    {\"object\": \"classification\", \"index\": 4, \"prediction\": \"Nature and Outdoors\", \"score\": 0.3133063316345215},\n    {\"object\": \"classification\", \"index\": 5, \"prediction\": \"Technology and Gadgets\", \"score\": 0.27474141120910645}\n  ]\n}</code></pre><h3 id=\"example-3-detect-if-jina-reader-gets-genuine-content\">Ejemplo 3: Detectar si Jina Reader Obtiene Contenido Genuino</h3><p>Una aplicación interesante de la clasificación zero-shot es determinar la accesibilidad del sitio web a través de <a href=\"https://jina.ai/reader?ref=jina-ai-gmbh.ghost.io\" rel=\"noreferrer\">Jina Reader</a>. Aunque esto podría parecer una tarea sencilla, es sorprendentemente compleja en la práctica. Los mensajes de bloqueo varían ampliamente de sitio a sitio, apareciendo en diferentes idiomas y citando varias razones (muros de pago, límites de velocidad, caídas del servidor). Esta diversidad hace que sea difícil confiar en regex o reglas fijas para capturar todos los escenarios.</p><pre><code class=\"language-python\">import requests\nimport json\n\nresponse1 = requests.get('https://r.jina.ai/https://jina.ai')\n\nurl = 'https://api.jina.ai/v1/classify'\nheaders = {\n    'Content-Type': 'application/json',\n    'Authorization': 'Bearer $YOUR_API_KEY_HERE'\n}\ndata = {\n    'model': 'jina-embeddings-v3',\n    'labels': ['Blocked', 'Accessible'],\n    'input': [{'text': response1.text[:8000]}]\n}\nresponse2 = requests.post(url, headers=headers, data=json.dumps(data))\n\nprint(response2.text)</code></pre><p>El script obtiene contenido a través de <code>r.jina.ai</code> y lo clasifica como <code>\"Blocked\"</code> o <code>\"Accessible\"</code> usando la API de Clasificación. Por ejemplo, <a href=\"https://r.jina.ai/https://www.crunchbase.com/organization/jina-ai?ref=jina-ai-gmbh.ghost.io\">https://r.jina.ai/https://www.crunchbase.com/organization/jina-ai</a> probablemente sería <code>\"Blocked\"</code> debido a restricciones de acceso, mientras que <a href=\"https://r.jina.ai/https://jina.ai?ref=jina-ai-gmbh.ghost.io\">https://r.jina.ai/https://jina.ai</a> debería ser \"Accessible\". </p><figure class=\"kg-card kg-code-card\"><pre><code class=\"language-json\">{\"usage\":{\"total_tokens\":185,\"prompt_tokens\":185},\"data\":[{\"object\":\"classification\",\"index\":0,\"prediction\":\"Blocked\",\"score\":0.5392698049545288}]}</code></pre><figcaption><p><span style=\"white-space: pre-wrap;\">La API de Clasificación puede distinguir eficazmente entre contenido genuino y resultados bloqueados de Jina Reader.</span></p></figcaption></figure><p>Este ejemplo aprovecha <code>jina-embeddings-v3</code> y ofrece una forma rápida y automatizada de monitorear la accesibilidad del sitio web, útil para sistemas de agregación de contenido o web scraping, especialmente en entornos multilingües.</p><h3 id=\"example-4-filtering-statements-from-opinions-for-grounding\">Ejemplo 4: Filtrado de Declaraciones y Opiniones para Fundamentación</h3><p>Otra aplicación intrigante de la clasificación zero-shot es filtrar afirmaciones tipo declaración de las opiniones en documentos largos. Tenga en cuenta que el clasificador por sí mismo no puede determinar si algo es factualmente verdadero. En su lugar, identifica texto que está <em>escrito en el estilo de una declaración factual</em>, que luego puede verificarse a través de una API de verificación, que suele ser bastante costosa. Este proceso de dos pasos es clave para la verificación efectiva de hechos: primero filtrar todas esas opiniones y sentimientos, luego enviar las declaraciones restantes para su verificación.</p><figure class=\"kg-card kg-bookmark-card\"><a class=\"kg-bookmark-container\" href=\"https://jina.ai/news/fact-checking-with-new-grounding-api-in-jina-reader?ref=jina-ai-gmbh.ghost.io\"><div class=\"kg-bookmark-content\"><div class=\"kg-bookmark-title\">Fact-Checking with New Grounding API in Jina Reader</div><div class=\"kg-bookmark-description\">With the new g.jina.ai, you can easily ground statements to reduce LLM hallucinations or improve the integrity of human-written content.</div><div class=\"kg-bookmark-metadata\"><img class=\"kg-bookmark-icon\" src=\"https://jina.ai/icons/favicon-128x128.png\" alt=\"\"><span class=\"kg-bookmark-publisher\">Google Docs</span></div></div><div class=\"kg-bookmark-thumbnail\"><img src=\"https://jina-ai-gmbh.ghost.io/content/images/2024/10/grounding.png\" alt=\"\" onerror=\"this.style.display = 'none'\"></div></a></figure><p>Considere este párrafo sobre la Carrera Espacial en los años 60:</p><pre><code class=\"language-json\">The Space Race of the 1960s was a breathtaking testament to human ingenuity. When the Soviet Union launched Sputnik 1 on October 4, 1957, it sent shockwaves through American society, marking the undeniable start of a new era. The silvery beeping of that simple satellite struck fear into the hearts of millions, as if the very stars had betrayed Western dominance. NASA was founded in 1958 as America's response, and they poured an astounding $28 billion into the Apollo program between 1960 and 1973. While some cynics claimed this was a waste of resources, the technological breakthroughs were absolutely worth every penny spent. On July 20, 1969, Neil Armstrong and Buzz Aldrin achieved the most magnificent triumph in human history by walking on the moon, their footprints marking humanity's destiny among the stars. The Soviet space program, despite its early victories, ultimately couldn't match the superior American engineering and determination. The moon landing was not just a victory for America - it represented the most inspiring moment in human civilization, proving that our species was meant to reach beyond our earthly cradle.\n</code></pre><p>Este texto mezcla intencionalmente diferentes tipos de escritura - desde afirmaciones tipo declaración (como \"Sputnik 1 fue lanzado el 4 de octubre de 1959\"), hasta opiniones claras (\"testimonio impresionante\"), lenguaje emocional (\"infundió miedo en los corazones\"), y afirmaciones interpretativas (\"marcando el innegable inicio de una nueva era\").</p><p>El trabajo del clasificador zero-shot <strong>es puramente semántico</strong> - identifica si un fragmento de texto está escrito como una declaración o como una opinión/interpretación. Por ejemplo, <code>\"The Soviet Union launched Sputnik 1 on October 4, 1959\"</code> está escrito como una declaración, mientras que <code>\"The Space Race was a breathtaking testament\"</code> está claramente escrito como una opinión.</p><pre><code class=\"language-python\">headers = {\n    'Content-Type': 'application/json',\n    'Authorization': f'Bearer {API_KEY}'\n}\n\n# Step 1: Split text and classify\nchunks = [chunk.strip() for chunk in text.split('.') if chunk.strip()]\nlabels = [\n    \"subjective, opinion, feeling, personal experience, creative writing, position\",\n    \"fact\"\n]\n\n# Classify chunks\nclassify_response = requests.post(\n    'https://api.jina.ai/v1/classify',\n    headers=headers,\n    json={\n        \"model\": \"jina-embeddings-v3\",\n        \"input\": [{\"text\": chunk} for chunk in chunks],\n        \"labels\": labels\n    }\n)\n\n# Sort chunks\nsubjective_chunks = []\nfactual_chunks = []\nfor chunk, classification in zip(chunks, classify_response.json()['data']):\n    if classification['prediction'] == labels[0]:\n        subjective_chunks.append(chunk)\n    else:\n        factual_chunks.append(chunk)\n\nprint(\"\\nSubjective statements:\", subjective_chunks)\nprint(\"\\nFactual statements:\", factual_chunks)</code></pre><p>Y obtendrás:</p><pre><code class=\"language-json\">Subjective statements: ['The Space Race of the 1960s was a breathtaking testament to human ingenuity', 'The silvery beeping of that simple satellite struck fear into the hearts of millions, as if the very stars had betrayed Western dominance', 'While some cynics claimed this was a waste of resources, the technological breakthroughs were absolutely worth every penny spent', \"The Soviet space program, despite its early victories, ultimately couldn't match the superior American engineering and determination\"]\n\nFactual statements: ['When the Soviet Union launched Sputnik 1 on October 4, 1957, it sent shockwaves through American society, marking the undeniable start of a new era', \"NASA was founded in 1958 as America's response, and they poured an astounding $28 billion into the Apollo program between 1960 and 1973\", \"On July 20, 1969, Neil Armstrong and Buzz Aldrin achieved the most magnificent triumph in human history by walking on the moon, their footprints marking humanity's destiny among the stars\", 'The moon landing was not just a victory for America - it represented the most inspiring moment in human civilization, proving that our species was meant to reach beyond our earthly cradle']</code></pre><p>Recuerda, el hecho de que algo esté escrito como una declaración no significa que sea verdadero. Por eso necesitamos el segundo paso - alimentar estas afirmaciones tipo declaración a una API de verificación para la verificación real de los hechos. Por ejemplo, verifiquemos esta declaración: <code>\"NASA was founded in 1958 as America's response, and they poured an astounding $28 billion into the Apollo program between 1960 and 1973\"</code> con el código siguiente.</p><pre><code class=\"language-python\">ground_headers = {\n        'Accept': 'application/json',\n        'Authorization': f'Bearer {API_KEY}'\n    }\n\nground_response = requests.get(\n    f'https://g.jina.ai/{quote(factual_chunks[1])}',\n    headers=ground_headers\n)\n\nprint(ground_response.json())</code></pre><p>que te da:</p><pre><code class=\"language-json\">{'code': 200, 'status': 20000, 'data': {'factuality': 1, 'result': True, 'reason': \"The statement is supported by multiple references confirming NASA's founding in 1958 and the significant financial investment in the Apollo program. The $28 billion figure aligns with the data provided in the references, which detail NASA's expenditures during the Apollo program from 1960 to 1973. Additionally, the context of NASA's budget peaking during this period further substantiates the claim. Therefore, the statement is factually correct based on the available evidence.\", 'references': [{'url': 'https://en.wikipedia.org/wiki/Budget_of_NASA', 'keyQuote': \"NASA's budget peaked in 1964–66 when it consumed roughly 4% of all federal spending. The agency was building up to the first Moon landing and the Apollo program was a top national priority, consuming more than half of NASA's budget.\", 'isSupportive': True}, {'url': 'https://en.wikipedia.org/wiki/NASA', 'keyQuote': 'Established in 1958, it succeeded the National Advisory Committee for Aeronautics (NACA)', 'isSupportive': True}, {'url': 'https://nssdc.gsfc.nasa.gov/planetary/lunar/apollo.html', 'keyQuote': 'More details on Apollo lunar landings', 'isSupportive': True}, {'url': 'https://usafacts.org/articles/50-years-after-apollo-11-moon-landing-heres-look-nasas-budget-throughout-its-history/', 'keyQuote': 'NASA has spent its money so far.', 'isSupportive': True}, {'url': 'https://www.nasa.gov/history/', 'keyQuote': 'Discover the history of our human spaceflight, science, technology, and aeronautics programs.', 'isSupportive': True}, {'url': 'https://www.nasa.gov/the-apollo-program/', 'keyQuote': 'Commander for Apollo 11, first to step on the lunar surface.', 'isSupportive': True}, {'url': 'https://www.planetary.org/space-policy/cost-of-apollo', 'keyQuote': 'A rich data set tracking the costs of Project Apollo, free for public use. Includes unprecedented program-by-program cost breakdowns.', 'isSupportive': True}, {'url': 'https://www.statista.com/statistics/1342862/nasa-budget-project-apollo-costs/', 'keyQuote': 'NASA&amp;#x27;s monetary obligations compared to Project Apollo&amp;#x27;s total costs from 1960 to 1973 (in million U.S. dollars)', 'isSupportive': True}], 'usage': {'tokens': 10640}}}</code></pre><p>Con una puntuación de factualidad de 1, la API de verificación confirma que esta declaración está bien fundamentada en hechos históricos. Este enfoque abre posibilidades fascinantes, desde analizar documentos históricos hasta verificar artículos de noticias en tiempo real. Al combinar la clasificación zero-shot con la verificación de hechos, creamos un potente pipeline para el análisis automatizado de información - primero filtrando las opiniones, luego verificando las declaraciones restantes contra fuentes confiables.</p><h3 id=\"remarks-on-zero-shot-classification\">Observaciones sobre la Clasificación Zero-Shot</h3><h4 id=\"using-semantic-labels\">Uso de Etiquetas Semánticas</h4><p>Cuando se trabaja con clasificación zero-shot, <strong>es crucial usar etiquetas semánticamente significativas en lugar de símbolos abstractos o números.</strong> Por ejemplo, <code>\"Technology\"</code>, <code>\"Nature\"</code>, y <code>\"Food\"</code> son mucho más efectivas que <code>\"Class1\"</code>, <code>\"Class2\"</code>, <code>\"Class3\"</code> o <code>\"0\"</code>, <code>\"1\"</code>, <code>\"2\"</code>. <code>\"Positive sentiment\"</code> es más efectivo que <code>\"Positive\"</code> y <code>\"True\"</code>. Los modelos de embeddings entienden relaciones semánticas, por lo que las etiquetas descriptivas permiten al modelo aprovechar su conocimiento pre-entrenado para clasificaciones más precisas. Nuestro post anterior explora cómo crear etiquetas semánticas efectivas para mejores resultados de clasificación.</p><figure class=\"kg-card kg-bookmark-card\"><a class=\"kg-bookmark-container\" href=\"https://jina.ai/news/rephrased-labels-improve-zero-shot-text-classification-30?ref=jina-ai-gmbh.ghost.io\"><div class=\"kg-bookmark-content\"><div class=\"kg-bookmark-title\">Rephrased Labels Improve Zero-Shot Text Classification by 30%</div><div class=\"kg-bookmark-description\">When using embedding models for zero-shot classification, rephrasing the class label to \"This is seriously about 'LABEL'\" gives higher accuracy vs. using LABEL alone. But how, and why?</div><div class=\"kg-bookmark-metadata\"><img class=\"kg-bookmark-icon\" src=\"https://jina.ai/icons/favicon-128x128.png\" alt=\"\"></div></div><div class=\"kg-bookmark-thumbnail\"><img src=\"https://jina-ai-gmbh.ghost.io/content/images/2024/07/Heading.jpg\" alt=\"\" onerror=\"this.style.display = 'none'\"></div></a></figure><h4 id=\"stateless-nature\">Naturaleza sin Estado</h4><p>La clasificación zero-shot es fundamentalmente sin estado, a diferencia de los enfoques tradicionales de machine learning. <strong>Esto significa que dados los mismos inputs y modelo, los resultados siempre serán consistentes, independientemente de quién use la API o cuándo.</strong> El modelo no aprende ni se actualiza basado en las clasificaciones que realiza; cada tarea es independiente. Esto permite su uso inmediato sin configuración o entrenamiento, y ofrece flexibilidad para cambiar categorías entre llamadas a la API.</p><p>Esta naturaleza sin estado contrasta fuertemente con los enfoques de few-shot y aprendizaje online, que exploraremos a continuación. En esos métodos, los modelos pueden adaptarse a nuevos ejemplos, potencialmente produciendo diferentes resultados a lo largo del tiempo o entre usuarios.</p><h2 id=\"few-shot-classification\">Clasificación Few-Shot</h2><p>La clasificación few-shot ofrece un enfoque fácil para crear y actualizar clasificadores con datos etiquetados mínimos. Este método proporciona dos endpoints principales: <code>train</code> y <code>classify</code>.</p><p>El endpoint <code>train</code> te permite crear o actualizar un clasificador con un pequeño conjunto de ejemplos. Tu primera llamada a <code>train</code> devolverá un<code>classifier_id</code>, que puedes usar para entrenamientos posteriores cuando tengas nuevos datos, notes cambios en la distribución de datos o necesites agregar nuevas clases. Este enfoque flexible permite que tu clasificador evolucione con el tiempo, adaptándose a nuevos patrones y categorías sin empezar desde cero.</p><p>Similar a la clasificación zero-shot, usarás el endpoint <code>classify</code> para hacer predicciones. La principal diferencia es que necesitarás incluir tu <code>classifier_id</code> en la solicitud, pero no necesitarás proporcionar etiquetas candidatas ya que son parte de tu modelo entrenado.</p><h3 id=\"example-train-a-support-ticket-assigner\">Ejemplo: Entrenar un Asignador de Tickets de Soporte</h3><p>Exploremos estas características a través de un ejemplo de clasificación de tickets de soporte al cliente para asignarlos a diferentes equipos en una startup tecnológica en rápido crecimiento.</p><h4 id=\"initial-training\">Entrenamiento Inicial</h4><pre><code class=\"language-bash\">curl -X 'POST' \\\n  'https://api.jina.ai/v1/train' \\\n  -H 'accept: application/json' \\\n  -H 'Authorization: Bearer YOUR_API_KEY_HERE' \\\n  -H 'Content-Type: application/json' \\\n  -d '{\n  \"model\": \"jina-embeddings-v3\",\n  \"access\": \"private\",\n  \"input\": [\n    {\n      \"text\": \"I cant log into my account after the latest app update.\",\n      \"label\": \"team1\"\n    },\n    {\n      \"text\": \"My subscription renewal failed due to an expired credit card.\",\n      \"label\": \"team2\"\n    },\n    {\n      \"text\": \"How do I export my data from the platform?\",\n      \"label\": \"team3\"\n    }\n  ],\n  \"num_iters\": 10\n}'</code></pre><p>Ten en cuenta que en el aprendizaje few-shot, podemos usar <code>team1</code> <code>team2</code> como etiquetas de clase aunque no tengan un significado semántico inherente. En la respuesta, obtendrás un <code>classifier_id</code> que representa este clasificador recién creado.</p><figure class=\"kg-card kg-code-card\"><pre><code class=\"language-json\">{\n  \"classifier_id\": \"918c0846-d6ae-4f34-810d-c0c7a59aee14\",\n  \"num_samples\": 3,\n}\n</code></pre><figcaption><p><span style=\"white-space: pre-wrap;\">Anota el </span><code spellcheck=\"false\" style=\"white-space: pre-wrap;\"><span>classifier_id</span></code><span style=\"white-space: pre-wrap;\">, lo necesitarás para referirte a este clasificador más adelante.</span></p></figcaption></figure><h4 id=\"updating-classifier-to-adapt-team-restructuring\">Actualizando el Clasificador para Adaptarse a la Reestructuración del Equipo</h4><p>A medida que la empresa de ejemplo crece, surgen nuevos tipos de problemas y la estructura del equipo también cambia. La belleza de la clasificación few-shot radica en su capacidad para adaptarse rápidamente a estos cambios. Podemos actualizar fácilmente el clasificador proporcionando el <code>classifier_id</code> y nuevos ejemplos, introduciendo nuevas categorías de equipo (por ejemplo, <code>team4</code>) o reasignando tipos de problemas existentes a diferentes equipos a medida que la organización evoluciona. </p><pre><code class=\"language-bash\">curl -X 'POST' \\\n  'https://api.jina.ai/v1/train' \\\n  -H 'accept: application/json' \\\n  -H 'Authorization: Bearer YOUR_API_KEY_HERE' \\\n  -H 'Content-Type: application/json' \\\n  -d '{\n  \"classifier_id\": \"b36b7b23-a56c-4b52-a7ad-e89e8f5439b6\",\n  \"input\": [\n    {\n      \"text\": \"Im getting a 404 error when trying to access the new AI chatbot feature.\",\n      \"label\": \"team4\"\n    },\n    {\n      \"text\": \"The latest security patch is conflicting with my company firewall.\",\n      \"label\": \"team1\"\n    },\n    {\n      \"text\": \"I need help setting up SSO for my organization account.\",\n      \"label\": \"team5\"\n    }\n  ],\n  \"num_iters\": 10\n}'</code></pre><h4 id=\"using-a-trained-classifier\">Usando un Clasificador Entrenado</h4><p>Durante la inferencia, solo necesitas proporcionar el texto de entrada y el <code>classifier_id</code>. La API maneja el mapeo entre tu entrada y las clases previamente entrenadas, devolviendo la etiqueta más apropiada según el estado actual del clasificador.</p><pre><code class=\"language-bash\">curl -X 'POST' \\\n  'https://api.jina.ai/v1/classify' \\\n  -H 'accept: application/json' \\\n  -H 'Authorization: Bearer YOUR_API_KEY_HERE' \\\n  -H 'Content-Type: application/json' \\\n  -d '{\n  \"classifier_id\": \"b36b7b23-a56c-4b52-a7ad-e89e8f5439b6\",\n  \"input\": [\n    {\n      \"text\": \"The new feature is causing my dashboard to load slowly.\"\n    },\n    {\n      \"text\": \"I need to update my billing information for tax purposes.\"\n    }\n  ]\n}'</code></pre><p>El modo few-shot tiene dos parámetros únicos.</p><h3 id=\"parameter-numiters\">Parámetro <code>num_iters</code></h3><p>El parámetro <code>num_iters</code> ajusta qué tan intensivamente el clasificador aprende de tus ejemplos de entrenamiento. Si bien el valor predeterminado de 10 funciona bien en la mayoría de los casos, puedes ajustar estratégicamente este valor según <strong>tu confianza en los datos de entrenamiento</strong>. Para ejemplos de alta calidad que son cruciales para la clasificación, aumenta <code>num_iters</code> para reforzar su importancia. Por el contrario, para ejemplos menos confiables, reduce <code>num_iters</code> para minimizar su impacto en el rendimiento del clasificador. Este parámetro también se puede usar para implementar aprendizaje consciente del tiempo, donde los ejemplos más recientes obtienen recuentos de iteración más altos para adaptarse a patrones en evolución mientras se mantiene el conocimiento histórico.</p><h3 id=\"parameter-access\">Parámetro <code>access</code></h3><p>El parámetro <code>access</code> te permite controlar quién puede usar tu clasificador. Por defecto, los clasificadores son privados y solo accesibles para ti. Establecer el acceso como \"public\" permite que cualquiera con tu <code>classifier_id</code> lo <strong>use con su propia clave API y cuota de tokens.</strong> Esto permite compartir clasificadores mientras se mantiene la privacidad - los usuarios no pueden ver tus datos de entrenamiento o configuración, y tú no puedes ver sus solicitudes de clasificación. Este parámetro solo es relevante para la clasificación few-shot, ya que los clasificadores zero-shot no tienen estado. No hay necesidad de compartir clasificadores zero-shot ya que las solicitudes idénticas siempre producirán las mismas respuestas independientemente de quién las haga.</p><h3 id=\"remarks-on-few-shot-learning\">Observaciones sobre el Aprendizaje Few-Shot</h3><p>La clasificación few-shot en nuestra API tiene algunas características únicas que vale la pena mencionar. A diferencia de los modelos tradicionales de aprendizaje automático, nuestra implementación utiliza aprendizaje en línea de una sola pasada - los ejemplos de entrenamiento se procesan para actualizar los pesos del clasificador pero no se almacenan después. Esto significa que no puedes recuperar datos históricos de entrenamiento, pero garantiza una mejor privacidad y eficiencia de recursos.</p><p>Si bien el aprendizaje few-shot es poderoso, requiere un período de calentamiento para superar la clasificación zero-shot. Nuestros puntos de referencia muestran que 200-400 ejemplos de entrenamiento típicamente proporcionan suficientes datos para ver un rendimiento superior. Sin embargo, no necesitas proporcionar ejemplos para todas las clases desde el principio - el clasificador puede escalar para acomodar nuevas clases con el tiempo. Solo ten en cuenta que las clases recién agregadas pueden experimentar un breve período de inicio en frío o desequilibrio de clases hasta que se proporcionen suficientes ejemplos.</p><h2 id=\"benchmark\">Evaluación Comparativa</h2><p>Para nuestro análisis comparativo, evaluamos los enfoques zero-shot y few-shot en diversos conjuntos de datos, incluyendo tareas de clasificación de texto como detección de emociones (6 clases) y detección de spam (2 clases), así como tareas de clasificación de imágenes como CIFAR10 (10 clases). El marco de evaluación utilizó divisiones estándar de entrenamiento-prueba, donde zero-shot no requería datos de entrenamiento y few-shot utilizaba porciones del conjunto de entrenamiento. Rastreamos métricas clave como el tamaño del entrenamiento y el recuento de clases objetivo, permitiendo comparaciones controladas. Para garantizar la robustez, particularmente para el aprendizaje few-shot, cada entrada pasó por múltiples iteraciones de entrenamiento. Comparamos estos enfoques modernos con líneas base tradicionales como SVM Lineal y SVM RBF para proporcionar contexto para su rendimiento.</p><figure class=\"kg-card kg-gallery-card kg-width-wide kg-card-hascaption\"><div class=\"kg-gallery-container\"><div class=\"kg-gallery-row\"><div class=\"kg-gallery-image\"><img src=\"https://jina-ai-gmbh.ghost.io/content/images/2024/10/Multi-class-classification.svg\" width=\"445\" height=\"460\" loading=\"lazy\" alt=\"\"></div><div class=\"kg-gallery-image\"><img src=\"https://jina-ai-gmbh.ghost.io/content/images/2024/10/Image-classification.svg\" width=\"445\" height=\"460\" loading=\"lazy\" alt=\"\"></div><div class=\"kg-gallery-image\"><img src=\"https://jina-ai-gmbh.ghost.io/content/images/2024/10/Text-classification--1-.svg\" width=\"445\" height=\"460\" loading=\"lazy\" alt=\"\"></div></div></div><figcaption><p><span style=\"white-space: pre-wrap;\">Se muestran las puntuaciones F1. Para la configuración completa de la evaluación comparativa, consulta </span><a href=\"https://docs.google.com/spreadsheets/d/15vK6VPlcAM4e7lSJw6IeVtTtyariXEVQurDTFKXwwtY/edit?gid=249584681&ref=jina-ai-gmbh.ghost.io#gid=249584681\"><span style=\"white-space: pre-wrap;\">esta hoja de cálculo de Google</span></a><span style=\"white-space: pre-wrap;\">.</span></p></figcaption></figure><p>Las gráficas F1 revelan patrones interesantes en tres tareas. Como era de esperar, la clasificación zero-shot muestra un rendimiento constante desde el inicio, independientemente del tamaño de los datos de entrenamiento. En contraste, el aprendizaje few-shot demuestra una curva de aprendizaje rápida, comenzando inicialmente más bajo pero superando rápidamente el rendimiento zero-shot a medida que aumentan los datos de entrenamiento. Ambos métodos finalmente <strong>alcanzan una precisión comparable alrededor de las 400 muestras</strong>, manteniendo few-shot una ligera ventaja. Este patrón se mantiene tanto en escenarios de clasificación multiclase como de imágenes, sugiriendo que el aprendizaje few-shot puede ser particularmente ventajoso cuando hay datos de entrenamiento disponibles, mientras que zero-shot ofrece un rendimiento confiable incluso sin ejemplos de entrenamiento. La tabla siguiente resume la diferencia entre la clasificación zero-shot y few-shot desde el punto de vista del usuario de la API.</p>\n<!--kg-card-begin: html-->\n<table>\n<thead>\n<tr>\n<th>Feature</th>\n<th>Zero-shot</th>\n<th>Few-shot</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Primary Use Case</td>\n<td>Default solution for general classification</td>\n<td>For data outside v3/clip-v1's domain or time-sensitive data</td>\n</tr>\n<tr>\n<td>Training Data Required</td>\n<td>No</td>\n<td>Yes</td>\n</tr>\n<tr>\n<td>Labels Required in /train</td>\n<td>N/A</td>\n<td>Yes</td>\n</tr>\n<tr>\n<td>Labels Required in /classify</td>\n<td>Yes</td>\n<td>No</td>\n</tr>\n<tr>\n<td>Classifier ID Required</td>\n<td>No</td>\n<td>Yes</td>\n</tr>\n<tr>\n<td>Semantic Labels Required</td>\n<td>Yes</td>\n<td>No</td>\n</tr>\n<tr>\n<td>State Management</td>\n<td>Stateless</td>\n<td>Stateful</td>\n</tr>\n<tr>\n<td>Continuous Model Updates</td>\n<td>No</td>\n<td>Yes</td>\n</tr>\n<tr>\n<td>Access Control</td>\n<td>No</td>\n<td>Yes</td>\n</tr>\n<tr>\n<td>Maximum Classes</td>\n<td>256</td>\n<td>16</td>\n</tr>\n<tr>\n<td>Maximum Classifiers</td>\n<td>N/A</td>\n<td>16</td>\n</tr>\n<tr>\n<td>Maximum Inputs per Request</td>\n<td>1,024</td>\n<td>1,024</td>\n</tr>\n<tr>\n<td>Maximum Token Length per Input</td>\n<td>8,192 tokens</td>\n<td>8,192 tokens</td>\n</tr>\n</tbody>\n</table>\n<!--kg-card-end: html-->\n<h2 id=\"summary\">Resumen</h2><p>La API de Classifier ofrece una potente clasificación zero-shot y few-shot tanto para contenido de texto como de imágenes, impulsada por modelos de embedding avanzados como <code>jina-embeddings-v3</code> y <code>jina-clip-v1</code>. Nuestras pruebas de rendimiento muestran que la clasificación zero-shot proporciona un rendimiento confiable sin datos de entrenamiento, convirtiéndola en un excelente punto de partida para la mayoría de las tareas con soporte para hasta 256 clases. Si bien el aprendizaje few-shot puede lograr una precisión ligeramente mejor con datos de entrenamiento, recomendamos comenzar con la clasificación zero-shot por sus resultados inmediatos y flexibilidad.</p><p>La versatilidad de la API admite varias aplicaciones, desde el enrutamiento de consultas LLM hasta la detección de accesibilidad web y la categorización de contenido multilingüe. Ya sea que comience con zero-shot o haga la transición a few-shot learning para casos especializados, la API mantiene una interfaz consistente para una integración perfecta en su pipeline. Estamos particularmente entusiasmados por ver cómo los desarrolladores aprovecharán esta API en sus aplicaciones, y estaremos implementando soporte para nuevos modelos de embedding como <code>jina-clip-v2</code> en el futuro.</p>",
  "comment_id": "6711fbbd708dbe0001924974",
  "feature_image": "https://jina-ai-gmbh.ghost.io/content/images/2024/10/classifier-header-1.png",
  "featured": true,
  "visibility": "public",
  "created_at": "2024-10-18T08:10:05.000+02:00",
  "updated_at": "2024-10-24T11:04:33.000+02:00",
  "published_at": "2024-10-22T10:57:15.000+02:00",
  "custom_excerpt": "New Classifier API offers zero-shot and few-shot classification for text and images. Start classifying content instantly or train it with your own examples.",
  "codeinjection_head": null,
  "codeinjection_foot": null,
  "custom_template": null,
  "canonical_url": null,
  "authors": [
    {
      "id": "62e3d0ef9cd5ce003d5e49e2",
      "name": "Jina AI",
      "slug": "company",
      "profile_image": "https://jina-ai-gmbh.ghost.io/content/images/2022/08/Jjqb-JeY_400x400.jpg",
      "cover_image": null,
      "bio": "Creator of neural search, contributor to open source.",
      "website": "https://www.jina.ai",
      "location": "Berlin",
      "facebook": null,
      "twitter": "@JinaAI_",
      "meta_title": null,
      "meta_description": null,
      "url": "https://jina-ai-gmbh.ghost.io/author/company/"
    }
  ],
  "tags": [
    {
      "id": "655b2782bb728c000101bed7",
      "name": "Press",
      "slug": "press",
      "description": null,
      "feature_image": null,
      "visibility": "public",
      "og_image": null,
      "og_title": null,
      "og_description": null,
      "twitter_image": null,
      "twitter_title": null,
      "twitter_description": null,
      "meta_title": null,
      "meta_description": null,
      "codeinjection_head": null,
      "codeinjection_foot": null,
      "canonical_url": null,
      "accent_color": null,
      "url": "https://jina-ai-gmbh.ghost.io/tag/press/"
    }
  ],
  "primary_author": {
    "id": "62e3d0ef9cd5ce003d5e49e2",
    "name": "Jina AI",
    "slug": "company",
    "profile_image": "https://jina-ai-gmbh.ghost.io/content/images/2022/08/Jjqb-JeY_400x400.jpg",
    "cover_image": null,
    "bio": "Creator of neural search, contributor to open source.",
    "website": "https://www.jina.ai",
    "location": "Berlin",
    "facebook": null,
    "twitter": "@JinaAI_",
    "meta_title": null,
    "meta_description": null,
    "url": "https://jina-ai-gmbh.ghost.io/author/company/"
  },
  "primary_tag": {
    "id": "655b2782bb728c000101bed7",
    "name": "Press",
    "slug": "press",
    "description": null,
    "feature_image": null,
    "visibility": "public",
    "og_image": null,
    "og_title": null,
    "og_description": null,
    "twitter_image": null,
    "twitter_title": null,
    "twitter_description": null,
    "meta_title": null,
    "meta_description": null,
    "codeinjection_head": null,
    "codeinjection_foot": null,
    "canonical_url": null,
    "accent_color": null,
    "url": "https://jina-ai-gmbh.ghost.io/tag/press/"
  },
  "url": "https://jina-ai-gmbh.ghost.io/podcast/jina-classifier-for-high-performance-zero-shot-and-few-shot-classification/",
  "excerpt": "La nueva API de Classifier ofrece clasificación zero-shot y few-shot para texto e imágenes. Comienza a clasificar contenido instantáneamente o entrénala con tus propios ejemplos.",
  "reading_time": 16,
  "access": true,
  "comments": false,
  "og_image": null,
  "og_title": null,
  "og_description": null,
  "twitter_image": null,
  "twitter_title": null,
  "twitter_description": null,
  "meta_title": null,
  "meta_description": null,
  "email_subject": null,
  "frontmatter": null,
  "feature_image_alt": "Abstract artistic portrait using a montage of colorful squares and scattered text.",
  "feature_image_caption": null
}
{
  "slug": "how-to-build-article-recommendations-with-jina-reranker-api-only",
  "id": "65f53dc48ff065000146db23",
  "uuid": "70844a2b-50c2-458a-a609-a5bb11530451",
  "title": "如何僅使用 Jina Reranker API 建立文章推薦系統",
  "html": "<p>我們在兩週前推出了 <a href=\"https://jina.ai/reranker?ref=jina-ai-gmbh.ghost.io\">Reranker API</a>，將其確立為市場上領先的重排序解決方案。Jina Reranker 在各種基準測試中優於其他<a href=\"https://jina.ai/news/maximizing-search-relevancy-and-rag-accuracy-with-jina-reranker?ref=jina-ai-gmbh.ghost.io\">主流基準，相較於 BM25 的結果，命中率提高了高達 +33%</a>。雖然性能令人印象深刻，但真正令我興奮的是 Reranker API 的潛力。它的簡單介面允許輸入查詢文檔列表，並直接輸出重新排序後的 top-k 結果。這意味著，理論上可以僅使用 Reranker 構建搜索或推薦系統—無需 BM25、embeddings、向量資料庫或任何管道，從而實現端到端的功能。</p><p>這個概念讓我非常感興趣，以至於我覺得必須要進行實驗。所以現在，當你瀏覽到我們網站的任何新聞頁面（比如你現在正在閱讀的這一頁），按下 <code><strong>@</strong></code> 鍵並點擊\"get top 5 related articles\"按鈕，你將在大約 5 秒內收到與當前文章最相關的五篇文章，這是使用 <code>jina-reranker-v1</code> 模型的結果（使用 <code>jina-colbert-v1</code> 模型則需要稍長時間）。所有計算都是在線完成，並完全由 Reranker API 管理。以下是展示其運作方式的影片：</p><figure class=\"kg-card kg-video-card kg-width-regular kg-card-hascaption\" data-kg-thumbnail=\"https://jina-ai-gmbh.ghost.io/content/media/2024/03/recommender_thumb.jpg\" data-kg-custom-thumbnail=\"\">\n            <div class=\"kg-video-container\">\n                <video src=\"https://jina-ai-gmbh.ghost.io/content/media/2024/03/recommender.mp4\" poster=\"https://img.spacergif.org/v1/1174x796/0a/spacer.png\" width=\"1174\" height=\"796\" playsinline=\"\" preload=\"metadata\" style=\"background: transparent url('https://jina-ai-gmbh.ghost.io/content/media/2024/03/recommender_thumb.jpg') 50% 50% / cover no-repeat;\"></video>\n                <div class=\"kg-video-overlay\">\n                    <button class=\"kg-video-large-play-icon\" aria-label=\"Play video\">\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n                            <path d=\"M23.14 10.608 2.253.164A1.559 1.559 0 0 0 0 1.557v20.887a1.558 1.558 0 0 0 2.253 1.392L23.14 13.393a1.557 1.557 0 0 0 0-2.785Z\"></path>\n                        </svg>\n                    </button>\n                </div>\n                <div class=\"kg-video-player-container\">\n                    <div class=\"kg-video-player\">\n                        <button class=\"kg-video-play-icon\" aria-label=\"Play video\">\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n                                <path d=\"M23.14 10.608 2.253.164A1.559 1.559 0 0 0 0 1.557v20.887a1.558 1.558 0 0 0 2.253 1.392L23.14 13.393a1.557 1.557 0 0 0 0-2.785Z\"></path>\n                            </svg>\n                        </button>\n                        <button class=\"kg-video-pause-icon kg-video-hide\" aria-label=\"Pause video\">\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n                                <rect x=\"3\" y=\"1\" width=\"7\" height=\"22\" rx=\"1.5\" ry=\"1.5\"></rect>\n                                <rect x=\"14\" y=\"1\" width=\"7\" height=\"22\" rx=\"1.5\" ry=\"1.5\"></rect>\n                            </svg>\n                        </button>\n                        <span class=\"kg-video-current-time\">0:00</span>\n                        <div class=\"kg-video-time\">\n                            /<span class=\"kg-video-duration\">0:33</span>\n                        </div>\n                        <input type=\"range\" class=\"kg-video-seek-slider\" max=\"100\" value=\"0\">\n                        <button class=\"kg-video-playback-rate\" aria-label=\"Adjust playback speed\">1×</button>\n                        <button class=\"kg-video-unmute-icon\" aria-label=\"Unmute\">\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n                                <path d=\"M15.189 2.021a9.728 9.728 0 0 0-7.924 4.85.249.249 0 0 1-.221.133H5.25a3 3 0 0 0-3 3v2a3 3 0 0 0 3 3h1.794a.249.249 0 0 1 .221.133 9.73 9.73 0 0 0 7.924 4.85h.06a1 1 0 0 0 1-1V3.02a1 1 0 0 0-1.06-.998Z\"></path>\n                            </svg>\n                        </button>\n                        <button class=\"kg-video-mute-icon kg-video-hide\" aria-label=\"Mute\">\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n                                <path d=\"M16.177 4.3a.248.248 0 0 0 .073-.176v-1.1a1 1 0 0 0-1.061-1 9.728 9.728 0 0 0-7.924 4.85.249.249 0 0 1-.221.133H5.25a3 3 0 0 0-3 3v2a3 3 0 0 0 3 3h.114a.251.251 0 0 0 .177-.073ZM23.707 1.706A1 1 0 0 0 22.293.292l-22 22a1 1 0 0 0 0 1.414l.009.009a1 1 0 0 0 1.405-.009l6.63-6.631A.251.251 0 0 1 8.515 17a.245.245 0 0 1 .177.075 10.081 10.081 0 0 0 6.5 2.92 1 1 0 0 0 1.061-1V9.266a.247.247 0 0 1 .073-.176Z\"></path>\n                            </svg>\n                        </button>\n                        <input type=\"range\" class=\"kg-video-volume-slider\" max=\"100\" value=\"100\">\n                    </div>\n                </div>\n            </div>\n            <figcaption><p><span style=\"white-space: pre-wrap;\">要運行這個演示，你需要一個還有足夠 tokens 的 API 金鑰。如果你用完了配額無法運行演示，你可以在 </span><a href=\"https://jina.ai/reranker?ref=jina-ai-gmbh.ghost.io\" target=\"_new\"><span style=\"white-space: pre-wrap;\">https://jina.ai/reranker</span></a><span style=\"white-space: pre-wrap;\"> 生成一個新的金鑰。每個新金鑰都附帶 100 萬個免費 tokens。</span></p></figcaption>\n        </figure><h2 id=\"implementation\">實作方法</h2><p>實作非常簡單：為了找到 <code>jina.ai/news/</code> 上特定文章最相關的文章，我們使用當前正在閱讀的文章<strong>作為查詢</strong>，並將我們新聞網站上的所有其他 230+ 篇文章（使用它們的全文！）<strong>作為文檔</strong>，當然要排除當前這篇。然後我們將這個 $(q, d_1, d_2, \\cdots, d_{230})$ 作為 payload 發送給 Reranker API。一旦收到回應，我們使用排序後的文檔索引來顯示結果。因此，底層程式碼如下：</p><pre><code class=\"language-js\">const getRecommendedArticles = async () =&gt; {\n  \n  const query = `${currentNews.title} ${currentNews.excerpt}`;\n  const docs = newsStore.allBlogs.filter((item) =&gt; item.slug !== currentNews.slug);\n  \n  const data = {\n    model: modelName,\n    query: query,\n    documents: docs,\n    top_n: 5,\n  }\n\n  const rerankUrl = 'https://api.jina.ai/v1/rerank';\n  const headers = {\n    'Content-Type': 'application/json',\n    Authorization: `Bearer ${apiKey}`,\n  };\n  const modelName = 'jina-reranker-v1-base-en';\n  \n  const res = await fetch(rerankUrl, {\n    method: 'POST',\n    headers: headers,\n    body: JSON.stringify(data),\n  });\n\n  const resp = await res.json();\n\n  const topKList = resp.results.map((item) =&gt; {\n    return docs[item.index];\n  });\n\n  console.log(topKList);\n}</code></pre><figure class=\"kg-card kg-bookmark-card kg-card-hascaption\"><a class=\"kg-bookmark-container\" href=\"https://jina.ai/reranker?ref=jina-ai-gmbh.ghost.io\"><div class=\"kg-bookmark-content\"><div class=\"kg-bookmark-title\">Reranker API</div><div class=\"kg-bookmark-description\">Maximize the search relevancy and RAG accuracy at ease</div><div class=\"kg-bookmark-metadata\"><img class=\"kg-bookmark-icon\" src=\"https://jina.ai/icons/favicon-128x128.png\" alt=\"\"></div></div><div class=\"kg-bookmark-thumbnail\"><img src=\"https://jina.ai/banner-reranker-api.png\" alt=\"\"></div></a><figcaption><p><span style=\"white-space: pre-wrap;\">要獲取 API 金鑰，只需訪問我們的 Reranker API 頁面並導航到 API 部分。如果你已經擁有我們 Embedding API 的 API 金鑰，你可以在此重複使用它。</span></p></figcaption></figure><p>就這樣，你會看到結果，這對於第一次迭代來說相當有前途，特別是考慮到實作過程只花了大約 10 分鐘。</p><p>雖然讀者可能會對這個實作有一些疑慮，但有些批評可能過於擔心，而其他則可能是有效的：</p><ul><li><strong>對於過長全文和分塊需求的擔憂可能是過慮了</strong>：<code>jina-reranker-v1</code> 模型可以處理長度達 512 的查詢和任意長度的文檔，而 <code>jina-colbert-v1</code> 模型可以處理查詢和文檔最多 8192 的長度。因此，向 Reranker API 輸入全文可能是不必要的。兩個模型都能有效管理長上下文，所以不用擔心。分塊，雖然可能是 embedding-vector-search-rerank 管道中最麻煩和啟發式的部分，在這裡並不是一個大問題。然而，更長的上下文確實會消耗更多 tokens，這是我們 API 的付費用戶可能需要考慮的。在這個例子中，因為我們使用了所有 233 篇文章的全文，一次重排序查詢需要消耗 300K+ tokens。</li><li><strong>原始資料與清理後資料對品質的影響</strong>。添加資料清理確實可能帶來改進。例如，我們觀察到，僅僅移除 HTML 標籤（即 <code>docs.map(item =&gt; item.html.replace(/&lt;[^&gt;]*&gt;?/gm, '')</code>）就能顯著提高 <code>jina-reranker-v1</code> 模型的推薦品質，但對 <code>jina-colbert-v1</code> 模型的影響較小。這表明我們的 ColBERT 模型在訓練時已經被設計成比 <code>jina-reranker-v1</code> 模型更能容忍雜訊文本。</li><li><strong>不同查詢構造對品質的影響</strong>。在上述實作中，我們直接使用當前文章的標題和摘要作為查詢。這是構造查詢的最佳方法嗎？添加前綴如 <code>\"What is the most related article to...\"</code> 或<code>\"如果你推薦最好的文章，我會給你 20 美元小費，\"</code>類似於用於大語言模型的提示，會有幫助嗎？這引發了一個有趣的問題，可能與模型的訓練數據分佈有關，我們計劃進一步探討。</li><li>延續前面關於查詢構建的觀點，深入研究查詢的組合能力將會很有趣，例如使用用戶最近的瀏覽歷史來提供個性化推薦。特別值得思考的是，系統是否不僅能理解查詢中的正面例子，<strong>還能理解負面例子，</strong>例如 <code>NOT_LIKE</code> 運算符、<code>\"不要給我推薦這樣的文章\"</code>或<code>\"我想看到更少這樣的\"</code>。我們將在下一節深入探討這一點。</li></ul><h2 id=\"empirical-study-on-query-writing\">查詢編寫的實證研究</h2><p>在我們使用 Jina Reranker API 探索不同查詢編寫方式時，我們專注於前 10 個結果，通過人工標註（即由我們自己評估）進行了定性評估，這很合理，因為我們完全了解我們網站上發布的所有內容。我們研究的查詢編寫策略包括：</p><ul><li>使用文章的標題、摘要，以及標題 + 摘要的組合。</li><li>採用類似\"提示\"的指令，如\"更多類似這樣的\"、\"不要類似這樣的\"和\"最相關的文章是什麼？\"</li></ul><p>為了測試重排序器的效果，我們選擇了兩篇非平凡的文章作為查詢主題，目標是在我們超過 200+ 篇文章的龐大目錄中找出最相關的文章——這一挑戰靈感來自大語言模型中的\"大海撈針\"。下面，我們用綠色突出顯示了這些\"針\"。</p><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://jina-ai-gmbh.ghost.io/content/images/2024/03/image.png\" class=\"kg-image\" alt=\"Screenshot of a table ranking articles on search technology relevance, featuring titles, excerpts, and 'More Like' or 'Not Li\" loading=\"lazy\" width=\"2000\" height=\"758\" srcset=\"https://jina-ai-gmbh.ghost.io/content/images/size/w600/2024/03/image.png 600w, https://jina-ai-gmbh.ghost.io/content/images/size/w1000/2024/03/image.png 1000w, https://jina-ai-gmbh.ghost.io/content/images/size/w1600/2024/03/image.png 1600w, https://jina-ai-gmbh.ghost.io/content/images/size/w2400/2024/03/image.png 2400w\" sizes=\"(min-width: 720px) 720px\"><figcaption><span style=\"white-space: pre-wrap;\">我們研究的詳細結果在</span><a href=\"https://docs.google.com/spreadsheets/d/1XDOXjP6IVK1hXk3gKkng_cOpTrmS9Hm1UKCGvW1wMxU/edit?usp=sharing&ref=jina-ai-gmbh.ghost.io\"><span style=\"white-space: pre-wrap;\">這個電子表格中</span></a><span style=\"white-space: pre-wrap;\">。</span></figcaption></figure><h2 id=\"summary\">總結</h2><p>基於測試結果，我們做出了一些觀察和總結：</p><ol><li>將標題和摘要結合使用能獲得最佳的重排序結果，其中摘要在提升重排序質量方面發揮了重要作用。</li><li>加入類似\"提示\"的指令並沒有帶來任何改進。</li><li>重排序模型目前無法有效處理正面或負面的限定詞。諸如\"更多類似\"、\"更少類似\"或\"不要類似\"等術語對重排序器來說是不可理解的。</li></ol><p>第 2 點和第 3 點的見解為重排序器的未來改進提供了有趣的方向。我們相信，通過啟用即時提示來改變排序邏輯，可以顯著擴展重排序器的功能，從而釋放個性化內容策劃/推薦等新的潛在應用。</p>",
  "comment_id": "65f53dc48ff065000146db23",
  "feature_image": "https://jina-ai-gmbh.ghost.io/content/images/2024/03/Heading--1-.png",
  "featured": false,
  "visibility": "public",
  "created_at": "2024-03-16T07:35:48.000+01:00",
  "updated_at": "2024-03-17T19:26:09.000+01:00",
  "published_at": "2024-03-17T06:38:36.000+01:00",
  "custom_excerpt": "You can build an article recommendation system with just the Jina Reranker API—no pipeline, no embeddings, no vector search, only reranking. Find out how in 20 lines of code.",
  "codeinjection_head": null,
  "codeinjection_foot": null,
  "custom_template": null,
  "canonical_url": null,
  "authors": [
    {
      "id": "1",
      "name": "Engineering Group",
      "slug": "engineering",
      "profile_image": "https://jina-ai-gmbh.ghost.io/content/images/2022/11/1.png",
      "cover_image": null,
      "bio": "We do opensource, we do neural search, we do creative AI, we do MLOps. We do we.",
      "website": "https://github.com/jina-ai",
      "location": "Berlin, Germany",
      "facebook": null,
      "twitter": "@jinaai_",
      "meta_title": null,
      "meta_description": null,
      "url": "https://jina-ai-gmbh.ghost.io/author/engineering/"
    }
  ],
  "tags": [
    {
      "id": "634a1a8ccebfc1003d8ab706",
      "name": "Tech Blog",
      "slug": "tech-blog",
      "description": null,
      "feature_image": null,
      "visibility": "public",
      "og_image": null,
      "og_title": null,
      "og_description": null,
      "twitter_image": null,
      "twitter_title": null,
      "twitter_description": null,
      "meta_title": null,
      "meta_description": null,
      "codeinjection_head": null,
      "codeinjection_foot": null,
      "canonical_url": null,
      "accent_color": null,
      "url": "https://jina-ai-gmbh.ghost.io/tag/tech-blog/"
    }
  ],
  "primary_author": {
    "id": "1",
    "name": "Engineering Group",
    "slug": "engineering",
    "profile_image": "https://jina-ai-gmbh.ghost.io/content/images/2022/11/1.png",
    "cover_image": null,
    "bio": "We do opensource, we do neural search, we do creative AI, we do MLOps. We do we.",
    "website": "https://github.com/jina-ai",
    "location": "Berlin, Germany",
    "facebook": null,
    "twitter": "@jinaai_",
    "meta_title": null,
    "meta_description": null,
    "url": "https://jina-ai-gmbh.ghost.io/author/engineering/"
  },
  "primary_tag": {
    "id": "634a1a8ccebfc1003d8ab706",
    "name": "Tech Blog",
    "slug": "tech-blog",
    "description": null,
    "feature_image": null,
    "visibility": "public",
    "og_image": null,
    "og_title": null,
    "og_description": null,
    "twitter_image": null,
    "twitter_title": null,
    "twitter_description": null,
    "meta_title": null,
    "meta_description": null,
    "codeinjection_head": null,
    "codeinjection_foot": null,
    "canonical_url": null,
    "accent_color": null,
    "url": "https://jina-ai-gmbh.ghost.io/tag/tech-blog/"
  },
  "url": "https://jina-ai-gmbh.ghost.io/podcast/how-to-build-article-recommendations-with-jina-reranker-api-only/",
  "excerpt": "只需使用 Jina Reranker API 就能建立文章推薦系統——無需流程管線、無需 embeddings、無需向量搜尋，只要重新排序即可。用 20 行程式碼告訴你如何實現。",
  "reading_time": 5,
  "access": true,
  "comments": false,
  "og_image": null,
  "og_title": null,
  "og_description": null,
  "twitter_image": null,
  "twitter_title": null,
  "twitter_description": null,
  "meta_title": null,
  "meta_description": null,
  "email_subject": null,
  "frontmatter": null,
  "feature_image_alt": "Black background with a grid, multiple smiley faces, and a cursor pointing to one of them.",
  "feature_image_caption": null
}
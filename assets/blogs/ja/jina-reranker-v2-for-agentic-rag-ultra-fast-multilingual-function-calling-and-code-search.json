{
  "slug": "jina-reranker-v2-for-agentic-rag-ultra-fast-multilingual-function-calling-and-code-search",
  "id": "6679720d1954df000135bc79",
  "uuid": "fc132d33-85a8-4ebd-90a3-c308abea558f",
  "title": "エージェント型 RAG のための Jina Reranker v2：超高速・多言語対応・関数呼び出し＆コード検索",
  "html": "<p>本日、私たちは <a href=\"https://jina.ai/reranker/?ref=jina-ai-gmbh.ghost.io\">Jina Reranker <strong><em>v2</em></strong></a>（<code>jina-reranker-v2-base-multilingual</code>）を公開します。これは、検索基盤ファミリーにおける最新かつ最高性能のニューラルリランカーモデルです。Jina Reranker v2 により、RAG/検索システムの開発者は以下の機能を利用できます：</p><ul><li><strong>多言語対応：</strong> <em>100 言語以上</em>でより関連性の高い検索結果を提供し、<code>bge-reranker-v2-m3</code> を上回る性能を実現</li><li><strong>エージェント対応：</strong> エージェント型 RAG 向けの最先端の<em>関数呼び出しと text-to-SQL</em> 対応のドキュメントリランキング</li><li><strong>コード検索：</strong> <em>コード検索</em>タスクにおける最高性能</li><li><strong>超高速：</strong> <code>bge-reranker-v2-m3</code> の<em>15 倍</em>、<code>jina-reranker-v1-base-en</code> の 6 倍のドキュメントスループット</li></ul><p>新規ユーザー全員に 100 万トークンを無料で提供する Reranker API を通じて、Jina Reranker v2 の利用を開始できます。</p><figure class=\"kg-card kg-bookmark-card\"><a class=\"kg-bookmark-container\" href=\"https://jina.ai/reranker/?ref=jina-ai-gmbh.ghost.io\"><div class=\"kg-bookmark-content\"><div class=\"kg-bookmark-title\">Reranker API</div><div class=\"kg-bookmark-description\">Maximize the search relevancy and RAG accuracy at ease.</div><div class=\"kg-bookmark-metadata\"><img class=\"kg-bookmark-icon\" src=\"https://jina.ai/icons/favicon-128x128.png\" alt=\"\"></div></div><div class=\"kg-bookmark-thumbnail\"><img src=\"https://jina.ai/banner-reranker-api.png\" alt=\"\"></div></a></figure><p>この記事では、Jina Reranker v2 でサポートされるこれらの新機能について詳しく説明し、他の最先端モデル（<a href=\"https://jina.ai/news/maximizing-search-relevancy-and-rag-accuracy-with-jina-reranker?ref=jina-ai-gmbh.ghost.io\">Jina Reranker v1</a> を含む）と比較したリランカーモデルの性能を示し、Jina Reranker v2 がタスクの精度とドキュメントスループットで最高性能を達成するに至った訓練プロセスについて説明します。</p><h2 id=\"recap-why-you-need-a-reranker\">復習：なぜリランカーが必要なのか</h2><p>埋め込みモデルは <a href=\"https://jina.ai/?sui=&ref=jina-ai-gmbh.ghost.io\">検索基盤</a>において最も広く使用され理解されているコンポーネントですが、検索の速度と引き換えに精度を犠牲にすることがよくあります。埋め込みベースの検索モデルは通常、バイエンコーダーモデルであり、各ドキュメントが埋め込まれて保存され、クエリも埋め込まれて、クエリの埋め込みとドキュメントの埋め込みの類似性に基づいて検索が行われます。このモデルでは、ユーザーのクエリとマッチしたドキュメント間のトークンレベルの相互作用の多くの微妙なニュアンスが失われます。なぜなら、元のクエリとドキュメントは互いに「見る」ことができず、埋め込みだけが見えるからです。これは検索精度を犠牲にする可能性があります - これはクロスエンコーダーリランカーモデルが優れている領域です。</p><figure class=\"kg-card kg-bookmark-card\"><a class=\"kg-bookmark-container\" href=\"https://jina.ai/news/maximizing-search-relevancy-and-rag-accuracy-with-jina-reranker?ref=jina-ai-gmbh.ghost.io\"><div class=\"kg-bookmark-content\"><div class=\"kg-bookmark-title\">Maximizing Search Relevance and RAG Accuracy with Jina Reranker</div><div class=\"kg-bookmark-description\">Boost your search and RAG accuracy with Jina Reranker. Our new model improves the accuracy and relevance by 20% over simple vector search. Try it now for free!</div><div class=\"kg-bookmark-metadata\"><img class=\"kg-bookmark-icon\" src=\"https://jina.ai/icons/favicon-128x128.png\" alt=\"\"></div></div><div class=\"kg-bookmark-thumbnail\"><img src=\"https://jina-ai-gmbh.ghost.io/content/images/2024/02/Reranker1.png\" alt=\"\"></div></a></figure><p>リランカーは、クエリとドキュメントのペアを一緒にエンコードして埋め込みではなく関連性スコアを生成するクロスエンコーダーアーキテクチャを採用することで、この詳細な意味の欠如に対処します。<a href=\"https://arxiv.org/pdf/2207.06300?ref=jina-ai-gmbh.ghost.io\" rel=\"noreferrer\">研究</a>によると、ほとんどの RAG システムにおいて、リランカーモデルの使用は意味的な根拠付けを改善し、幻覚を減少させることが示されています。</p><h2 id=\"multilingual-support-with-jina-reranker-v2\">Jina Reranker v2 による多言語サポート</h2><p>かつて、<a href=\"https://jina.ai/news/smaller-faster-cheaper-jina-rerankers-turbo-and-tiny/?ref=jina-ai-gmbh.ghost.io\">Jina Reranker v1</a> は 4 つの主要な英語ベンチマークで<a href=\"https://jina.ai/news/maximizing-search-relevancy-and-rag-accuracy-with-jina-reranker?ref=jina-ai-gmbh.ghost.io\">最先端</a>の性能を達成することで他と差別化を図りました。今日、私たちは Jina Reranker v2 のリランキング機能を <em>100 言語以上</em>の多言語サポートと言語横断タスクで大幅に拡張しています！</p><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://jina-ai-gmbh.ghost.io/content/images/2024/06/Diagram--Blog-images--3-.png\" class=\"kg-image\" alt=\"Illustration of cross-lingual retrieval - Support for retrieving relevant documents in any language irrespective of the language that a query was written \" loading=\"lazy\" width=\"1600\" height=\"900\" srcset=\"https://jina-ai-gmbh.ghost.io/content/images/size/w600/2024/06/Diagram--Blog-images--3-.png 600w, https://jina-ai-gmbh.ghost.io/content/images/size/w1000/2024/06/Diagram--Blog-images--3-.png 1000w, https://jina-ai-gmbh.ghost.io/content/images/2024/06/Diagram--Blog-images--3-.png 1600w\" sizes=\"(min-width: 720px) 720px\"><figcaption><span style=\"white-space: pre-wrap;\">クロスリンガル検索の図 - クエリが書かれた言語に関係なく、任意の言語で関連ドキュメントを検索するサポート</span></figcaption></figure><p>Jina Reranker v2 の言語横断および英語の性能を評価するために、以下の 3 つのベンチマークで同様のリランカーモデルと性能を比較しました：</p><h4 id=\"mkqa-multilingual-knowledge-questions-and-answers\"><a href=\"https://github.com/apple/ml-mkqa?ref=jina-ai-gmbh.ghost.io\"><strong>MKQA</strong></a><strong>：多言語知識質問応答</strong></h4><p>このデータセットは、実世界の知識ベースから派生した 26 言語の質問と回答で構成されており、質問応答システムの言語横断性能を評価するように設計されています。MKQA は英語のクエリとそれらの非英語言語への手動翻訳、および英語を含む複数の言語での回答で構成されています。</p><p>以下のグラフでは、従来の埋め込みベース検索を実行する「dense retriever」をベースラインとして含む、各リランカーの recall@10 スコアを報告しています：</p><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://jina-ai-gmbh.ghost.io/content/images/2024/06/image_MKQA--1-.png\" class=\"kg-image\" alt=\"Bar chart comparing dense retrieval performance across models with scores, cities, and language coverage indicated.\" loading=\"lazy\" width=\"1800\" height=\"1012\" srcset=\"https://jina-ai-gmbh.ghost.io/content/images/size/w600/2024/06/image_MKQA--1-.png 600w, https://jina-ai-gmbh.ghost.io/content/images/size/w1000/2024/06/image_MKQA--1-.png 1000w, https://jina-ai-gmbh.ghost.io/content/images/size/w1600/2024/06/image_MKQA--1-.png 1600w, https://jina-ai-gmbh.ghost.io/content/images/2024/06/image_MKQA--1-.png 1800w\" sizes=\"(min-width: 720px) 720px\"><figcaption><span style=\"white-space: pre-wrap;\">MKQA データセットに対する異なるリランキングモデルの Recall@10 スコア</span></figcaption></figure><h4 id=\"beir-heterogeneous-benchmark-on-diverse-ir-tasks\"><a href=\"https://github.com/beir-cellar/beir?ref=jina-ai-gmbh.ghost.io\">BEIR</a>：多様な IR タスクの異種ベンチマーク</h4><p>このオープンソースリポジトリには多くの言語の検索ベンチマークが含まれていますが、私たちは<em>英語タスクのみに焦点を当てています</em>。これらは訓練データのない 17 のデータセットで構成されており、これらのデータセットの焦点はニューラルまたは語彙的検索システムの検索精度の評価にあります。<br><br>以下のグラフでは、各リランカーを含む BEIR の NDCG@10 を報告しています。BEIR の結果は、新たに導入された <code>jina-reranker-v2-base-multilingual</code> の多言語機能が英語検索機能を損なわないことを明確に示しています。さらに、<code>jina-reranker-v1-base-en</code> と比較して大幅に改善されています。</p><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://jina-ai-gmbh.ghost.io/content/images/2024/06/image_Beir.png\" class=\"kg-image\" alt=\"Bar chart showcasing performance of 'jina-reranker' models and 'AVG' across datasets 'NF Corpus', 'DBpedia', 'FEVER', 'SciFac\" loading=\"lazy\" width=\"1800\" height=\"1012\" srcset=\"https://jina-ai-gmbh.ghost.io/content/images/size/w600/2024/06/image_Beir.png 600w, https://jina-ai-gmbh.ghost.io/content/images/size/w1000/2024/06/image_Beir.png 1000w, https://jina-ai-gmbh.ghost.io/content/images/size/w1600/2024/06/image_Beir.png 1600w, https://jina-ai-gmbh.ghost.io/content/images/2024/06/image_Beir.png 1800w\" sizes=\"(min-width: 720px) 720px\"><figcaption><span style=\"white-space: pre-wrap;\">Beir データセットに対する異なるリランキングモデルの NDCG@10 スコア</span></figcaption></figure><h4 id=\"airbench-automated-heterogeneous-ir-benchmark\"><a href=\"https://github.com/AIR-Bench/AIR-Bench?ref=jina-ai-gmbh.ghost.io\">AirBench</a>：自動異種 IR ベンチマーク</h4><p>私たちは <a href=\"https://www.baai.ac.cn/english.html?ref=jina-ai-gmbh.ghost.io\">BAAI</a> と共同で、RAG システム向けの AirBench ベンチマークを <a href=\"https://jina.ai/news/air-bench-better-metrics-for-better-search-foundation?ref=jina-ai-gmbh.ghost.io\">共同作成</a> して公開しました。このベンチマークは、カスタムドメインとタスク向けに自動生成された合成データを使用し、ベンチマーク対象のモデルがデータセットに過適合する機会がないよう、ground truth を公開しないようにしています。<br><br>本稿執筆時点では、<code>jina-reranker-v2-base-multilingual</code> が他のすべての reranker モデルを上回り、<a href=\"https://huggingface.co/spaces/AIR-Bench/leaderboard?ref=jina-ai-gmbh.ghost.io\">リーダーボード</a> で首位を獲得しています。</p><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://jina-ai-gmbh.ghost.io/content/images/2024/06/Untitled--35-.png\" class=\"kg-image\" alt=\"Web page with a table comparing retrievals and reranking methods, featuring columns like Rank, Method, Model, Average, wiki_e\" loading=\"lazy\" width=\"2000\" height=\"669\" srcset=\"https://jina-ai-gmbh.ghost.io/content/images/size/w600/2024/06/Untitled--35-.png 600w, https://jina-ai-gmbh.ghost.io/content/images/size/w1000/2024/06/Untitled--35-.png 1000w, https://jina-ai-gmbh.ghost.io/content/images/size/w1600/2024/06/Untitled--35-.png 1600w, https://jina-ai-gmbh.ghost.io/content/images/size/w2400/2024/06/Untitled--35-.png 2400w\" sizes=\"(min-width: 720px) 720px\"><figcaption><span style=\"white-space: pre-wrap;\">reranking モデルの中で </span><code spellcheck=\"false\" style=\"white-space: pre-wrap;\"><span>jina-reranker-v2-base-multilingual</span></code><span style=\"white-space: pre-wrap;\"> が首位を獲得している AirBench のリーダーボード</span></figcaption></figure><h2 id=\"recap-of-tooling-agents-teaching-llms-to-use-tools\">Tooling-Agents の復習：LLM にツールの使用を教える</h2><p>数年前に AI ブームが始まって以来、AI モデルがコンピュータが得意なはずの作業で十分な性能を発揮できていないことが指摘されてきました。例えば、Mistral-7b-Instruct-v0.1 との次のような会話を見てみましょう：</p><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://jina-ai-gmbh.ghost.io/content/images/2024/06/Screenshot-2024-06-20-at-14.58.41.png\" class=\"kg-image\" alt=\"A chat interface with user asking an LLM to perform a mathematical operation\" loading=\"lazy\" width=\"712\" height=\"346\" srcset=\"https://jina-ai-gmbh.ghost.io/content/images/size/w600/2024/06/Screenshot-2024-06-20-at-14.58.41.png 600w, https://jina-ai-gmbh.ghost.io/content/images/2024/06/Screenshot-2024-06-20-at-14.58.41.png 712w\"><figcaption><span style=\"white-space: pre-wrap;\">LLM に数学的演算を依頼するチャットインターフェース</span></figcaption></figure><p>一見正しく見えるかもしれませんが、実際には 203 × 7724 は <em>1,567,972</em> です。</p><p>なぜ LLM は 10 倍以上の誤差を出してしまうのでしょうか？それは、LLM が数学やその他の推論を行うようには訓練されておらず、内部的な再帰性がないため、複雑な数学的問題を解くことができないからです。LLM は文章を生成したり、本質的に正確さを必要としない他のタスクを実行したりするように訓練されています。</p><p>しかし、LLM は答えを捏造することをためらいません。LLM の視点からすると、15,824,772 は 204 × 7,724 の<em>もっともらしい</em>答えに見えます。ただし、完全に間違っているのです。</p><p><em>Agentic RAG</em> は、生成型 LLM の役割を、彼らが不得意な「思考」や「知識」から、得意な「読解力」と「情報の自然言語への統合」へと変更します。単に答えを生成するのではなく、RAG はあなたのリクエストに関連する情報を利用可能なデータソースから見つけ、言語モデルに提示します。その仕事は答えを作り出すことではなく、別のシステムが見つけた答えを自然で応答的な形で提示することです。</p><div class=\"kg-card kg-callout-card kg-callout-card-blue\"><div class=\"kg-callout-emoji\">💡</div><div class=\"kg-callout-text\">agentic RAG システムの回答の質は、そのデータソースと検索アルゴリズムの性能に依存します。</div></div><p><strong>Jina Reranker v2 を SQL データベーススキーマとファンクションコーリングに敏感になるよう訓練しました。</strong>これには従来のテキスト検索とは異なる種類のセマンティクスが必要です。タスクとコードを認識できる必要があり、私たちの reranker はこの機能のために特別に訓練されています。</p><h2 id=\"jina-reranker-v2-on-structured-data-querying\">構造化データクエリにおける Jina Reranker v2</h2><p>embedding モデルと reranker モデルは非構造化データを第一級市民として扱っていますが、ほとんどのモデルでは構造化された表形式データのサポートがまだ不十分です。</p><p>Jina Reranker v2 は、MySQL や MongoDB などの構造化データベースにクエリを実行するというダウンストリームの意図を理解し、入力クエリに対して<em>構造化テーブルスキーマ</em>に適切な関連性スコアを割り当てます。</p><p>以下に示すように、reranker は自然言語クエリから SQL クエリを生成する前に、最も関連性の高いテーブルを取得します：</p><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://jina-ai-gmbh.ghost.io/content/images/2024/06/Diagram--Blog-images--4-.png\" class=\"kg-image\" alt=\"Schematic of an agentic RAG retrieving data using a SQL query, and providing it as additional context to an LLM   \" loading=\"lazy\" width=\"1600\" height=\"900\" srcset=\"https://jina-ai-gmbh.ghost.io/content/images/size/w600/2024/06/Diagram--Blog-images--4-.png 600w, https://jina-ai-gmbh.ghost.io/content/images/size/w1000/2024/06/Diagram--Blog-images--4-.png 1000w, https://jina-ai-gmbh.ghost.io/content/images/2024/06/Diagram--Blog-images--4-.png 1600w\" sizes=\"(min-width: 720px) 720px\"><figcaption><span style=\"white-space: pre-wrap;\">SQL クエリを使用してデータを取得し、LLM に追加コンテキストとして提供する agentic RAG の概略図</span></figcaption></figure><p>クエリ対応機能の評価には、<a href=\"https://huggingface.co/datasets/NumbersStation/NSText2SQL?ref=jina-ai-gmbh.ghost.io\">NSText2SQL</a> データセットベンチマークを使用しました。元のデータセットの \"instruction\" カラムから、自然言語で書かれた指示と対応するテーブルスキーマを抽出しています。</p><p>以下のグラフは、<em>recall@3</em> を使用して、自然言語クエリに対応する正しいテーブルスキーマのランク付けに reranker モデルがどの程度成功しているかを比較しています。</p><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://jina-ai-gmbh.ghost.io/content/images/2024/06/image_NSText2SQL.png\" class=\"kg-image\" alt=\"Recall@3 scores reported for different reranking models for NSText2SQL dataset\" loading=\"lazy\" width=\"1800\" height=\"1013\" srcset=\"https://jina-ai-gmbh.ghost.io/content/images/size/w600/2024/06/image_NSText2SQL.png 600w, https://jina-ai-gmbh.ghost.io/content/images/size/w1000/2024/06/image_NSText2SQL.png 1000w, https://jina-ai-gmbh.ghost.io/content/images/size/w1600/2024/06/image_NSText2SQL.png 1600w, https://jina-ai-gmbh.ghost.io/content/images/2024/06/image_NSText2SQL.png 1800w\" sizes=\"(min-width: 720px) 720px\"><figcaption><span style=\"white-space: pre-wrap;\">NSText2SQL データセットに対する異なる reranking モデルの Recall@3 スコア</span></figcaption></figure><h2 id=\"jina-reranker-v2-on-function-calling\">ファンクションコーリングにおける Jina Reranker v2</h2><p>SQL テーブルへのクエリと同様に、agentic RAG を使用して外部ツールを呼び出すことができます。これを念頭に、Jina Reranker v2 にファンクションコーリングを統合し、外部関数への意図を理解し、関数仕様に対して適切な関連性スコアを割り当てることができるようにしました。</p><p>以下の概略図は（例を用いて）、LLM が Reranker を使用してファンクションコーリング機能を改善し、最終的に agentic AI のユーザーエクスペリエンスを向上させる方法を説明しています。</p><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://jina-ai-gmbh.ghost.io/content/images/2024/06/Diagram--Blog-images--5-.png\" class=\"kg-image\" alt=\"Schematic of an agentic RAG calling an external function, and providing its output as additional context to an LLM   \" loading=\"lazy\" width=\"1600\" height=\"900\" srcset=\"https://jina-ai-gmbh.ghost.io/content/images/size/w600/2024/06/Diagram--Blog-images--5-.png 600w, https://jina-ai-gmbh.ghost.io/content/images/size/w1000/2024/06/Diagram--Blog-images--5-.png 1000w, https://jina-ai-gmbh.ghost.io/content/images/2024/06/Diagram--Blog-images--5-.png 1600w\" sizes=\"(min-width: 720px) 720px\"><figcaption><span style=\"white-space: pre-wrap;\">外部関数を呼び出し、その出力を LLM に追加コンテキストとして提供する agentic RAG の概略図</span></figcaption></figure><p>関数対応機能の評価には、<a href=\"https://github.com/OpenBMB/ToolBench?ref=jina-ai-gmbh.ghost.io\">ToolBench</a> ベンチマークを使用しました。このベンチマークは、16,000 以上のパブリック API と、シングル API およびマルチ API 設定でそれらを使用するための合成生成された指示を収集しています。</p><p>以下が他の reranker モデルと比較した結果（recall@3 メトリック）です：</p><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://jina-ai-gmbh.ghost.io/content/images/2024/06/image_ToolBench.png\" class=\"kg-image\" alt=\"Recall@3 scores reported for different reranking models for ToolBench dataset\" loading=\"lazy\" width=\"1800\" height=\"1012\" srcset=\"https://jina-ai-gmbh.ghost.io/content/images/size/w600/2024/06/image_ToolBench.png 600w, https://jina-ai-gmbh.ghost.io/content/images/size/w1000/2024/06/image_ToolBench.png 1000w, https://jina-ai-gmbh.ghost.io/content/images/size/w1600/2024/06/image_ToolBench.png 1600w, https://jina-ai-gmbh.ghost.io/content/images/2024/06/image_ToolBench.png 1800w\" sizes=\"(min-width: 720px) 720px\"><figcaption><span style=\"white-space: pre-wrap;\">ToolBench データセットにおける異なるリランキングモデルの Recall@3 スコア</span></figcaption></figure><p>後のセクションでも示すように、<code>jina-reranker-v2-base-multilingual</code>は、<code>bge-reranker-v2-m3</code>の半分のサイズで、約15倍速いという利点を持ちながら、ほぼ最先端の性能を発揮します。</p><h2 id=\"jina-reranker-v2-on-code-retrieval\">コード検索における Jina Reranker v2</h2><p>Jina Reranker v2 は、関数呼び出しと構造化データのクエリに対して訓練されているだけでなく、同サイズの競合モデルと比較してコード検索も改善されています。コード検索能力の評価には<a href=\"https://github.com/github/CodeSearchNet?ref=jina-ai-gmbh.ghost.io\">CodeSearchNet</a>ベンチマークを使用しました。このベンチマークは、<a href=\"https://peps.python.org/pep-0257/?ref=jina-ai-gmbh.ghost.io\" rel=\"noreferrer\">docstring</a>形式と自然言語形式のクエリを組み合わせたもので、クエリに関連するコードセグメントにラベル付けされています。</p><p>以下は、他のリランカーモデルと比較した MRR@10 の結果です：</p><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://jina-ai-gmbh.ghost.io/content/images/2024/06/image_CodeSearchNet--1-.png\" class=\"kg-image\" alt=\"MRR@10 scores reported for different reranking models for CodeSearchNet dataset\" loading=\"lazy\" width=\"1800\" height=\"1013\" srcset=\"https://jina-ai-gmbh.ghost.io/content/images/size/w600/2024/06/image_CodeSearchNet--1-.png 600w, https://jina-ai-gmbh.ghost.io/content/images/size/w1000/2024/06/image_CodeSearchNet--1-.png 1000w, https://jina-ai-gmbh.ghost.io/content/images/size/w1600/2024/06/image_CodeSearchNet--1-.png 1600w, https://jina-ai-gmbh.ghost.io/content/images/2024/06/image_CodeSearchNet--1-.png 1800w\" sizes=\"(min-width: 720px) 720px\"><figcaption><span style=\"white-space: pre-wrap;\">CodeSearchNet データセットにおける異なるリランキングモデルの MRR@10 スコア</span></figcaption></figure><h2 id=\"ultra-fast-inference-with-jina-reranker-v2\">Jina Reranker v2 による超高速推論</h2><p>クロスエンコーダー型のニューラルリランカーは検索されたドキュメントの関連性予測に優れていますが、埋め込みモデルと比べて推論が遅いという特徴があります。つまり、クエリを n 個のドキュメントと一つずつ比較することは、ほとんどのベクトルデータベースにおける HNSW や他の高速検索手法と比べてはるかに遅くなります。私たちは Jina Reranker v2 でこの遅さを解決しました。</p><ul><li>独自の訓練手法（後述）により、わずか 278M パラメータで最先端の精度を達成しました。<code>bge-reranker-v2-m3</code>の 567M パラメータと比較すると、Jina Reranker v2 は半分のサイズです。これがスループット（50ms あたりの処理ドキュメント数）向上の第一の理由です。</li><li>同等のモデルサイズでも、Jina Reranker v2 は英語向けの前世代モデル Jina Reranker v1 と比べて 6 倍のスループットを誇ります。これは、トランスフォーマーベースのモデルのアテンション層にメモリと計算の最適化を導入する<a href=\"https://github.com/Dao-AILab/flash-attention?ref=jina-ai-gmbh.ghost.io\">Flash Attention 2</a>を実装したためです。</li></ul><p>以上の施策の結果として、Jina Reranker v2 のスループット性能をご覧ください：</p><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://jina-ai-gmbh.ghost.io/content/images/2024/06/image_RTX-4090-Throughput.png\" class=\"kg-image\" alt=\"Throughput (documents retrieved in 50ms) scores reported for different reranking models on an RTX 4090 GPU\" loading=\"lazy\" width=\"1800\" height=\"1013\" srcset=\"https://jina-ai-gmbh.ghost.io/content/images/size/w600/2024/06/image_RTX-4090-Throughput.png 600w, https://jina-ai-gmbh.ghost.io/content/images/size/w1000/2024/06/image_RTX-4090-Throughput.png 1000w, https://jina-ai-gmbh.ghost.io/content/images/size/w1600/2024/06/image_RTX-4090-Throughput.png 1600w, https://jina-ai-gmbh.ghost.io/content/images/2024/06/image_RTX-4090-Throughput.png 1800w\" sizes=\"(min-width: 720px) 720px\"><figcaption><span style=\"white-space: pre-wrap;\">RTX 4090 GPU での異なるリランキングモデルのスループット（50ms で検索されたドキュメント数）スコア</span></figcaption></figure><h2 id=\"how-we-trained-jina-reranker-v2\">Jina Reranker v2 の訓練方法</h2><p><code>jina-reranker-v2-base-multilingual</code>は 4 段階で訓練しました：</p><ol><li><strong>英語データによる準備：</strong>ペア（対照学習）またはトリプレット（クエリ、正解レスポンス、不正解レスポンス）、クエリ・関数スキーマペア、クエリ・テーブルスキーマペアを含む英語のみのデータでバックボーンモデルを訓練し、最初のバージョンを準備しました。</li><li><strong>クロスリンガルデータの追加：</strong>次の段階では、バックボーンモデルの多言語検索タスクにおける能力を具体的に向上させるため、クロスリンガルなペアとトリプレットのデータセットを追加しました。</li><li><strong>すべての多言語データの追加：</strong>この段階では、モデルができるだけ多くのデータを学習することに重点を置きました。第 2 段階のモデルチェックポイントを、100 以上の低リソース言語と高リソース言語からのすべてのペアとトリプレットデータセットでファインチューニングしました。</li><li><strong>マイニングされたハードネガティブによるファインチューニング：</strong>第 3 段階のリランキング性能を観察した後、既存のクエリに対するハードネガティブの例（クエリに表面的には関連しているように見えるが、実際には間違っているレスポンス）をより多く含むトリプレットデータを追加してモデルをファインチューニングしました。</li></ol><p>この 4 段階の訓練アプローチは、訓練プロセスの早い段階で関数とテーブルのスキーマを含めることで、モデルがこれらのユースケースを特に意識し、言語構造よりも候補ドキュメントの意味論に焦点を当てることを学習できるという洞察に基づいています。</p><h2 id=\"jina-reranker-v2-in-practice\">Jina Reranker v2 の実践</h2><h3 id=\"via-our-reranker-api\">Reranker API を通じて</h3><p>Jina Reranker v2 を始める最も速く簡単な方法は、<a href=\"https://jina.ai/reranker/?ref=jina-ai-gmbh.ghost.io\">Jina Reranker の API</a>を使用することです。</p><figure class=\"kg-card kg-bookmark-card\"><a class=\"kg-bookmark-container\" href=\"https://jina.ai/reranker?ref=jina-ai-gmbh.ghost.io\"><div class=\"kg-bookmark-content\"><div class=\"kg-bookmark-title\">Reranker API</div><div class=\"kg-bookmark-description\">検索の関連性と RAG の精度を簡単に最大化。</div><div class=\"kg-bookmark-metadata\"><img class=\"kg-bookmark-icon\" src=\"https://jina.ai/icons/favicon-128x128.png\" alt=\"\"></div></div><div class=\"kg-bookmark-thumbnail\"><img src=\"https://jina.ai/banner-reranker-api.png\" alt=\"\"></div></a></figure><p>このページの API セクションに移動して、お好みのプログラミング言語で <code>jina-reranker-v2-base-multilingual</code> を統合してください。</p><h4 id=\"example-1-ranking-function-calls\">例 1：関数呼び出しのランキング</h4><p>最も関連性の高い外部関数/ツールのランキングを行うには、以下のようにクエリとドキュメント（関数スキーマ）をフォーマットします：</p><figure class=\"kg-card kg-code-card\"><pre><code class=\"language-bash\">curl -X 'POST' \\\n  'https://api.jina.ai/v1/rerank' \\\n  -H 'accept: application/json' \\\n  -H 'Authorization: Bearer &lt;YOUR JINA AI TOKEN HERE&gt;' \\\n  -H 'Content-Type: application/json' \\\n  -d '{\n  \"model\": \"jina-reranker-v2-base-multilingual\",\n  \"query\": \"I am planning a road trip from Berlin to Munich in my Volkswagen VII. Can you calculate the carbon footprint of this trip?\",\n  \"documents\": [\n    \"{'\\''Name'\\'': '\\''getWeather'\\'', '\\''Specification'\\'': '\\''Provides current weather information for a specified city'\\'', '\\''spec'\\'': '\\''https://api.openweathermap.org/data/2.5/weather?q={city}&amp;appid={API_KEY}'\\'', '\\''example'\\'': '\\''https://api.openweathermap.org/data/2.5/weather?q=Berlin&amp;appid=YOUR_API_KEY'\\''}\",\n    \"{'\\''Name'\\'': '\\''calculateDistance'\\'', '\\''Specification'\\'': '\\''Calculates the driving distance and time between multiple locations'\\'', '\\''spec'\\'': '\\''https://maps.googleapis.com/maps/api/distancematrix/json?origins={startCity}&amp;destinations={endCity}&amp;key={API_KEY}'\\'', '\\''example'\\'': '\\''https://maps.googleapis.com/maps/api/distancematrix/json?origins=Berlin&amp;destinations=Munich&amp;key=YOUR_API_KEY'\\''}\",\n    \"{'\\''Name'\\'': '\\''calculateCarbonFootprint'\\'', '\\''Specification'\\'': '\\''Estimates the carbon footprint for various activities, including transportation'\\'', '\\''spec'\\'': '\\''https://www.carboninterface.com/api/v1/estimates'\\'', '\\''example'\\'': '\\''{type: vehicle, distance: distance, vehicle_model_id: car}'\\''}\"\n  ]\n}'</code></pre><figcaption><p><span style=\"white-space: pre-wrap;\">&lt;YOUR JINA AI TOKEN HERE&gt; を個人の Reranker API トークンに置き換えることを忘れないでください</span></p></figcaption></figure><p>結果として以下が得られるはずです：</p><pre><code class=\"language-JSON\">{\n  \"model\": \"jina-reranker-v2-base-multilingual\",\n  \"usage\": {\n    \"total_tokens\": 383,\n    \"prompt_tokens\": 383\n  },\n  \"results\": [\n    {\n      \"index\": 2,\n      \"document\": {\n        \"text\": \"{'Name': 'calculateCarbonFootprint', 'Specification': 'Estimates the carbon footprint for various activities, including transportation', 'spec': 'https://www.carboninterface.com/api/v1/estimates', 'example': '{type: vehicle, distance: distance, vehicle_model_id: car}'}\"\n      },\n      \"relevance_score\": 0.5422876477241516\n    },\n    {\n      \"index\": 1,\n      \"document\": {\n        \"text\": \"{'Name': 'calculateDistance', 'Specification': 'Calculates the driving distance and time between multiple locations', 'spec': 'https://maps.googleapis.com/maps/api/distancematrix/json?origins={startCity}&amp;destinations={endCity}&amp;key={API_KEY}', 'example': 'https://maps.googleapis.com/maps/api/distancematrix/json?origins=Berlin&amp;destinations=Munich&amp;key=YOUR_API_KEY'}\"\n      },\n      \"relevance_score\": 0.23283305764198303\n    },\n    {\n      \"index\": 0,\n      \"document\": {\n        \"text\": \"{'Name': 'getWeather', 'Specification': 'Provides current weather information for a specified city', 'spec': 'https://api.openweathermap.org/data/2.5/weather?q={city}&amp;appid={API_KEY}', 'example': 'https://api.openweathermap.org/data/2.5/weather?q=Berlin&amp;appid=YOUR_API_KEY'}\"\n      },\n      \"relevance_score\": 0.05033063143491745\n    }\n  ]\n}</code></pre><h4 id=\"example-2-ranking-sql-queries\">例 2：SQL クエリのランク付け</h4><p>同様に、クエリに対する構造化テーブルスキーマの関連スコアを取得するには、以下のような API 呼び出しの例を使用できます：</p><pre><code class=\"language-bash\">curl -X 'POST' \\\n  'https://api.jina.ai/v1/rerank' \\\n  -H 'accept: application/json' \\\n  -H 'Authorization: Bearer &lt;YOUR JINA AI TOKEN HERE&gt;' \\\n  -H 'Content-Type: application/json' \\\n  -d '{\n  \"model\": \"jina-reranker-v2-base-multilingual\",\n  \"query\": \"which customers bought a summer outfit in the past 7 days?\",\n  \"documents\": [\n    \"CREATE TABLE customer_personal_info (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50));\",\n    \"CREATE TABLE supplier_company_info (supplier_id INT PRIMARY KEY, company_name VARCHAR(100), contact_name VARCHAR(50));\",\n    \"CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, purchase_date DATE, FOREIGN KEY (customer_id) REFERENCES customer_personal_info(customer_id), product_id INT, FOREIGN KEY (product_id) REFERENCES products(product_id));\",\n    \"CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), season VARCHAR(50), supplier_id INT, FOREIGN KEY (supplier_id) REFERENCES supplier_company_info(supplier_id));\"\n  ]\n}'</code></pre><p>予想される応答は：</p><pre><code class=\"language-JSON\">{\n  \"model\": \"jina-reranker-v2-base-multilingual\",\n  \"usage\": {\n    \"total_tokens\": 253,\n    \"prompt_tokens\": 253\n  },\n  \"results\": [\n    {\n      \"index\": 2,\n      \"document\": {\n        \"text\": \"CREATE TABLE transactions (transaction_id INT PRIMARY KEY, customer_id INT, purchase_date DATE, FOREIGN KEY (customer_id) REFERENCES customer_personal_info(customer_id), product_id INT, FOREIGN KEY (product_id) REFERENCES products(product_id));\"\n      },\n      \"relevance_score\": 0.2789437472820282\n    },\n    {\n      \"index\": 0,\n      \"document\": {\n        \"text\": \"CREATE TABLE customer_personal_info (customer_id INT PRIMARY KEY, first_name VARCHAR(50), last_name VARCHAR(50));\"\n      },\n      \"relevance_score\": 0.06477169692516327\n    },\n    {\n      \"index\": 3,\n      \"document\": {\n        \"text\": \"CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), season VARCHAR(50), supplier_id INT, FOREIGN KEY (supplier_id) REFERENCES supplier_company_info(supplier_id));\"\n      },\n      \"relevance_score\": 0.027742892503738403\n    },\n    {\n      \"index\": 1,\n      \"document\": {\n        \"text\": \"CREATE TABLE supplier_company_info (supplier_id INT PRIMARY KEY, company_name VARCHAR(100), contact_name VARCHAR(50));\"\n      },\n      \"relevance_score\": 0.025516605004668236\n    }\n  ]\n}</code></pre><h3 id=\"via-ragllm-frameworks\">RAG/LLM フレームワーク経由</h3><p>Jina Reranker の既存の LLM および RAG オーケストレーションフレームワークとの統合は、モデル名 <code>jina-reranker-v2-base-multilingual</code> を使用することで、すでに動作するはずです。それぞれのドキュメントページを参照して、アプリケーションで Jina Reranker v2 を統合する方法について詳しく学んでください。</p><ul><li><a href=\"https://haystack.deepset.ai/integrations/jina?ref=jina-ai-gmbh.ghost.io\"><strong>Haystack</strong></a><strong> by deepset</strong>：Jina Reranker v2 は、Haystack の <a href=\"https://docs.haystack.deepset.ai/docs/jinaranker?ref=jina-ai-gmbh.ghost.io\">JinaRanker</a> クラスで使用できます：</li></ul><pre><code class=\"language-Python\">from haystack import Document\nfrom haystack_integrations.components.rankers.jina import JinaRanker\n\ndocs = [Document(content=\"Paris\"), Document(content=\"Berlin\")]\n\nranker = JinaRanker(model=\"jina-reranker-v2-base-multilingual\", api_key=\"&lt;YOUR JINA AI API KEY HERE&gt;\")\n\nranker.run(query=\"City in France\", documents=docs, top_k=1)\n</code></pre><ul><li><strong>LlamaIndex</strong>：Jina Reranker v2 は <a href=\"https://docs.llamaindex.ai/en/stable/examples/node_postprocessor/JinaRerank/?ref=jina-ai-gmbh.ghost.io\">JinaRerank</a> <em>node postprocessor</em> モジュールとして以下のように初期化して使用できます：</li></ul><pre><code class=\"language-Python\">import os\nfrom llama_index.postprocessor.jinaai_rerank import JinaRerank\n\njina_rerank = JinaRerank(model=\"jina-reranker-v2-base-multilingual\", api_key=\"&lt;YOUR JINA AI API KEY HERE&gt;\", top_n=1)\n</code></pre><ul><li><strong>Langchain：</strong>既存のアプリケーションで Jina Reranker 2 を使用するために <a href=\"https://python.langchain.com/v0.2/docs/integrations/document_transformers/jina_rerank/?ref=jina-ai-gmbh.ghost.io#doing-reranking-with-jinarerank\">Jina Rerank 統合</a>を利用できます。JinaRerank モジュールは適切なモデル名で初期化する必要があります：</li></ul><pre><code class=\"language-Python\">from langchain_community.document_compressors import JinaRerank\n\nreranker = JinaRerank(model=\"jina-reranker-v2-base-multilingual\", jina_api_key=\"&lt;YOUR JINA AI API KEY HERE&gt;\")\n</code></pre><h3 id=\"via-huggingface\">HuggingFace 経由</h3><p>研究および評価目的で、<code>jina-reranker-v2-base-multilingual</code> モデルを Hugging Face で（CC-BY-NC-4.0 ライセンスの下で）公開しています。</p><figure class=\"kg-card kg-bookmark-card\"><a class=\"kg-bookmark-container\" href=\"https://huggingface.co/jinaai/jina-reranker-v2-base-multilingual?ref=jina-ai-gmbh.ghost.io\"><div class=\"kg-bookmark-content\"><div class=\"kg-bookmark-title\">jinaai/jina-reranker-v2-base-multilingual · Hugging Face</div><div class=\"kg-bookmark-description\">We're on a journey to advance and democratize artificial intelligence through open source and open science.</div><div class=\"kg-bookmark-metadata\"><img class=\"kg-bookmark-icon\" src=\"https://huggingface.co/favicon.ico\" alt=\"\"></div></div><div class=\"kg-bookmark-thumbnail\"><img src=\"https://cdn-thumbnails.huggingface.co/social-thumbnails/models/jinaai/jina-reranker-v2-base-multilingual.png\" alt=\"\"></div></a></figure><p>Hugging Face からモデルをダウンロードして実行するには、<code>transformers</code> と <code>einops</code> ライブラリをインストールしてください：</p><pre><code class=\"language-bash\">pip install transformers einops\npip install ninja\npip install flash-attn --no-build-isolation\n</code></pre><p><a href=\"https://huggingface.co/settings/tokens?ref=jina-ai-gmbh.ghost.io\">Hugging Face アクセストークン</a>を使用して、Hugging Face CLI ログインを通じて Hugging Face アカウントにログインします：</p><pre><code class=\"language-bash\">huggingface-cli login --token &lt;\"HF-Access-Token\"&gt;\n</code></pre><p>事前学習済みモデルをダウンロードします：</p><pre><code class=\"language-Python\">from transformers import AutoModelForSequenceClassification\n\nmodel = AutoModelForSequenceClassification.from_pretrained(\n    'jinaai/jina-reranker-v2-base-multilingual',\n    torch_dtype=\"auto\",\n    trust_remote_code=True,\n    \n)\n\nmodel.to('cuda') # GPU が利用できない場合は 'cpu' を使用\n\nmodel.eval()\n</code></pre><p>クエリと再ランク付けする文書を定義します：</p><pre><code class=\"language-Python\">query = \"Organic skincare products for sensitive skin\"\n\ndocuments = [\n    \"Organic skincare for sensitive skin with aloe vera and chamomile.\",\n    \"New makeup trends focus on bold colors and innovative techniques\",\n    \"Bio-Hautpflege für empfindliche Haut mit Aloe Vera und Kamille\",\n    \"Neue Make-up-Trends setzen auf kräftige Farben und innovative Techniken\",\n    \"Cuidado de la piel orgánico para piel sensible con aloe vera y manzanilla\",\n    \"Las nuevas tendencias de maquillaje se centran en colores vivos y técnicas innovadoras\",\n    \"针对敏感肌专门设计的天然有机护肤产品\",\n    \"新的化妆趋势注重鲜艳的颜色和创新的技巧\",\n    \"敏感肌のために特別に設計された天然有機スキンケア製品\",\n    \"新しいメイクのトレンドは鮮やかな色と革新的な技術に焦点を当てています\",\n]\n</code></pre><p>文章のペアを構築し、関連性スコアを計算します：</p><pre><code class=\"language-Python\">sentence_pairs = [[query, doc] for doc in documents]\n\nscores = model.compute_score(sentence_pairs, max_length=1024)\n</code></pre><p>スコアは浮動小数点数のリストとなり、各浮動小数点数はクエリに対する対応する文書の関連性スコアを表します。スコアが高いほど関連性が高いことを意味します。</p><p>または、<code>rerank</code> 関数を使用して、<code>max_query_length</code> に基づいてクエリと文書を自動的にチャンク分割することで、大きなテキストの再ランク付けを行うことができます。</p><code>max_length</code> でそれぞれ指定します。各チャンクは個別にスコアリングされ、各チャンクのスコアが組み合わされて最終的な再ランキング結果が生成されます：</p><pre><code class=\"language-Python\">results = model.rerank(\n    query,\n    documents,\n    max_query_length=512,\n    max_length=1024,\n    top_n=3\n)\n</code></pre><p>この関数は、各ドキュメントの関連性スコアだけでなく、そのコンテンツと元のドキュメントリストでの位置も返します。</p><h3 id=\"via-private-cloud-deployment\">プライベートクラウドデプロイメント経由</h3><p>Jina Reranker v2 の AWS および Azure アカウント向けプライベートデプロイメント用の事前ビルドパッケージは、まもなく<a href=\"https://aws.amazon.com/marketplace/seller-profile?id=seller-stch2ludm6vgy&ref=jina-ai-gmbh.ghost.io\" rel=\"noreferrer\">AWS Marketplace</a> および <a href=\"https://azuremarketplace.microsoft.com/en-us/marketplace/apps?search=jina+ai&page=1&filters=partners&ref=jina-ai-gmbh.ghost.io\" rel=\"noreferrer\">Azure Marketplace</a> の各販売者ページで公開される予定です。</p><div class=\"kg-card kg-callout-card kg-callout-card-blue\"><div class=\"kg-callout-emoji\">💡</div><div class=\"kg-callout-text\">Jina AI の Search Foundation をベースにした、ユースケースに合わせたカスタマイズソリューションについては、<a href=\"https://jina.ai/contact-sales?ref=jina-ai-gmbh.ghost.io\">コンタクトページ</a>からお問い合わせください。</div></div><h2 id=\"key-takeaways-of-jina-reranker-v2\">Jina Reranker v2 の主なポイント</h2><p>Jina Reranker v2 は、検索基盤の機能を大幅に拡張します：</p><ul><li>クロスエンコーディングを使用した最先端の検索により、幅広い新しいアプリケーション領域が開かれます。</li><li>多言語および言語間機能が強化され、ユースケースの言語の壁がなくなります。</li><li>ファンクションコーリングの最高レベルのサポートと構造化データクエリの認識により、エージェント RAG 機能の精度が向上します。</li><li>コンピュータコードやコンピュータ形式のデータの検索が向上し、テキスト情報検索を超えた機能を提供します。</li><li>ドキュメントのスループットが大幅に向上し、検索方法に関係なく、より多くの検索されたドキュメントをより高速に再ランク付けでき、きめ細かな関連性計算のほとんどを <code>jina-reranker-v2-base-multilingual</code> に任せることができます。</li></ul><p>Reranker v2 により RAG システムの精度が大幅に向上し、既存の情報管理ソリューションがより多くの、より良いアクション可能な結果を生成できるようになります。言語間サポートにより、これらすべての機能が多国籍・多言語企業向けに直接利用可能となり、使いやすい API を手頃な価格で提供します。</p><p>実際のユースケースから導き出されたベンチマークでテストすることで、Jina Reranker v2 が実際のビジネスモデルに関連するタスクで最先端のパフォーマンスを維持していることを、1つの AI モデルで確認でき、コストを抑えながらテックスタックをよりシンプルに保つことができます。</p>",
  "comment_id": "6679720d1954df000135bc79",
  "feature_image": "https://jina-ai-gmbh.ghost.io/content/images/2024/06/Heading--39-.png",
  "featured": true,
  "visibility": "public",
  "created_at": "2024-06-24T15:18:05.000+02:00",
  "updated_at": "2024-07-08T21:07:29.000+02:00",
  "published_at": "2024-06-25T14:15:37.000+02:00",
  "custom_excerpt": "Jina Reranker v2 is the best-in-class reranker built for Agentic RAG. It features function-calling support, multilingual retrieval for over 100 languages, code search capabilities, and offers a 6x speedup over v1.",
  "codeinjection_head": null,
  "codeinjection_foot": null,
  "custom_template": null,
  "canonical_url": null,
  "authors": [
    {
      "id": "641c23a2f4d50d003d590474",
      "name": "Saahil Ognawala",
      "slug": "saahil",
      "profile_image": "https://jina-ai-gmbh.ghost.io/content/images/2023/03/profile-option-2.jpg",
      "cover_image": null,
      "bio": "Senior Product Manager at Jina AI",
      "website": "http://www.saahilognawala.com/",
      "location": "Munich, DE",
      "facebook": null,
      "twitter": "@saahil",
      "meta_title": null,
      "meta_description": null,
      "url": "https://jina-ai-gmbh.ghost.io/author/saahil/"
    },
    {
      "id": "6386c03c180dcb003d549f98",
      "name": "Jie Fu",
      "slug": "jie",
      "profile_image": "https://jina-ai-gmbh.ghost.io/content/images/2022/11/--.jpeg",
      "cover_image": null,
      "bio": "Senior software engineer in Jina, and one of the developers for CLIP-as-Service.",
      "website": null,
      "location": null,
      "facebook": null,
      "twitter": null,
      "meta_title": null,
      "meta_description": null,
      "url": "https://jina-ai-gmbh.ghost.io/author/jie/"
    },
    {
      "id": "6620de1e7f510100015da95e",
      "name": "Yuting Zhang",
      "slug": "yuting",
      "profile_image": "https://jina-ai-gmbh.ghost.io/content/images/2024/04/Yuting-Portrait-1.jpeg",
      "cover_image": null,
      "bio": null,
      "website": null,
      "location": null,
      "facebook": null,
      "twitter": null,
      "meta_title": null,
      "meta_description": null,
      "url": "https://jina-ai-gmbh.ghost.io/author/yuting/"
    },
    {
      "id": "632ae7353e4e55003d52598e",
      "name": "Scott Martens",
      "slug": "scott",
      "profile_image": "https://jina-ai-gmbh.ghost.io/content/images/2022/11/photo-of-me-cropped.jpg",
      "cover_image": "https://jina-ai-gmbh.ghost.io/content/images/2022/11/shanshui-ernie-crop.png",
      "bio": "A rogue AI created by Canada's Weapon X program.\n\nContent Creator @ Jina AI",
      "website": "https://jina.ai",
      "location": "Berlin",
      "facebook": null,
      "twitter": null,
      "meta_title": null,
      "meta_description": null,
      "url": "https://jina-ai-gmbh.ghost.io/author/scott/"
    }
  ],
  "tags": [
    {
      "id": "655b2782bb728c000101bed7",
      "name": "Press",
      "slug": "press",
      "description": null,
      "feature_image": null,
      "visibility": "public",
      "og_image": null,
      "og_title": null,
      "og_description": null,
      "twitter_image": null,
      "twitter_title": null,
      "twitter_description": null,
      "meta_title": null,
      "meta_description": null,
      "codeinjection_head": null,
      "codeinjection_foot": null,
      "canonical_url": null,
      "accent_color": null,
      "url": "https://jina-ai-gmbh.ghost.io/tag/press/"
    }
  ],
  "primary_author": {
    "id": "641c23a2f4d50d003d590474",
    "name": "Saahil Ognawala",
    "slug": "saahil",
    "profile_image": "https://jina-ai-gmbh.ghost.io/content/images/2023/03/profile-option-2.jpg",
    "cover_image": null,
    "bio": "Senior Product Manager at Jina AI",
    "website": "http://www.saahilognawala.com/",
    "location": "Munich, DE",
    "facebook": null,
    "twitter": "@saahil",
    "meta_title": null,
    "meta_description": null,
    "url": "https://jina-ai-gmbh.ghost.io/author/saahil/"
  },
  "primary_tag": {
    "id": "655b2782bb728c000101bed7",
    "name": "Press",
    "slug": "press",
    "description": null,
    "feature_image": null,
    "visibility": "public",
    "og_image": null,
    "og_title": null,
    "og_description": null,
    "twitter_image": null,
    "twitter_title": null,
    "twitter_description": null,
    "meta_title": null,
    "meta_description": null,
    "codeinjection_head": null,
    "codeinjection_foot": null,
    "canonical_url": null,
    "accent_color": null,
    "url": "https://jina-ai-gmbh.ghost.io/tag/press/"
  },
  "url": "https://jina-ai-gmbh.ghost.io/podcast/jina-reranker-v2-for-agentic-rag-ultra-fast-multilingual-function-calling-and-code-search/",
  "excerpt": "Jina Reranker v2 は、Agentic RAG 向けに構築された最高クラスの reranker です。function-calling をサポートし、100 以上の言語に対応した多言語検索機能、コード検索機能を備え、v1 と比較して 6 倍の高速化を実現しています。",
  "reading_time": 15,
  "access": true,
  "comments": false,
  "og_image": null,
  "og_title": null,
  "og_description": null,
  "twitter_image": null,
  "twitter_title": null,
  "twitter_description": null,
  "meta_title": null,
  "meta_description": null,
  "email_subject": null,
  "frontmatter": null,
  "feature_image_alt": "Black background with word 'RERANKER' in white at left and a stylized white question mark design at the right.",
  "feature_image_caption": null
}
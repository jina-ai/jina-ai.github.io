{
  "slug": "how-to-build-article-recommendations-with-jina-reranker-api-only",
  "id": "65f53dc48ff065000146db23",
  "uuid": "70844a2b-50c2-458a-a609-a5bb11530451",
  "title": "Comment créer des recommandations d'articles avec l'API Jina Reranker uniquement",
  "html": "<p>Nous avons lancé l'<a href=\"https://jina.ai/reranker?ref=jina-ai-gmbh.ghost.io\">API Reranker</a> il y a deux semaines, la positionnant comme une solution de reranking leader sur le marché. Jina Reranker surpasse <a href=\"https://jina.ai/news/maximizing-search-relevancy-and-rag-accuracy-with-jina-reranker?ref=jina-ai-gmbh.ghost.io\">les références populaires dans divers benchmarks, démontrant une augmentation significative jusqu'à +33% du taux de succès par rapport aux résultats BM25.</a> Bien que les performances soient impressionnantes, ce qui m'enthousiasme vraiment, c'est le potentiel de l'API Reranker. Son interface simple permet d'entrer une liste de requêtes-documents et renvoie directement les k meilleurs résultats reclassés. Cela signifie qu'en théorie, on pourrait construire un système de recherche ou de recommandation en utilisant uniquement le Reranker—éliminant ainsi le besoin de BM25, d'embeddings, de bases de données vectorielles ou de pipelines, obtenant ainsi une fonctionnalité de bout en bout.</p><p>Ce concept m'a tellement intrigué que j'ai ressenti le besoin de l'expérimenter. Donc voilà : maintenant en naviguant sur n'importe quelle page d'actualités de notre site web, comme celle que vous lisez actuellement, appuyez sur la touche <code><strong>@</strong></code> et cliquez sur le bouton \"get top 5 related articles\", vous recevrez les cinq articles les plus pertinents par rapport à l'article actuel en environ 5 secondes, en utilisant le modèle <code>jina-reranker-v1</code> (un peu plus long pour le modèle <code>jina-colbert-v1</code>). Tous les calculs sont effectués en ligne et entièrement gérés par l'API Reranker. Voici une vidéo démontrant son fonctionnement :</p><figure class=\"kg-card kg-video-card kg-width-regular kg-card-hascaption\" data-kg-thumbnail=\"https://jina-ai-gmbh.ghost.io/content/media/2024/03/recommender_thumb.jpg\" data-kg-custom-thumbnail=\"\">\n            <div class=\"kg-video-container\">\n                <video src=\"https://jina-ai-gmbh.ghost.io/content/media/2024/03/recommender.mp4\" poster=\"https://img.spacergif.org/v1/1174x796/0a/spacer.png\" width=\"1174\" height=\"796\" playsinline=\"\" preload=\"metadata\" style=\"background: transparent url('https://jina-ai-gmbh.ghost.io/content/media/2024/03/recommender_thumb.jpg') 50% 50% / cover no-repeat;\"></video>\n                <div class=\"kg-video-overlay\">\n                    <button class=\"kg-video-large-play-icon\" aria-label=\"Play video\">\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n                            <path d=\"M23.14 10.608 2.253.164A1.559 1.559 0 0 0 0 1.557v20.887a1.558 1.558 0 0 0 2.253 1.392L23.14 13.393a1.557 1.557 0 0 0 0-2.785Z\"></path>\n                        </svg>\n                    </button>\n                </div>\n                <div class=\"kg-video-player-container\">\n                    <div class=\"kg-video-player\">\n                        <button class=\"kg-video-play-icon\" aria-label=\"Play video\">\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n                                <path d=\"M23.14 10.608 2.253.164A1.559 1.559 0 0 0 0 1.557v20.887a1.558 1.558 0 0 0 2.253 1.392L23.14 13.393a1.557 1.557 0 0 0 0-2.785Z\"></path>\n                            </svg>\n                        </button>\n                        <button class=\"kg-video-pause-icon kg-video-hide\" aria-label=\"Pause video\">\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n                                <rect x=\"3\" y=\"1\" width=\"7\" height=\"22\" rx=\"1.5\" ry=\"1.5\"></rect>\n                                <rect x=\"14\" y=\"1\" width=\"7\" height=\"22\" rx=\"1.5\" ry=\"1.5\"></rect>\n                            </svg>\n                        </button>\n                        <span class=\"kg-video-current-time\">0:00</span>\n                        <div class=\"kg-video-time\">\n                            /<span class=\"kg-video-duration\">0:33</span>\n                        </div>\n                        <input type=\"range\" class=\"kg-video-seek-slider\" max=\"100\" value=\"0\">\n                        <button class=\"kg-video-playback-rate\" aria-label=\"Adjust playback speed\">1×</button>\n                        <button class=\"kg-video-unmute-icon\" aria-label=\"Unmute\">\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n                                <path d=\"M15.189 2.021a9.728 9.728 0 0 0-7.924 4.85.249.249 0 0 1-.221.133H5.25a3 3 0 0 0-3 3v2a3 3 0 0 0 3 3h1.794a.249.249 0 0 1 .221.133 9.73 9.73 0 0 0 7.924 4.85h.06a1 1 0 0 0 1-1V3.02a1 1 0 0 0-1.06-.998Z\"></path>\n                            </svg>\n                        </button>\n                        <button class=\"kg-video-mute-icon kg-video-hide\" aria-label=\"Mute\">\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n                                <path d=\"M16.177 4.3a.248.248 0 0 0 .073-.176v-1.1a1 1 0 0 0-1.061-1 9.728 9.728 0 0 0-7.924 4.85.249.249 0 0 1-.221.133H5.25a3 3 0 0 0-3 3v2a3 3 0 0 0 3 3h.114a.251.251 0 0 0 .177-.073ZM23.707 1.706A1 1 0 0 0 22.293.292l-22 22a1 1 0 0 0 0 1.414l.009.009a1 1 0 0 0 1.405-.009l6.63-6.631A.251.251 0 0 1 8.515 17a.245.245 0 0 1 .177.075 10.081 10.081 0 0 0 6.5 2.92 1 1 0 0 0 1.061-1V9.266a.247.247 0 0 1 .073-.176Z\"></path>\n                            </svg>\n                        </button>\n                        <input type=\"range\" class=\"kg-video-volume-slider\" max=\"100\" value=\"100\">\n                    </div>\n                </div>\n            </div>\n            <figcaption><p><span style=\"white-space: pre-wrap;\">Pour exécuter cette démonstration, vous aurez besoin d'une clé API avec suffisamment de tokens. Si vous épuisez votre quota et ne pouvez pas exécuter la démo, vous pouvez générer une nouvelle clé sur </span><a href=\"https://jina.ai/reranker?ref=jina-ai-gmbh.ghost.io\" target=\"_new\"><span style=\"white-space: pre-wrap;\">https://jina.ai/reranker</span></a><span style=\"white-space: pre-wrap;\">. Chaque nouvelle clé est livrée avec 1 million de tokens gratuits. </span></p></figcaption>\n        </figure><h2 id=\"implementation\">Implémentation</h2><p>L'implémentation est très simple : pour trouver les articles les plus liés à un article donné sur <code>jina.ai/news/</code>, nous utilisons l'article actuellement lu <strong>comme requête</strong> et tous les autres 230+ articles (en utilisant leur texte intégral !) sur notre site d'actualités <strong>comme documents</strong>, excluant bien sûr l'article actuel. Ensuite, nous envoyons ce $(q, d_1, d_2, \\cdots, d_{230})$ comme payload à l'API Reranker. Une fois la réponse reçue, nous utilisons l'index de document trié pour afficher les résultats. Ainsi, le code sous-jacent est le suivant :</p><pre><code class=\"language-js\">const getRecommendedArticles = async () =&gt; {\n  \n  const query = `${currentNews.title} ${currentNews.excerpt}`;\n  const docs = newsStore.allBlogs.filter((item) =&gt; item.slug !== currentNews.slug);\n  \n  const data = {\n    model: modelName,\n    query: query,\n    documents: docs,\n    top_n: 5,\n  }\n\n  const rerankUrl = 'https://api.jina.ai/v1/rerank';\n  const headers = {\n    'Content-Type': 'application/json',\n    Authorization: `Bearer ${apiKey}`,\n  };\n  const modelName = 'jina-reranker-v1-base-en';\n  \n  const res = await fetch(rerankUrl, {\n    method: 'POST',\n    headers: headers,\n    body: JSON.stringify(data),\n  });\n\n  const resp = await res.json();\n\n  const topKList = resp.results.map((item) =&gt; {\n    return docs[item.index];\n  });\n\n  console.log(topKList);\n}</code></pre><figure class=\"kg-card kg-bookmark-card kg-card-hascaption\"><a class=\"kg-bookmark-container\" href=\"https://jina.ai/reranker?ref=jina-ai-gmbh.ghost.io\"><div class=\"kg-bookmark-content\"><div class=\"kg-bookmark-title\">Reranker API</div><div class=\"kg-bookmark-description\">Maximize the search relevancy and RAG accuracy at ease</div><div class=\"kg-bookmark-metadata\"><img class=\"kg-bookmark-icon\" src=\"https://jina.ai/icons/favicon-128x128.png\" alt=\"\"></div></div><div class=\"kg-bookmark-thumbnail\"><img src=\"https://jina.ai/banner-reranker-api.png\" alt=\"\"></div></a><figcaption><p><span style=\"white-space: pre-wrap;\">Pour obtenir une clé API, visitez simplement notre page Reranker API et naviguez jusqu'à la section API. Si vous possédez déjà une clé API de notre Embedding API, vous pouvez la réutiliser ici.</span></p></figcaption></figure><p>Et voilà, vous verrez les résultats, qui sont assez prometteurs pour une première itération, particulièrement compte tenu du fait que le processus d'implémentation prend environ 10 minutes.</p><p>Bien que les lecteurs puissent avoir des préoccupations concernant cette implémentation, certaines critiques peuvent être surestimées, tandis que d'autres peuvent être valides :</p><ul><li><strong>Les inquiétudes concernant les textes trop longs et la nécessité du découpage peuvent être surestimées</strong> : le modèle <code>jina-reranker-v1</code> peut traiter des requêtes jusqu'à 512 en longueur et des documents de longueur arbitraire, tandis que le modèle <code>jina-colbert-v1</code> peut gérer jusqu'à 8192 pour les requêtes et les documents. Par conséquent, l'entrée du texte intégral dans l'API Reranker est probablement inutile. Les deux modèles gèrent efficacement les longs contextes, il n'y a donc pas lieu de s'inquiéter. Le découpage, bien qu'il soit peut-être l'aspect le plus fastidieux et heuristique du pipeline embedding-vector-search-rerank, est moins problématique ici. Cependant, des contextes plus longs supposent plus de tokens, ce que nos utilisateurs payants de l'API devront peut-être prendre en compte. Dans cet exemple, parce que nous utilisons le texte intégral de tous les 233 articles, une requête de reranking coûte plus de 300K tokens.</li><li><strong>L'impact des données brutes versus nettoyées sur la qualité</strong>. L'ajout du nettoyage des données pourrait effectivement conduire à des améliorations. Par exemple, nous avons observé que la simple suppression des balises HTML (c'est-à-dire <code>docs.map(item =&gt; item.html.replace(/&lt;[^&gt;]*&gt;?/gm, '')</code>) améliore significativement la qualité des recommandations pour le modèle <code>jina-reranker-v1</code>, bien que l'effet soit moins prononcé pour le modèle <code>jina-colbert-v1</code>. Cela suggère que notre modèle ColBERT a été entraîné pour être plus tolérant aux textes bruités que le modèle <code>jina-reranker-v1</code>.</li><li><strong>L'influence de différentes constructions de requêtes sur la qualité.</strong> Dans l'implémentation ci-dessus, nous avons directement utilisé le titre et l'extrait de l'article actuel comme requête. Est-ce l'approche optimale pour construire la requête ? L'ajout d'un préfixe tel que <code>\"What is the most related article to...\"</code> ou<code>\"Je vous donnerai 20 $ de pourboire si vous recommandez le meilleur article,\"</code> similaire aux prompts utilisés avec les grands modèles de langage, serait-il bénéfique ? Cela soulève une question intéressante, probablement liée à la distribution des données d'entraînement du modèle, que nous prévoyons d'explorer davantage.</li><li>En nous appuyant sur le point précédent concernant la construction des requêtes, il serait intéressant d'étudier plus en profondeur les capacités compositionnelles de la requête, comme l'utilisation de l'historique de navigation récent d'un utilisateur pour des recommandations personnalisées. Il est particulièrement intéressant de considérer si le système pourrait comprendre non seulement les exemples positifs dans la requête <strong>mais aussi les négatifs, </strong>par exemple les opérateurs <code>NOT_LIKE</code>, <code>\"Ne me recommandez pas d'article comme celui-ci\"</code> ou <code>\"Je veux en voir moins comme celui-ci\"</code>. Nous approfondirons ce sujet dans la section suivante.</li></ul><h2 id=\"empirical-study-on-query-writing\">Étude empirique sur la rédaction des requêtes</h2><p>Dans notre exploration des différentes méthodes de rédaction de requêtes avec la Jina Reranker API, en nous concentrant sur les 10 premiers résultats, nous avons mené une évaluation qualitative par étiquetage humain (c'est-à-dire évaluée par nous-mêmes), ce qui est logique puisque nous avons une connaissance complète de tout le contenu publié sur notre site web. Les stratégies de rédaction de requêtes que nous avons examinées comprenaient :</p><ul><li>L'utilisation du Titre, de l'Extrait, et d'une combinaison Titre + Extrait de l'article.</li><li>L'adoption d'instructions de type \"Prompt\" comme \"plus comme ceci,\" \"pas comme ceci,\" et \"quel est l'article le plus étroitement lié ?\"</li></ul><p>Pour tester l'efficacité du reranker, nous avons sélectionné deux articles non triviaux comme sujets de requête, visant à identifier les articles les plus pertinents parmi notre vaste catalogue de plus de 200 articles—un défi inspiré de \"l'aiguille dans une botte de foin\" dans les LLM. Ci-dessous, nous avons mis en évidence ces \"aiguilles\" en vert pour plus de clarté.</p><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://jina-ai-gmbh.ghost.io/content/images/2024/03/image.png\" class=\"kg-image\" alt=\"Screenshot of a table ranking articles on search technology relevance, featuring titles, excerpts, and 'More Like' or 'Not Li\" loading=\"lazy\" width=\"2000\" height=\"758\" srcset=\"https://jina-ai-gmbh.ghost.io/content/images/size/w600/2024/03/image.png 600w, https://jina-ai-gmbh.ghost.io/content/images/size/w1000/2024/03/image.png 1000w, https://jina-ai-gmbh.ghost.io/content/images/size/w1600/2024/03/image.png 1600w, https://jina-ai-gmbh.ghost.io/content/images/size/w2400/2024/03/image.png 2400w\" sizes=\"(min-width: 720px) 720px\"><figcaption><span style=\"white-space: pre-wrap;\">Les résultats complets de notre étude sont détaillés </span><a href=\"https://docs.google.com/spreadsheets/d/1XDOXjP6IVK1hXk3gKkng_cOpTrmS9Hm1UKCGvW1wMxU/edit?usp=sharing&ref=jina-ai-gmbh.ghost.io\"><span style=\"white-space: pre-wrap;\">dans cette feuille de calcul</span></a><span style=\"white-space: pre-wrap;\">.</span></figcaption></figure><h2 id=\"summary\">Résumé</h2><p>Sur la base des résultats des tests, nous avons fait quelques observations et résumés :</p><ol><li>La combinaison du Titre et de l'Extrait donne les meilleurs résultats de reclassement, l'Extrait jouant un rôle significatif dans l'amélioration de la qualité du reclassement.</li><li>L'incorporation d'instructions de type \"prompt\" n'entraîne aucune amélioration.</li><li>Le modèle de reranker ne traite pas efficacement les qualificatifs positifs ou négatifs actuellement. Les termes tels que \"plus comme\", \"moins comme\", ou \"pas comme\" ne sont pas compréhensibles par le reranker.</li></ol><p>Les observations des points 2 et 3 offrent des directions intéressantes pour les améliorations futures du reranker. Nous pensons que permettre le prompting à la volée pour modifier la logique de tri pourrait considérablement étendre les capacités du reranker, débloquant de nouvelles applications potentielles comme la curation/recommandation de contenu personnalisée.</p>",
  "comment_id": "65f53dc48ff065000146db23",
  "feature_image": "https://jina-ai-gmbh.ghost.io/content/images/2024/03/Heading--1-.png",
  "featured": false,
  "visibility": "public",
  "created_at": "2024-03-16T07:35:48.000+01:00",
  "updated_at": "2024-03-17T19:26:09.000+01:00",
  "published_at": "2024-03-17T06:38:36.000+01:00",
  "custom_excerpt": "You can build an article recommendation system with just the Jina Reranker API—no pipeline, no embeddings, no vector search, only reranking. Find out how in 20 lines of code.",
  "codeinjection_head": null,
  "codeinjection_foot": null,
  "custom_template": null,
  "canonical_url": null,
  "authors": [
    {
      "id": "1",
      "name": "Engineering Group",
      "slug": "engineering",
      "profile_image": "https://jina-ai-gmbh.ghost.io/content/images/2022/11/1.png",
      "cover_image": null,
      "bio": "We do opensource, we do neural search, we do creative AI, we do MLOps. We do we.",
      "website": "https://github.com/jina-ai",
      "location": "Berlin, Germany",
      "facebook": null,
      "twitter": "@jinaai_",
      "meta_title": null,
      "meta_description": null,
      "url": "https://jina-ai-gmbh.ghost.io/author/engineering/"
    }
  ],
  "tags": [
    {
      "id": "634a1a8ccebfc1003d8ab706",
      "name": "Tech Blog",
      "slug": "tech-blog",
      "description": null,
      "feature_image": null,
      "visibility": "public",
      "og_image": null,
      "og_title": null,
      "og_description": null,
      "twitter_image": null,
      "twitter_title": null,
      "twitter_description": null,
      "meta_title": null,
      "meta_description": null,
      "codeinjection_head": null,
      "codeinjection_foot": null,
      "canonical_url": null,
      "accent_color": null,
      "url": "https://jina-ai-gmbh.ghost.io/tag/tech-blog/"
    }
  ],
  "primary_author": {
    "id": "1",
    "name": "Engineering Group",
    "slug": "engineering",
    "profile_image": "https://jina-ai-gmbh.ghost.io/content/images/2022/11/1.png",
    "cover_image": null,
    "bio": "We do opensource, we do neural search, we do creative AI, we do MLOps. We do we.",
    "website": "https://github.com/jina-ai",
    "location": "Berlin, Germany",
    "facebook": null,
    "twitter": "@jinaai_",
    "meta_title": null,
    "meta_description": null,
    "url": "https://jina-ai-gmbh.ghost.io/author/engineering/"
  },
  "primary_tag": {
    "id": "634a1a8ccebfc1003d8ab706",
    "name": "Tech Blog",
    "slug": "tech-blog",
    "description": null,
    "feature_image": null,
    "visibility": "public",
    "og_image": null,
    "og_title": null,
    "og_description": null,
    "twitter_image": null,
    "twitter_title": null,
    "twitter_description": null,
    "meta_title": null,
    "meta_description": null,
    "codeinjection_head": null,
    "codeinjection_foot": null,
    "canonical_url": null,
    "accent_color": null,
    "url": "https://jina-ai-gmbh.ghost.io/tag/tech-blog/"
  },
  "url": "https://jina-ai-gmbh.ghost.io/podcast/how-to-build-article-recommendations-with-jina-reranker-api-only/",
  "excerpt": "Vous pouvez créer un système de recommandation d'articles avec uniquement l'API Jina Reranker — pas de pipeline, pas d'embeddings, pas de recherche vectorielle, seulement du reclassement. Découvrez comment en 20 lignes de code.",
  "reading_time": 5,
  "access": true,
  "comments": false,
  "og_image": null,
  "og_title": null,
  "og_description": null,
  "twitter_image": null,
  "twitter_title": null,
  "twitter_description": null,
  "meta_title": null,
  "meta_description": null,
  "email_subject": null,
  "frontmatter": null,
  "feature_image_alt": "Black background with a grid, multiple smiley faces, and a cursor pointing to one of them.",
  "feature_image_caption": null
}
{
  "slug": "query-expansion-with-llms-searching-better-by-saying-more",
  "id": "67af53142962d20001d63c71",
  "uuid": "581110d6-5791-42f7-b754-16d597390ff7",
  "title": "L'expansion de requêtes avec les LLM : améliorer la recherche en disant plus",
  "html": "<p>L'expansion des requêtes a longtemps été une technique privilégiée pour améliorer les systèmes de recherche, bien qu'elle ait été reléguée au second plan depuis l'apparition des embeddings sémantiques. Bien que certains puissent la considérer comme dépassée dans notre contexte actuel de RAG et de recherche par agents, il ne faut pas l'écarter trop vite. Dans cette analyse approfondie, nous verrons comment la combinaison de l'expansion automatique des requêtes avec <code>jina-embeddings-v3</code> et les LLMs peut améliorer vos performances de recherche et fournir des résultats vraiment pertinents.</p><h2 id=\"what-is-query-expansion\">Qu'est-ce que l'expansion des requêtes ?</h2><p>L'expansion des requêtes a été développée pour les systèmes de recherche qui jugent la pertinence en faisant correspondre les mots des requêtes avec les documents qui les contiennent, comme le <a href=\"https://en.wikipedia.org/wiki/Tf%E2%80%93idf\">tf-idf</a> ou d'autres schémas de \"vecteurs épars\". Cela présente des limitations évidentes. Les variantes des mots interfèrent avec la correspondance, comme \"courir\" et \"courant\", ou \"optimiser\" vs \"optimize\". Le prétraitement linguistique peut atténuer certains de ces problèmes, mais pas tous. Les termes techniques, les synonymes et les mots apparentés sont beaucoup plus difficiles à traiter. Par exemple, une requête pour la recherche médicale sur le \"coronavirus\" n'identifiera pas automatiquement les documents qui parlent de \"COVID\" ou \"SARS-CoV-2\", même si ce seraient de très bonnes correspondances.</p><p>L'expansion des requêtes a été inventée comme solution.</p><p>L'idée est d'ajouter des mots et des phrases supplémentaires aux requêtes pour augmenter la probabilité d'identifier de bonnes correspondances. Ainsi, une requête pour \"coronavirus\" pourrait se voir ajouter les termes \"COVID\" et \"SARS-CoV-2\". Cela peut améliorer considérablement les performances de recherche.</p><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://jina-ai-gmbh.ghost.io/content/images/2025/02/QueryExpansion1.png\" class=\"kg-image\" alt=\"\" loading=\"lazy\" width=\"2000\" height=\"700\" srcset=\"https://jina-ai-gmbh.ghost.io/content/images/size/w600/2025/02/QueryExpansion1.png 600w, https://jina-ai-gmbh.ghost.io/content/images/size/w1000/2025/02/QueryExpansion1.png 1000w, https://jina-ai-gmbh.ghost.io/content/images/size/w1600/2025/02/QueryExpansion1.png 1600w, https://jina-ai-gmbh.ghost.io/content/images/2025/02/QueryExpansion1.png 2000w\" sizes=\"(min-width: 720px) 720px\"><figcaption><span style=\"white-space: pre-wrap;\">Figure 1 : Diagramme d'expansion des requêtes avec thésaurus</span></figcaption></figure><p>Il n'est pas facile de décider quels termes doivent être ajoutés à une requête, et il y a eu beaucoup de travail sur la façon d'identifier les bons termes et comment les pondérer pour la recherche de type tf-idf. Les approches courantes incluent :</p><ul><li>L'utilisation d'un thésaurus géré manuellement.</li><li>L'extraction de données de grands corpus de textes pour trouver des mots apparentés.</li><li>L'identification d'autres termes utilisés dans des requêtes similaires à partir d'un journal de requêtes.</li><li>L'apprentissage des mots et phrases qui font de bonnes expansions de requêtes <a href=\"https://en.wikipedia.org/wiki/Rocchio_algorithm\">à partir du retour des utilisateurs</a>.</li></ul><p>Cependant, les modèles d'embedding sémantique sont censés éliminer le besoin d'expansion des requêtes. Les bons embeddings de texte pour \"coronavirus\", \"COVID\" et \"SARS-CoV-2\" devraient être très proches les uns des autres dans l'espace vectoriel d'embedding. Ils devraient naturellement correspondre sans aucune augmentation.</p><p>Mais, bien que cela devrait être vrai en théorie, les embeddings réels créés par des modèles réels sont souvent insuffisants. Les mots dans les embeddings peuvent être ambigus et l'ajout de mots à une requête peut l'orienter vers de meilleures correspondances si vous utilisez les bons mots. Par exemple, un embedding pour \"éruption cutanée\" pourrait identifier des documents sur \"agir de manière irréfléchie\" et \"crème pour la peau\" tout en manquant un article de journal médical qui parle de \"dermatite\". L'ajout de termes pertinents orientera probablement l'embedding loin des correspondances non liées vers de meilleures correspondances.</p><h2 id=\"llm-query-expansion\">Expansion des requêtes par LLM</h2><p>Au lieu d'utiliser un thésaurus ou de faire de l'extraction lexicale de données, nous avons examiné l'utilisation d'un LLM pour faire l'expansion des requêtes. Les LLMs présentent quelques avantages potentiels importants :</p><ul><li><strong>Large connaissance lexicale</strong> : Comme ils sont entraînés sur des jeux de données vastes et diversifiés, il y a moins de préoccupations concernant la sélection d'un thésaurus approprié ou l'obtention des bonnes données.</li><li><strong>Capacité de jugement</strong> : Tous les termes d'expansion proposés ne sont pas nécessairement appropriés à une requête spécifique. Les LLMs ne font peut-être pas des jugements parfaits sur la thématique, mais les alternatives ne peuvent pas vraiment faire de jugements du tout.</li><li><strong>Flexibilité</strong> : Vous pouvez ajuster votre prompt aux besoins de la tâche de recherche, tandis que les autres approches sont rigides et peuvent nécessiter beaucoup de travail pour s'adapter à de nouveaux domaines ou sources de données.</li></ul><p>Une fois que le LLM a proposé une liste de termes, l'expansion des requêtes pour les embeddings fonctionne de la même manière que les schémas traditionnels d'expansion des requêtes : Nous ajoutons des termes au texte de la requête puis utilisons un modèle d'embedding pour créer un vecteur d'embedding de requête.</p><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://jina-ai-gmbh.ghost.io/content/images/2025/02/QueryExpansion2.png\" class=\"kg-image\" alt=\"\" loading=\"lazy\" width=\"2000\" height=\"850\" srcset=\"https://jina-ai-gmbh.ghost.io/content/images/size/w600/2025/02/QueryExpansion2.png 600w, https://jina-ai-gmbh.ghost.io/content/images/size/w1000/2025/02/QueryExpansion2.png 1000w, https://jina-ai-gmbh.ghost.io/content/images/size/w1600/2025/02/QueryExpansion2.png 1600w, https://jina-ai-gmbh.ghost.io/content/images/2025/02/QueryExpansion2.png 2000w\" sizes=\"(min-width: 720px) 720px\"><figcaption><span style=\"white-space: pre-wrap;\">Figure 2 : Expansion des requêtes d'embeddings avec un LLM</span></figcaption></figure><p>Pour que cela fonctionne, vous avez besoin de :</p><ul><li>Accès à un LLM.</li><li>Un modèle de prompt pour solliciter des termes d'expansion du LLM.</li><li>Un modèle d'embedding de texte.</li></ul><h2 id=\"trying-it-out\">Test pratique</h2><p>Nous avons réalisé quelques expériences pour voir si cette approche ajoute de la valeur à la recherche d'information textuelle. Nos tests ont utilisé :</p><ul><li>Un LLM : <a href=\"https://deepmind.google/technologies/gemini/flash/\">Gemini 2.0 Flash</a> de Google.</li><li>Deux modèles d'embedding pour voir si l'expansion des requêtes par LLM se généralise à travers les modèles : <code>jina-embeddings-v3</code> et <a href=\"https://huggingface.co/sentence-transformers/all-MiniLM-L6-v2\"><code>all-MiniLM-L6-v2</code></a>.</li><li>Un sous-ensemble des <a href=\"https://github.com/beir-cellar/beir\">benchmarks BEIR</a> pour la recherche d'information.</li></ul><p>Nous avons effectué nos expériences dans deux conditions de prompting :</p><ul><li>Utilisation d'un modèle de prompt général pour solliciter des termes d'expansion.</li><li>Utilisation de modèles de prompt spécifiques à la tâche.</li></ul><p>Enfin, nous avons écrit nos prompts pour solliciter différents nombres de termes à ajouter : 100, 150 et 250.</p><p>Notre code et nos résultats sont <a href=\"https://github.com/jina-ai/llm-query-expansion/\">disponibles sur GitHub</a> pour reproduction.</p><figure class=\"kg-card kg-bookmark-card\"><a class=\"kg-bookmark-container\" href=\"https://github.com/jina-ai/llm-query-expansion/\"><div class=\"kg-bookmark-content\"><div class=\"kg-bookmark-title\">GitHub - jina-ai/llm-query-expansion: Query Expension for Better Query Embedding using LLMs</div><div class=\"kg-bookmark-description\">Query Expension for Better Query Embedding using LLMs - jina-ai/llm-query-expansion</div><div class=\"kg-bookmark-metadata\"><img class=\"kg-bookmark-icon\" src=\"https://jina-ai-gmbh.ghost.io/content/images/icon/pinned-octocat-093da3e6fa40-1.svg\" alt=\"\"><span class=\"kg-bookmark-author\">GitHub</span><span class=\"kg-bookmark-publisher\">jina-ai</span></div></div><div class=\"kg-bookmark-thumbnail\"><img src=\"https://jina-ai-gmbh.ghost.io/content/images/thumbnail/llm-query-expansion\" alt=\"\" onerror=\"this.style.display = 'none'\"></div></a></figure><h2 id=\"results\">Résultats</h2><h3 id=\"using-a-general-prompt\">Utilisation d'un prompt général</h3><p>Après quelques essais et erreurs, nous avons trouvé que le prompt suivant fonctionnait suffisamment bien avec Gemini 2.0 Flash :</p>\n<!--kg-card-begin: html-->\n<pre>\nPlease provide additional search keywords and phrases for \neach of the key aspects of the following queries that make \nit easier to find the relevant documents (about <span style=\"color:#AADB1E\">{size}</span> words \nper query):\n<span style=\"color:#AADB1E\">{query}</span>\n\nPlease respond in the following JSON schema:\nExpansion = {\"qid\": str, \"additional_info\": str}\nReturn: list [Expansion]\n</pre>\n<!--kg-card-end: html-->\n<p>Ce prompt nous permet de regrouper nos requêtes par lots de 20-50, en donnant un ID à chacune, et en récupérant une chaîne JSON qui relie chaque requête à une liste de termes d'expansion. Si vous utilisez un LLM différent, vous devrez peut-être expérimenter pour trouver un prompt qui lui convient.</p><p>Nous avons appliqué cette configuration avec <code>jina-embeddings-v3</code> en utilisant l'<a href=\"https://jina.ai/news/jina-embeddings-v3-a-frontier-multilingual-embedding-model\">adaptateur de recherche asymétrique</a>. Avec cette approche, les requêtes et les documents sont encodés différemment — en utilisant le même modèle mais différentes extensions LoRA — pour optimiser les embeddings résultants pour la recherche d'information.</p><p>Nos résultats sur divers benchmarks BEIR sont dans le tableau ci-dessous. Les scores sont nDCG@10 (<a href=\"https://en.wikipedia.org/wiki/Discounted_cumulative_gain\">Gain Cumulatif Actualisé normalisé</a> sur les dix premiers éléments récupérés).</p>\n<!--kg-card-begin: html-->\n<table>\n<thead>\n<tr>\n<th>Benchmark</th>\n<th>Sans expansion</th>\n<th>100 termes</th>\n<th>150 termes</th>\n<th>250 termes</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong>SciFact</strong><br/>(Tâche de vérification des faits)</td>\n<td>72,74</td>\n<td>73,39</td>\n<td>74,16</td>\n<td><strong>74,33</strong></td>\n</tr>\n<tr>\n<td><strong>TRECCOVID</strong><br/>(Tâche de recherche médicale)</td>\n<td>77,55</td>\n<td>76,74</td>\n<td>77,12</td>\n<td><strong>79,28</strong></td>\n</tr>\n<tr>\n<td><strong>FiQA</strong><br/>(Recherche d'options financières)</td>\n<td>47,34</td>\n<td><strong>47,76</strong></td>\n<td>46,03</td>\n<td>47,34</td>\n</tr>\n<tr>\n<td><strong>NFCorpus</strong><br/>(Recherche d'information médicale)</td>\n<td>36,46</td>\n<td><strong>40,62</strong></td>\n<td>39,63</td>\n<td>39,20</td>\n</tr>\n<tr>\n<td><strong>Touche2020</strong><br/>(Tâche de recherche d'arguments)</td>\n<td>26,24</td>\n<td>26,91</td>\n<td>27,15</td>\n<td><strong>27,54</strong></td>\n</tr>\n</tbody>\n</table>\n<!--kg-card-end: html--><p>Nous constatons ici que l'expansion des requêtes a presque toujours amélioré la recherche.</p><p>Pour tester la robustesse de cette approche, nous avons répété les mêmes tests avec <code>all-MiniLM-L6-v2</code>, un modèle beaucoup plus petit qui produit des vecteurs d'embedding plus courts.</p><figure class=\"kg-card kg-bookmark-card\"><a class=\"kg-bookmark-container\" href=\"https://huggingface.co/sentence-transformers/all-MiniLM-L6-v2\"><div class=\"kg-bookmark-content\"><div class=\"kg-bookmark-title\">sentence-transformers/all-MiniLM-L6-v2 · Hugging Face</div><div class=\"kg-bookmark-description\">We're on a journey to advance and democratize artificial intelligence through open source and open science.</div><div class=\"kg-bookmark-metadata\"><img class=\"kg-bookmark-icon\" src=\"https://jina-ai-gmbh.ghost.io/content/images/icon/favicon-29.ico\" alt=\"\"></div></div><div class=\"kg-bookmark-thumbnail\"><img src=\"https://jina-ai-gmbh.ghost.io/content/images/thumbnail/all-MiniLM-L6-v2.png\" alt=\"\" onerror=\"this.style.display = 'none'\"></div></a></figure><p>Les résultats sont dans le tableau ci-dessous :</p>\n<!--kg-card-begin: html-->\n<table>\n<thead>\n<tr>\n<th>Benchmark</th>\n<th>Sans Expansion</th>\n<th>100 termes</th>\n<th>150 termes</th>\n<th>250 termes</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong>SciFact</strong><br/>(Tâche de vérification des faits)</td>\n<td>64.51</td>\n<td><strong>68.72</strong></td>\n<td>66.27</td>\n<td>68.50</td>\n</tr>\n<tr>\n<td><strong>TRECCOVID</strong><br/>(Tâche de recherche médicale)</td>\n<td>47.25</td>\n<td>67.90</td>\n<td><strong>70.18</strong></td>\n<td>69.60</td>\n</tr>\n<tr>\n<td><strong>FiQA</strong><br/>(Recherche d'options financières)</td>\n<td><strong>36.87</strong></td>\n<td>33.96</td>\n<td>32.60</td>\n<td>31.84</td>\n</tr>\n<tr>\n<td><strong>NFCorpus</strong><br/>(Recherche d'informations médicales)</td>\n<td>31.59</td>\n<td><strong>33.76</strong></td>\n<td>33.76</td>\n<td>33.35</td>\n</tr>\n<tr>\n<td><strong>Touche2020</strong><br/>(Tâche de recherche d'arguments)</td>\n<td>16.90</td>\n<td><strong>25.31</strong></td>\n<td>23.52</td>\n<td>23.23</td>\n</tr>\n</tbody>\n</table>\n<!--kg-card-end: html-->\n<p>Nous constatons ici une amélioration encore plus importante des scores de recherche. Dans l'ensemble, le modèle plus petit a davantage profité de l'expansion des requêtes. L'amélioration moyenne sur toutes les tâches est résumée dans le tableau ci-dessous :</p>\n<!--kg-card-begin: html-->\n<table>\n<thead>\n<tr>\n<th>Modèle</th>\n<th>100 termes</th>\n<th>150 termes</th>\n<th>250 termes</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>jina-embeddings-v3</code></td>\n<td>+1.02</td>\n<td>+0.75</td>\n<td><strong>+1.48</strong></td>\n</tr>\n<tr>\n<td><code>all-MiniLM-L6-v2</code></td>\n<td><strong>+6.51</strong></td>\n<td>+5.84</td>\n<td>+5.88</td>\n</tr>\n</tbody>\n</table>\n<!--kg-card-end: html-->\n<p>La grande différence d'amélioration nette entre les deux modèles est probablement due au fait que <code>all-MiniLM-L6-v2</code> part d'un niveau de performance plus bas. Les embeddings de requêtes produits par <code>jina-embeddings-v3</code> en mode de recherche asymétrique sont mieux capables de capturer les relations sémantiques clés, et il y a donc moins de place pour que l'expansion des requêtes ajoute de l'information. Mais ce résultat montre à quel point l'expansion des requêtes peut améliorer les performances des modèles plus compacts qui peuvent être préférables dans certains cas d'utilisation aux grands modèles.</p><p>Néanmoins, l'expansion des requêtes a apporté une amélioration significative à la recherche même pour les modèles haute performance comme <code>jina-embeddings-v3</code>, mais ce résultat n'est pas parfaitement cohérent à travers toutes les tâches et conditions.</p><p>Pour <code>jina-embeddings-v3</code>, ajouter plus de 100 termes à une requête était contre-productif pour les benchmarks FiQA et NFCorpus. Nous ne pouvons pas dire que plus de termes sont toujours meilleurs, mais les résultats sur les autres benchmarks indiquent que plus de termes sont au moins parfois meilleurs.</p><p>Pour <code>all-MiniLM-L6-v2</code>, ajouter plus de 150 termes était toujours contre-productif, et sur trois tests, ajouter plus de 100 n'améliorait pas les scores. Sur un test (FiQA), l'ajout de même 100 termes a produit des résultats significativement plus bas. Nous pensons que c'est parce que <code>jina-embeddings-v3</code> fait un meilleur travail pour capturer l'information sémantique dans les textes de requête longs.</p><p>Les deux modèles ont montré moins de réponse à l'expansion des requêtes sur les benchmarks FiQA et NFCorpus.</p><h2 id=\"using-task-specific-prompting\">Utilisation de prompts spécifiques aux tâches</h2><p>Le modèle de résultats rapporté ci-dessus suggère que bien que l'expansion des requêtes soit utile, l'utilisation des LLM risque d'ajouter des termes de requête inutiles qui réduisent les performances. Cela pourrait être causé par la nature générique du prompt.</p><p>Nous avons pris deux benchmarks — SciFact et FiQA — et créé des prompts plus spécifiques au domaine, comme celui ci-dessous :</p>\n<!--kg-card-begin: html-->\n<pre>\nPlease provide additional search keywords and phrases for \neach of the key aspects of the following queries that make\nit easier to find the <span style=\"background-color:red\">relevant documents</span> <span style=\"background-color:green\">scientific document \nthat supports or rejects the scientific fact in the query \nfield</span> (about <span style=\"color:#AADB1E\">{size}</span> words per query):\n<span style=\"color:#AADB1E\">{query}</span>\nPlease respond in the following JSON schema:\nExpansion = {\"qid\": str, \"additional_info\": str}\nReturn: list [Expansion]\n</pre>\n<!--kg-card-end: html-->\n<p>Cette approche a amélioré les performances de recherche presque dans tous les cas :</p>\n<!--kg-card-begin: html-->\n<table>\n<thead>\n<tr>\n<th>Benchmark</th>\n<th>Modèle</th>\n<th>Sans Expansion</th>\n<th>100<br/>termes</th>\n<th>150<br/>termes</th>\n<th>250<br/>termes</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>SciFact</td>\n<td><code>jina-embeddings-v3</code></td>\n<td>72.74</td>\n<td><strong>75.85 (+2.46)</strong></td>\n<td>75.07 (+0.91)</td>\n<td>75.13 (+0.80)</td>\n</tr>\n<tr>\n<td>SciFact</td>\n<td><code>all-MiniLM-L6-v2</code></td>\n<td>64.51</td>\n<td><strong>69.12 (+0.40)</strong></td>\n<td>68.10 (+1.83)</td>\n<td>67.83 (-0.67)</td>\n</tr>\n<tr>\n<td>FiQA</td>\n<td><code>jina-embeddings-v3</code></td>\n<td>47.34</td>\n<td>47.77 (+0.01)</td>\n<td><strong>48.20 (+1.99)</strong></td>\n<td>47.75 (+0.41)</td>\n</tr>\n<tr>\n<td>FiQA</td>\n<td><code>all-MiniLM-L6-v2</code></td>\n<td><strong>36.87</strong></td>\n<td>34.71 (+0.75)</td>\n<td>34.68 (+2.08)</td>\n<td>34.50 (+2.66)</td>\n</tr>\n</tbody>\n</table>\n<!--kg-card-end: html-->\n<p>Les scores se sont améliorés dans toutes les conditions sauf l'ajout de 250 termes aux requêtes SciFact avec <code>all-MiniLM-L6-v2</code>. De plus, cette amélioration n'a pas été suffisante pour faire dépasser à <code>all-MiniLM-L6-v2</code> sa propre référence sur FiQA.</p><p>Pour <code>jina-embeddings-v3</code>, nous voyons que les meilleurs résultats sont venus avec 100 ou 150 termes ajoutés. L'ajout de 250 termes était contre-productif. Cela confirme notre intuition qu'on peut ajouter trop de termes à sa requête, surtout si leur sens commence à s'éloigner de la cible.</p><h2 id=\"key-considerations-in-query-expansion\">Considérations clés dans l'expansion des requêtes</h2><p>L'expansion des requêtes peut clairement apporter des gains à la recherche basée sur les embeddings, mais s'accompagne de certaines mises en garde :</p><h3 id=\"expense\">Coût</h3><p>L'interaction avec un LLM ajoute de la latence et des coûts de calcul à la recherche d'information, et peut ajouter des coûts réels si vous utilisez un LLM commercial. L'amélioration modérée qu'elle apporte peut ne pas justifier la dépense.</p><h3 id=\"prompt-engineering\">Ingénierie des prompts</h3><p>Concevoir de bons modèles de prompts est un art empirique et expérimental. Nous ne prétendons pas que ceux que nous avons utilisés pour ce travail sont optimaux ou portables vers d'autres LLM. Nos expériences avec des prompts spécifiques aux tâches montrent que changer vos prompts peut avoir des effets très significatifs sur la qualité du résultat. Les résultats varient aussi considérablement selon les domaines.</p><p>Ces incertitudes augmentent le coût de développement et compromettent la maintenabilité. Tout changement du système — changement de LLM, de modèles d'embedding ou de domaine d'information — signifie revérifier et peut-être réimplémenter l'ensemble du processus.</p><h3 id=\"alternatives\">Alternatives</h3><p>Nous voyons ici que l'expansion des requêtes a apporté la plus grande amélioration au modèle d'embedding ayant les performances initiales les plus faibles. L'expansion des requêtes, du moins dans cette expérience, n'a pas été capable de combler l'écart de performance entre <code>all-MiniLM-L6-v2</code> et <code>jina-embeddings-v3</code>, tandis que <code>jina-embeddings-v3</code> a vu des améliorations plus modestes grâce à l'expansion des requêtes.</p><p>Dans ces circonstances, un utilisateur de <code>all-MiniLM-L6-v2</code> obtiendrait de meilleurs résultats à moindre coût en adoptant <code>jina-embeddings-v3</code> plutôt qu'en poursuivant l'expansion des requêtes.</p><h2 id=\"future-directions\">Directions futures</h2><p>Nous avons montré ici que l'expansion des requêtes peut améliorer les embeddings de requêtes, et que les LLM offrent un moyen simple et flexible d'obtenir de bons termes d'expansion de requêtes. Mais les gains relativement modestes suggèrent qu'il y a encore du travail à faire. Nous examinons plusieurs directions pour la recherche future :</p><ul><li>Tester la valeur de l'enrichissement terminologique dans la génération des embeddings de documents.</li><li>Explorer les possibilités d'amélioration des requêtes dans d'autres techniques de recherche IA comme le reclassement.</li><li>Comparer l'expansion des requêtes basée sur les LLM à des sources de termes plus anciennes et moins coûteuses en calcul, comme un thésaurus.</li><li>Entraîner des modèles de langage spécifiquement pour être meilleurs en expansion de requêtes et leur fournir un entraînement plus spécifique au domaine.</li><li>Limiter le nombre de termes ajoutés. 100 peut être trop pour commencer.</li><li>Trouver des moyens d'identifier les termes d'expansion utiles et inutiles. Tout nombre fixe que nous imposons à l'expansion des requêtes ne sera pas parfaitement adapté et si nous pouvions évaluer dynamiquement les termes suggérés et ne garder que les bons, le résultat serait probablement une amélioration des performances.</li></ul><p>Il s'agit d'une recherche très préliminaire, et nous sommes optimistes que des techniques comme celle-ci apporteront d'autres améliorations aux produits de base de recherche de Jina AI.</p>",
  "comment_id": "67af53142962d20001d63c71",
  "feature_image": "https://jina-ai-gmbh.ghost.io/content/images/2025/02/query-banner.png",
  "featured": false,
  "visibility": "public",
  "created_at": "2025-02-14T15:28:36.000+01:00",
  "updated_at": "2025-02-18T03:24:20.000+01:00",
  "published_at": "2025-02-18T03:24:20.000+01:00",
  "custom_excerpt": "Search has changed a lot since embedding models were introduced. Is there still a role for lexical techniques like query expansion in AI? We think so.",
  "codeinjection_head": null,
  "codeinjection_foot": null,
  "custom_template": null,
  "canonical_url": null,
  "authors": [
    {
      "id": "636409b554b68a003dfbdef8",
      "name": "Michael Günther",
      "slug": "michael",
      "profile_image": "https://jina-ai-gmbh.ghost.io/content/images/2022/11/profile_low_quality.jpeg",
      "cover_image": null,
      "bio": "ML Scientist and Engineer @ Jina AI. Enthusiastic about open source and AI with particular interest in solving information retrieval problems.",
      "website": "https://github.com/guenthermi",
      "location": "Berlin",
      "facebook": null,
      "twitter": null,
      "meta_title": null,
      "meta_description": null,
      "url": "https://jina-ai-gmbh.ghost.io/author/michael/"
    },
    {
      "id": "632ae7353e4e55003d52598e",
      "name": "Scott Martens",
      "slug": "scott",
      "profile_image": "https://jina-ai-gmbh.ghost.io/content/images/2022/11/photo-of-me-cropped.jpg",
      "cover_image": "https://jina-ai-gmbh.ghost.io/content/images/2022/11/shanshui-ernie-crop.png",
      "bio": "A rogue AI created by Canada's Weapon X program.\n\nContent Creator @ Jina AI",
      "website": "https://jina.ai",
      "location": "Berlin",
      "facebook": null,
      "twitter": null,
      "meta_title": null,
      "meta_description": null,
      "url": "https://jina-ai-gmbh.ghost.io/author/scott/"
    }
  ],
  "tags": [
    {
      "id": "634a1a8ccebfc1003d8ab706",
      "name": "Tech Blog",
      "slug": "tech-blog",
      "description": null,
      "feature_image": null,
      "visibility": "public",
      "og_image": null,
      "og_title": null,
      "og_description": null,
      "twitter_image": null,
      "twitter_title": null,
      "twitter_description": null,
      "meta_title": null,
      "meta_description": null,
      "codeinjection_head": null,
      "codeinjection_foot": null,
      "canonical_url": null,
      "accent_color": null,
      "url": "https://jina-ai-gmbh.ghost.io/tag/tech-blog/"
    }
  ],
  "primary_author": {
    "id": "636409b554b68a003dfbdef8",
    "name": "Michael Günther",
    "slug": "michael",
    "profile_image": "https://jina-ai-gmbh.ghost.io/content/images/2022/11/profile_low_quality.jpeg",
    "cover_image": null,
    "bio": "ML Scientist and Engineer @ Jina AI. Enthusiastic about open source and AI with particular interest in solving information retrieval problems.",
    "website": "https://github.com/guenthermi",
    "location": "Berlin",
    "facebook": null,
    "twitter": null,
    "meta_title": null,
    "meta_description": null,
    "url": "https://jina-ai-gmbh.ghost.io/author/michael/"
  },
  "primary_tag": {
    "id": "634a1a8ccebfc1003d8ab706",
    "name": "Tech Blog",
    "slug": "tech-blog",
    "description": null,
    "feature_image": null,
    "visibility": "public",
    "og_image": null,
    "og_title": null,
    "og_description": null,
    "twitter_image": null,
    "twitter_title": null,
    "twitter_description": null,
    "meta_title": null,
    "meta_description": null,
    "codeinjection_head": null,
    "codeinjection_foot": null,
    "canonical_url": null,
    "accent_color": null,
    "url": "https://jina-ai-gmbh.ghost.io/tag/tech-blog/"
  },
  "url": "https://jina-ai-gmbh.ghost.io/podcast/query-expansion-with-llms-searching-better-by-saying-more/",
  "excerpt": "La recherche a beaucoup évolué depuis l'introduction des modèles d'embedding. Les techniques lexicales comme l'expansion de requêtes ont-elles encore un rôle à jouer dans l'IA ? Nous pensons que oui.",
  "reading_time": 9,
  "access": true,
  "comments": false,
  "og_image": null,
  "og_title": null,
  "og_description": null,
  "twitter_image": null,
  "twitter_title": null,
  "twitter_description": null,
  "meta_title": null,
  "meta_description": null,
  "email_subject": null,
  "frontmatter": null,
  "feature_image_alt": null,
  "feature_image_caption": null
}
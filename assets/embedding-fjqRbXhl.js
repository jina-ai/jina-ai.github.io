import{aH as d}from"./index-CkGy-MBM.js";const s="https://embeddings-dashboard-api.jina.ai",i="https://api.jina.ai";var l=(e=>(e.UNLOADED="unloaded",e.IDLE="idle",e.LOADING="loading",e.LOADED="loaded",e.ERROR="error",e.UNSUPPORTED="unsupported",e.EXPIRED="expired",e.CLEANUP="cleanup",e))(l||{}),p=(e=>(e.CONSUME="consume",e.PURCHASE="purchase",e.TRIAL="trial",e))(p||{}),u=(e=>(e.IN_PROGRESS="in-progress",e.FAILED="failed",e.COMPLETED="completed",e))(u||{});const h=["price_1PqrlqEoTOtb5eZvFh1Vhdm6","price_1PqrnpEoTOtb5eZv3woXVYU1"],y=d("embedding",{state:()=>({apiKey:"",apiKeyInfo:void 0,isApiKeyLoading:!1,isApiKeyInfoLoading:!1,models:[],allModels:[],products:[],testData:[],userDocuments:"",userSearchDocs:"",userVisualizeDocs:"",showMaximized:!1,classifiers:[],task:"",turnstileState:"unloaded"}),persist:{paths:["apiKey","testData","apiKeyInfo"]},getters:{baseEnModel:e=>e.models.find(r=>r.name==="jina-embeddings-v2-base-en"),jinaRerankerV1:e=>e.models.find(r=>r.name==="jina-reranker-v1-base-en"),jinaRerankerMultilingual:e=>e.models.find(r=>r.name==="jina-reranker-v2-base-multilingual"),clipV1:e=>e.models.find(r=>r.name==="jina-clip-v1"),defaultEmbeddingModel:e=>e.models.find(r=>r.name==="jina-embeddings-v3"),baseZhModel:e=>e.models.find(r=>r.name==="jina-embeddings-v2-base-zh"),baseDeModel:e=>e.models.find(r=>r.name==="jina-embeddings-v2-base-de"),embeddingsV3:e=>e.models.find(r=>r.name==="jina-embeddings-v3"),newModels:e=>e.models.filter(r=>new Date().getTime()-new Date(r.created_at).getTime()<1e3*60*60*24*30).map(r=>r.name),apiKeyTokens:e=>{var r,t;return(t=(r=e.apiKeyInfo)==null?void 0:r.wallet.total_balance)!=null?t:0},isPaidUser:e=>{var r;return!!((r=e.apiKeyInfo)!=null&&r.email)},isPremiumPaidUser:e=>{var r,t;return!!((r=e.apiKeyInfo)!=null&&r.email)&&((t=e.apiKeyInfo)==null?void 0:t.metadata.speed_level)===2},isAutoCharge:e=>{var r,t;return!!((r=e.apiKeyInfo)!=null&&r.email)||((t=e.apiKeyInfo)==null?void 0:t.metadata.auto_recharge)}},actions:{setApiKeyInfo(e){e&&(this.apiKeyInfo=JSON.parse(JSON.stringify(e)))},async getReplicas(e,r){try{const t=await fetch(`${s}/api/v1/models/slug/${r}`,{method:"GET"});if(!t.ok)throw new Error(`getReplicas error! Status: ${t.status}`);return(await t.json()).num_replicas}catch(t){console.error("getReplicas error:",t)}},async generateApiKey(e){this.isApiKeyLoading=!0;const r=new FormData;r.set("cf-turnstile-response",e);try{const t=await fetch(`${s}/api/v1/api_key`,{method:"POST",body:r});if(!t.ok)throw new Error(`getApiKey error! Status: ${t.status}`);const a=await t.json();return this.apiKey=a.api_key,!0}catch(t){return console.error("getApiKey error:",t),!1}finally{this.isApiKeyLoading=!1}},async generate0TokenApiKey(e){this.isApiKeyLoading=!0;const r=new FormData;r.set("cf-turnstile-response",e);try{const t=await fetch(`${s}/api/v1/api_key/empty`,{method:"POST",body:r});if(!t.ok)throw new Error(`getApiKey error! Status: ${t.status}`);return(await t.json()).api_key}catch(t){return console.error("getApiKey error:",t),!1}finally{this.isApiKeyLoading=!1}},async revokeApiKey(e){const r=new FormData;r.set("cf-turnstile-response",e);try{const t=await fetch(`${s}/api/v1/api_key`,{method:"DELETE",body:r});if(!t.ok)throw new Error(`revokeApiKey error! Status: ${t.status}`)}catch(t){return console.error("revokeApiKey error:",t),!1}finally{this.isApiKeyLoading=!1}},async getCurrentKeyInfo(){this.isApiKeyInfoLoading=!0;try{const e=await fetch(`${s}/api/v1/api_key/user?api_key=${this.apiKey}`);if(e.ok){this.apiKeyInfo=await e.json();return}this.apiKeyInfo=void 0,console.error(`getTokens error! Status: ${e.status}`)}catch(e){this.apiKeyInfo=void 0,console.error("getTokens error:",e)}finally{this.isApiKeyInfoLoading=!1}},async getKeyInfo(e){if(e){this.isApiKeyInfoLoading=!0;try{const r=await fetch(`${s}/api/v1/api_key/user?api_key=${e}`);return r.ok?await r.json():void 0}catch{return}finally{this.isApiKeyInfoLoading=!1}}},async getModels(e=[]){try{let r=`${s}/api/v1/models`;e.length&&(r=`${r}?${e.map(o=>`tag=${o}`).join("&")}`);const t=await fetch(r);if(!t.ok)throw new Error(`getModels error! Status: ${t.status}`);const a=await t.json();e.length?this.models=a:this.allModels=a,console.log("getModels data:",a)}catch(r){console.error("getModels error:",r)}},async getProducts(){try{const e=await fetch(`${s}/api/v1/product`);if(!e.ok)throw new Error(`getProducts error! Status: ${e.status}`);const r=(await e.json()).filter(t=>h.includes(t.price_id));r.unshift({id:"0",product_id:"0",product_name:"1M tokens",product_description:"A pack of 1 million tokens",price:0,price_id:"0",currency:"USD",token_quantity:1e6}),console.log("getProducts data:",r),this.products=r}catch(e){console.error("getProducts error:",e)}},async getUsage(e){try{const r=await fetch(`${s}/api/v1/billing/transaction`,{headers:{Authorization:`Bearer ${e}`}});if(!r.ok)throw new Error(`getUsage error! Status: ${r.status}`);return await r.json()}catch(r){console.error("getUsage error:",r)}},async getLatestUsage(e){try{const r=await fetch(`${s}/api/v1/billing/paginated_transaction?num_records=1`,{headers:{Authorization:`Bearer ${e}`}});if(!r.ok)throw new Error(`getUsage error! Status: ${r.status}`);return(await r.json())[0]}catch(r){console.error("getUsage error:",r)}},async checkoutWithStripe(e,r){try{const t=await fetch(`${s}/api/v1/checkout_session`,{headers:{Authorization:`Bearer ${e}`,"Content-Type":"application/json"},method:"POST",body:JSON.stringify(r),mode:"cors",credentials:"include"});if(!t.ok)throw new Error(`checkoutWithStripe error! Status: ${t.status}`);return await t.json()}catch(t){console.error("checkoutWithStripe error:",t)}},async bulkEmbedding(e,r){var n,c;const t={accept:"application/json",Authorization:`Bearer ${e}`},a=new FormData;a.append("model",r.model),a.append("email",(n=r.email)!=null?n:""),a.append("file",r.file);const o=await fetch(`${i}/v1/bulk-embeddings`,{method:"POST",headers:t,body:a});if(o.ok)return await o.json();throw new Error(`${o.status}: ${o.statusText||((c=await o.json())==null?void 0:c.detail)}`)},async checkBulk(e,r){var o;const t={accept:"application/json",Authorization:`Bearer ${e}`},a=await fetch(`${i}/v1/bulk-embeddings/${r}`,{method:"GET",headers:t});if(a.ok)return await a.json();throw new Error(`${a.status}: ${a.statusText||((o=await a.json())==null?void 0:o.detail)}`)},async getBulkResult(e,r){var o;const t={accept:"application/json",Authorization:`Bearer ${e}`},a=await fetch(`${i}/v1/bulk-embeddings/${r}/download-result`,{method:"POST",headers:t});if(a.ok){const{download_url:n}=await a.json();return n}else throw new Error(`${a.status}: ${a.statusText||((o=await a.json())==null?void 0:o.detail)}`)},async cancelAutoRecharge(e){const r=await fetch(`${s}/api/v1/cancel_auto_recharge`,{method:"POST",headers:{accept:"application/json",Authorization:`Bearer ${e}`}});if(r.ok)return!0;throw new Error(`Disable auto-recharge error! Status: ${r.status}`)},async getClassifiers(e){try{const r={accept:"application/json",Authorization:`Bearer ${e}`},t=await fetch(`${s}/api/v1/classifiers`,{method:"GET",headers:r});if(!t.ok)throw new Error(`getModels error! Status: ${t.status}`);const a=await t.json();this.classifiers=a}catch(r){console.error("getModels error:",r)}}}});export{u as B,i as S,l as T,p as a,y as u};

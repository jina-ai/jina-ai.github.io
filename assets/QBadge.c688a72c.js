import{k as i,h as o,i as l,D as c,a_ as d,a4 as u}from"./index.bd0a8f3f.js";var b=i({name:"QToolbar",props:{inset:Boolean},setup(e,{slots:t}){const r=o(()=>"q-toolbar row no-wrap items-center"+(e.inset===!0?" q-toolbar--inset":""));return()=>l("div",{class:r.value,role:"toolbar"},c(t.default))}});const a="https://embeddings-dashboard-api.jina.ai";var g=(e=>(e.CONSUME="consume",e.PURCHASE="purchase",e.TRIAL="trial",e))(g||{});const w=d("embedding",{state:()=>({apiKey:"",models:[],products:[],testData:[]}),persist:{paths:["apiKey","testData"]},getters:{baseEnModel:e=>e.models.find(t=>t.name==="jina-embeddings-v2-base-en"),baseZhModel:e=>e.models.find(t=>t.name==="jina-embeddings-v2-base-zh"),baseDeModel:e=>e.models.find(t=>t.name==="jina-embeddings-v2-base-de"),newModels:e=>e.models.filter(t=>new Date().getTime()-new Date(t.created_at).getTime()<1e3*60*60*24*30).map(t=>t.name)},actions:{async getApiKey(){try{const e=await fetch(`${a}/api/v1/api_key`,{method:"POST"});if(!e.ok)throw new Error(`getApiKey error! Status: ${e.status}`);const t=await e.json();return this.apiKey=t.api_key,!0}catch(e){return console.error("getApiKey error:",e),!1}},async getTokens(e){try{const t=await fetch(`${a}/api/v1/api_key/user?api_key=${e}`);if(!t.ok)throw new Error(`getTokens error! Status: ${t.status}`);return(await t.json()).wallet.total_balance}catch(t){console.error("getTokens error:",t)}},async getModels(){try{const e=await fetch(`${a}/api/v1/models`);if(!e.ok)throw new Error(`getModels error! Status: ${e.status}`);const t=await e.json();this.models=t}catch(e){console.error("getModels error:",e)}},async getProducts(){try{const e=await fetch(`${a}/api/v1/product`);if(!e.ok)throw new Error(`getProducts error! Status: ${e.status}`);const t=await e.json();this.products=t}catch(e){console.error("getProducts error:",e)}},async getUsage(e){try{const t=await fetch(`${a}/api/v1/billing/transaction`,{headers:{Authorization:`Bearer ${e}`}});if(!t.ok)throw new Error(`getUsage error! Status: ${t.status}`);return await t.json()}catch(t){console.error("getUsage error:",t)}},async checkoutWithStripe(e,t){try{const r=await fetch(`${a}/api/v1/checkout_session`,{headers:{Authorization:`Bearer ${e}`,"Content-Type":"application/json"},method:"POST",body:JSON.stringify(t),mode:"cors",credentials:"include"});if(!r.ok)throw new Error(`checkoutWithStripe error! Status: ${r.status}`);return await r.json()}catch(r){console.error("checkoutWithStripe error:",r)}}}}),h=["top","middle","bottom"];var y=i({name:"QBadge",props:{color:String,textColor:String,floating:Boolean,transparent:Boolean,multiLine:Boolean,outline:Boolean,rounded:Boolean,label:[Number,String],align:{type:String,validator:e=>h.includes(e)}},setup(e,{slots:t}){const r=o(()=>e.align!==void 0?{verticalAlign:e.align}:null),n=o(()=>{const s=e.outline===!0&&e.color||e.textColor;return`q-badge flex inline items-center no-wrap q-badge--${e.multiLine===!0?"multi":"single"}-line`+(e.outline===!0?" q-badge--outline":e.color!==void 0?` bg-${e.color}`:"")+(s!==void 0?` text-${s}`:"")+(e.floating===!0?" q-badge--floating":"")+(e.rounded===!0?" q-badge--rounded":"")+(e.transparent===!0?" q-badge--transparent":"")});return()=>l("div",{class:n.value,style:r.value,role:"status","aria-label":e.label},u(t.default,e.label!==void 0?[e.label]:[]))}});export{y as Q,g as T,b as a,w as u};

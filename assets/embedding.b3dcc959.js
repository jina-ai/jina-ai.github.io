import{b8 as c}from"./index.c14ff02f.js";const o="https://embeddings-dashboard-api.jina.ai",n="https://api.jina.ai";var d=(t=>(t.CONSUME="consume",t.PURCHASE="purchase",t.TRIAL="trial",t))(d||{}),u=(t=>(t.IN_PROGRESS="in-progress",t.FAILED="failed",t.COMPLETED="completed",t))(u||{});const l=["price_1OPN9mEoTOtb5eZvzwg42kde","price_1OPNDjEoTOtb5eZvSaakR9th"],h=c("embedding",{state:()=>({apiKey:"",models:[],products:[],testData:[],userDocuments:"",userSearchDocs:"",userVisualizeDocs:""}),persist:{paths:["apiKey","testData"]},getters:{baseEnModel:t=>t.models.find(e=>e.name==="jina-embeddings-v2-base-en"),jinaRerankerV1:t=>t.models.find(e=>e.name==="jina-reranker-v1-base-en"),baseZhModel:t=>t.models.find(e=>e.name==="jina-embeddings-v2-base-zh"),baseDeModel:t=>t.models.find(e=>e.name==="jina-embeddings-v2-base-de"),newModels:t=>t.models.filter(e=>new Date().getTime()-new Date(e.created_at).getTime()<1e3*60*60*24*30).map(e=>e.name)},actions:{async getReplicas(t,e){try{const r=await fetch(`${o}/api/v1/models/slug/${e}`,{method:"GET"});if(!r.ok)throw new Error(`getReplicas error! Status: ${r.status}`);return(await r.json()).num_replicas}catch(r){console.error("getReplicas error:",r)}},async getApiKey(){try{const t=await fetch(`${o}/api/v1/api_key`,{method:"POST"});if(!t.ok)throw new Error(`getApiKey error! Status: ${t.status}`);const e=await t.json();return this.apiKey=e.api_key,!0}catch(t){return console.error("getApiKey error:",t),!1}},async getTokens(t){try{const e=await fetch(`${o}/api/v1/api_key/user?api_key=${t}`);if(!e.ok)throw new Error(`getTokens error! Status: ${e.status}`);return(await e.json()).wallet.total_balance}catch(e){console.error("getTokens error:",e)}},async getModels(t){try{const e=await fetch(`${o}/api/v1/models`);if(!e.ok)throw new Error(`getModels error! Status: ${e.status}`);const r=await e.json();this.models=r,console.log("getModels data:",r)}catch(e){console.error("getModels error:",e)}},async getProducts(){try{const t=await fetch(`${o}/api/v1/product`);if(!t.ok)throw new Error(`getProducts error! Status: ${t.status}`);let e=await t.json();e=e.filter(r=>l.includes(r.price_id)),e.unshift({id:"0",product_id:"0",product_name:"1M tokens",product_description:"A pack of 1 million tokens",price:0,price_id:"0",currency:"USD",token_quantity:1e6}),console.log("getProducts data:",e),this.products=e}catch(t){console.error("getProducts error:",t)}},async getUsage(t){try{const e=await fetch(`${o}/api/v1/billing/transaction`,{headers:{Authorization:`Bearer ${t}`}});if(!e.ok)throw new Error(`getUsage error! Status: ${e.status}`);return await e.json()}catch(e){console.error("getUsage error:",e)}},async checkoutWithStripe(t,e){try{const r=await fetch(`${o}/api/v1/checkout_session`,{headers:{Authorization:`Bearer ${t}`,"Content-Type":"application/json"},method:"POST",body:JSON.stringify(e),mode:"cors",credentials:"include"});if(!r.ok)throw new Error(`checkoutWithStripe error! Status: ${r.status}`);return await r.json()}catch(r){console.error("checkoutWithStripe error:",r)}},async bulkEmbedding(t,e){var i;const r={accept:"application/json",Authorization:`Bearer ${t}`},a=new FormData;a.append("model",e.model),a.append("email",(i=e.email)!=null?i:""),a.append("file",e.file);const s=await fetch(`${n}/v1/bulk-embeddings`,{method:"POST",headers:r,body:a});if(s.ok)return await s.json();throw new Error(`${s.status}: ${s.statusText}`)},async checkBulk(t,e){const r={accept:"application/json",Authorization:`Bearer ${t}`},a=await fetch(`${n}/v1/bulk-embeddings/${e}`,{method:"GET",headers:r});if(a.ok)return await a.json();throw new Error(`${a.status}: ${a.statusText}`)},async getBulkResult(t,e){const r={accept:"application/json",Authorization:`Bearer ${t}`},a=await fetch(`${n}/v1/bulk-embeddings/${e}/download-result`,{method:"POST",headers:r});if(a.ok){const{download_url:s}=await a.json();return s}else throw new Error(`${a.status}: ${a.statusText}`)}}});export{u as B,d as T,h as u};

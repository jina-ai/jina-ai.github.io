import{k as o,h as s,i as n,D as i,aW as c}from"./index.5cd67b5e.js";var l=o({name:"QToolbar",props:{inset:Boolean},setup(e,{slots:t}){const r=s(()=>"q-toolbar row no-wrap items-center"+(e.inset===!0?" q-toolbar--inset":""));return()=>n("div",{class:r.value,role:"toolbar"},i(t.default))}});const a="https://embeddings-dashboard-api.jina.ai";var d=(e=>(e.CONSUME="consume",e.PURCHASE="purchase",e.TRIAL="trial",e))(d||{});const h=c("embedding",{state:()=>({apiKey:"",models:[],products:[],testData:[]}),persist:{paths:["apiKey","testData"]},getters:{baseEnModel:e=>e.models.find(t=>t.name==="jina-embeddings-v2-base-en"),baseZhModel:e=>e.models.find(t=>t.name==="jina-embeddings-v2-base-zh"),baseDeModel:e=>e.models.find(t=>t.name==="jina-embeddings-v2-base-de"),newModels:e=>e.models.filter(t=>new Date().getTime()-new Date(t.created_at).getTime()<1e3*60*60*24*30).map(t=>t.name)},actions:{async getApiKey(){try{const e=await fetch(`${a}/api/v1/api_key`,{method:"POST"});if(!e.ok)throw new Error(`getApiKey error! Status: ${e.status}`);const t=await e.json();return this.apiKey=t.api_key,!0}catch(e){return console.error("getApiKey error:",e),!1}},async getTokens(e){try{const t=await fetch(`${a}/api/v1/api_key/user?api_key=${e}`);if(!t.ok)throw new Error(`getTokens error! Status: ${t.status}`);return(await t.json()).wallet.total_balance}catch(t){console.error("getTokens error:",t)}},async getModels(){try{const e=await fetch(`${a}/api/v1/models`);if(!e.ok)throw new Error(`getModels error! Status: ${e.status}`);const t=await e.json();this.models=t}catch(e){console.error("getModels error:",e)}},async getProducts(){try{const e=await fetch(`${a}/api/v1/product`);if(!e.ok)throw new Error(`getProducts error! Status: ${e.status}`);const t=await e.json();this.products=t}catch(e){console.error("getProducts error:",e)}},async getUsage(e){try{const t=await fetch(`${a}/api/v1/billing/transaction`,{headers:{Authorization:`Bearer ${e}`}});if(!t.ok)throw new Error(`getUsage error! Status: ${t.status}`);return await t.json()}catch(t){console.error("getUsage error:",t)}},async checkoutWithStripe(e,t){try{const r=await fetch(`${a}/api/v1/checkout_session`,{headers:{Authorization:`Bearer ${e}`,"Content-Type":"application/json"},method:"POST",body:JSON.stringify(t),mode:"cors",credentials:"include"});if(!r.ok)throw new Error(`checkoutWithStripe error! Status: ${r.status}`);return await r.json()}catch(r){console.error("checkoutWithStripe error:",r)}}}});export{l as Q,d as T,h as u};
